Version 3.2 HI-TECH Software Intermediate Code
[v F841 `(v ~T0 @X0 1 tf1`ul ]
"152 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic.h
[v __delay `JF841 ~T0 @X0 0 e ]
[p i __delay ]
"383 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic12f683.h
[v _TMR1 `Vus ~T0 @X0 0 e@14 ]
[p mainexit ]
"1109
[v _OSCCON `Vuc ~T0 @X0 0 e@143 ]
"879
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"404
[v _T1CON `Vuc ~T0 @X0 0 e@16 ]
"1226
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"488
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"580
[v _CCP1CON `Vuc ~T0 @X0 0 e@21 ]
"697
[v _CMCON0 `Vuc ~T0 @X0 0 e@25 ]
"1718
[v _ANSEL `Vuc ~T0 @X0 0 e@159 ]
"789
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"1233
[v _WPU `Vuc ~T0 @X0 0 e@149 ]
"949
[v _TRISIO `Vuc ~T0 @X0 0 e@133 ]
"9 main.c
[p x FOSC=INTOSCIO ]
"10
[p x WDTE=OFF ]
"11
[p x PWRTE=OFF ]
"12
[p x MCLRE=OFF ]
"13
[p x CP=OFF ]
"14
[p x CPD=OFF ]
"15
[p x BOREN=OFF ]
"16
[p x IESO=OFF ]
"17
[p x FCMEN=OFF ]
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic12f683.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic12f683.h
[; ;pic12f683.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic12f683.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic12f683.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic12f683.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic12f683.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic12f683.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic12f683.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic12f683.h: 76: typedef union {
[; ;pic12f683.h: 77: struct {
[; ;pic12f683.h: 78: unsigned C :1;
[; ;pic12f683.h: 79: unsigned DC :1;
[; ;pic12f683.h: 80: unsigned Z :1;
[; ;pic12f683.h: 81: unsigned nPD :1;
[; ;pic12f683.h: 82: unsigned nTO :1;
[; ;pic12f683.h: 83: unsigned RP :2;
[; ;pic12f683.h: 84: unsigned IRP :1;
[; ;pic12f683.h: 85: };
[; ;pic12f683.h: 86: struct {
[; ;pic12f683.h: 87: unsigned :5;
[; ;pic12f683.h: 88: unsigned RP0 :1;
[; ;pic12f683.h: 89: unsigned RP1 :1;
[; ;pic12f683.h: 90: };
[; ;pic12f683.h: 91: struct {
[; ;pic12f683.h: 92: unsigned CARRY :1;
[; ;pic12f683.h: 93: unsigned :1;
[; ;pic12f683.h: 94: unsigned ZERO :1;
[; ;pic12f683.h: 95: };
[; ;pic12f683.h: 96: } STATUSbits_t;
[; ;pic12f683.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic12f683.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic12f683.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic12f683.h: 164: extern volatile unsigned char GPIO @ 0x005;
"166
[; ;pic12f683.h: 166: asm("GPIO equ 05h");
[; <" GPIO equ 05h ;# ">
[; ;pic12f683.h: 169: typedef union {
[; ;pic12f683.h: 170: struct {
[; ;pic12f683.h: 171: unsigned GP0 :1;
[; ;pic12f683.h: 172: unsigned GP1 :1;
[; ;pic12f683.h: 173: unsigned GP2 :1;
[; ;pic12f683.h: 174: unsigned GP3 :1;
[; ;pic12f683.h: 175: unsigned GP4 :1;
[; ;pic12f683.h: 176: unsigned GP5 :1;
[; ;pic12f683.h: 177: };
[; ;pic12f683.h: 178: } GPIObits_t;
[; ;pic12f683.h: 179: extern volatile GPIObits_t GPIObits @ 0x005;
[; ;pic12f683.h: 214: extern volatile unsigned char PCLATH @ 0x00A;
"216
[; ;pic12f683.h: 216: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic12f683.h: 219: typedef union {
[; ;pic12f683.h: 220: struct {
[; ;pic12f683.h: 221: unsigned PCLATH :5;
[; ;pic12f683.h: 222: };
[; ;pic12f683.h: 223: } PCLATHbits_t;
[; ;pic12f683.h: 224: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic12f683.h: 234: extern volatile unsigned char INTCON @ 0x00B;
"236
[; ;pic12f683.h: 236: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic12f683.h: 239: typedef union {
[; ;pic12f683.h: 240: struct {
[; ;pic12f683.h: 241: unsigned GPIF :1;
[; ;pic12f683.h: 242: unsigned INTF :1;
[; ;pic12f683.h: 243: unsigned T0IF :1;
[; ;pic12f683.h: 244: unsigned GPIE :1;
[; ;pic12f683.h: 245: unsigned INTE :1;
[; ;pic12f683.h: 246: unsigned T0IE :1;
[; ;pic12f683.h: 247: unsigned PEIE :1;
[; ;pic12f683.h: 248: unsigned GIE :1;
[; ;pic12f683.h: 249: };
[; ;pic12f683.h: 250: struct {
[; ;pic12f683.h: 251: unsigned :2;
[; ;pic12f683.h: 252: unsigned TMR0IF :1;
[; ;pic12f683.h: 253: unsigned :2;
[; ;pic12f683.h: 254: unsigned TMR0IE :1;
[; ;pic12f683.h: 255: };
[; ;pic12f683.h: 256: } INTCONbits_t;
[; ;pic12f683.h: 257: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic12f683.h: 312: extern volatile unsigned char PIR1 @ 0x00C;
"314
[; ;pic12f683.h: 314: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic12f683.h: 317: typedef union {
[; ;pic12f683.h: 318: struct {
[; ;pic12f683.h: 319: unsigned TMR1IF :1;
[; ;pic12f683.h: 320: unsigned TMR2IF :1;
[; ;pic12f683.h: 321: unsigned OSFIF :1;
[; ;pic12f683.h: 322: unsigned CMIF :1;
[; ;pic12f683.h: 323: unsigned :1;
[; ;pic12f683.h: 324: unsigned CCP1IF :1;
[; ;pic12f683.h: 325: unsigned ADIF :1;
[; ;pic12f683.h: 326: unsigned EEIF :1;
[; ;pic12f683.h: 327: };
[; ;pic12f683.h: 328: struct {
[; ;pic12f683.h: 329: unsigned T1IF :1;
[; ;pic12f683.h: 330: unsigned T2IF :1;
[; ;pic12f683.h: 331: };
[; ;pic12f683.h: 332: } PIR1bits_t;
[; ;pic12f683.h: 333: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic12f683.h: 383: extern volatile unsigned short TMR1 @ 0x00E;
"385
[; ;pic12f683.h: 385: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic12f683.h: 390: extern volatile unsigned char TMR1L @ 0x00E;
"392
[; ;pic12f683.h: 392: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic12f683.h: 397: extern volatile unsigned char TMR1H @ 0x00F;
"399
[; ;pic12f683.h: 399: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic12f683.h: 404: extern volatile unsigned char T1CON @ 0x010;
"406
[; ;pic12f683.h: 406: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic12f683.h: 409: typedef union {
[; ;pic12f683.h: 410: struct {
[; ;pic12f683.h: 411: unsigned TMR1ON :1;
[; ;pic12f683.h: 412: unsigned TMR1CS :1;
[; ;pic12f683.h: 413: unsigned nT1SYNC :1;
[; ;pic12f683.h: 414: unsigned T1OSCEN :1;
[; ;pic12f683.h: 415: unsigned T1CKPS :2;
[; ;pic12f683.h: 416: unsigned TMR1GE :1;
[; ;pic12f683.h: 417: unsigned T1GINV :1;
[; ;pic12f683.h: 418: };
[; ;pic12f683.h: 419: struct {
[; ;pic12f683.h: 420: unsigned :4;
[; ;pic12f683.h: 421: unsigned T1CKPS0 :1;
[; ;pic12f683.h: 422: unsigned T1CKPS1 :1;
[; ;pic12f683.h: 423: unsigned T1GE :1;
[; ;pic12f683.h: 424: };
[; ;pic12f683.h: 425: } T1CONbits_t;
[; ;pic12f683.h: 426: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic12f683.h: 481: extern volatile unsigned char TMR2 @ 0x011;
"483
[; ;pic12f683.h: 483: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic12f683.h: 488: extern volatile unsigned char T2CON @ 0x012;
"490
[; ;pic12f683.h: 490: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic12f683.h: 493: typedef union {
[; ;pic12f683.h: 494: struct {
[; ;pic12f683.h: 495: unsigned T2CKPS :2;
[; ;pic12f683.h: 496: unsigned TMR2ON :1;
[; ;pic12f683.h: 497: unsigned TOUTPS :4;
[; ;pic12f683.h: 498: };
[; ;pic12f683.h: 499: struct {
[; ;pic12f683.h: 500: unsigned T2CKPS0 :1;
[; ;pic12f683.h: 501: unsigned T2CKPS1 :1;
[; ;pic12f683.h: 502: unsigned :1;
[; ;pic12f683.h: 503: unsigned TOUTPS0 :1;
[; ;pic12f683.h: 504: unsigned TOUTPS1 :1;
[; ;pic12f683.h: 505: unsigned TOUTPS2 :1;
[; ;pic12f683.h: 506: unsigned TOUTPS3 :1;
[; ;pic12f683.h: 507: };
[; ;pic12f683.h: 508: } T2CONbits_t;
[; ;pic12f683.h: 509: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic12f683.h: 559: extern volatile unsigned short CCPR1 @ 0x013;
"561
[; ;pic12f683.h: 561: asm("CCPR1 equ 013h");
[; <" CCPR1 equ 013h ;# ">
[; ;pic12f683.h: 566: extern volatile unsigned char CCPR1L @ 0x013;
"568
[; ;pic12f683.h: 568: asm("CCPR1L equ 013h");
[; <" CCPR1L equ 013h ;# ">
[; ;pic12f683.h: 573: extern volatile unsigned char CCPR1H @ 0x014;
"575
[; ;pic12f683.h: 575: asm("CCPR1H equ 014h");
[; <" CCPR1H equ 014h ;# ">
[; ;pic12f683.h: 580: extern volatile unsigned char CCP1CON @ 0x015;
"582
[; ;pic12f683.h: 582: asm("CCP1CON equ 015h");
[; <" CCP1CON equ 015h ;# ">
[; ;pic12f683.h: 585: typedef union {
[; ;pic12f683.h: 586: struct {
[; ;pic12f683.h: 587: unsigned CCP1M :4;
[; ;pic12f683.h: 588: unsigned DC1B :2;
[; ;pic12f683.h: 589: };
[; ;pic12f683.h: 590: struct {
[; ;pic12f683.h: 591: unsigned CCP1M0 :1;
[; ;pic12f683.h: 592: unsigned CCP1M1 :1;
[; ;pic12f683.h: 593: unsigned CCP1M2 :1;
[; ;pic12f683.h: 594: unsigned CCP1M3 :1;
[; ;pic12f683.h: 595: unsigned DC1B0 :1;
[; ;pic12f683.h: 596: unsigned DC1B1 :1;
[; ;pic12f683.h: 597: };
[; ;pic12f683.h: 598: } CCP1CONbits_t;
[; ;pic12f683.h: 599: extern volatile CCP1CONbits_t CCP1CONbits @ 0x015;
[; ;pic12f683.h: 644: extern volatile unsigned char WDTCON @ 0x018;
"646
[; ;pic12f683.h: 646: asm("WDTCON equ 018h");
[; <" WDTCON equ 018h ;# ">
[; ;pic12f683.h: 649: typedef union {
[; ;pic12f683.h: 650: struct {
[; ;pic12f683.h: 651: unsigned SWDTEN :1;
[; ;pic12f683.h: 652: unsigned WDTPS :4;
[; ;pic12f683.h: 653: };
[; ;pic12f683.h: 654: struct {
[; ;pic12f683.h: 655: unsigned :1;
[; ;pic12f683.h: 656: unsigned WDTPS0 :1;
[; ;pic12f683.h: 657: unsigned WDTPS1 :1;
[; ;pic12f683.h: 658: unsigned WDTPS2 :1;
[; ;pic12f683.h: 659: unsigned WDTPS3 :1;
[; ;pic12f683.h: 660: };
[; ;pic12f683.h: 661: } WDTCONbits_t;
[; ;pic12f683.h: 662: extern volatile WDTCONbits_t WDTCONbits @ 0x018;
[; ;pic12f683.h: 697: extern volatile unsigned char CMCON0 @ 0x019;
"699
[; ;pic12f683.h: 699: asm("CMCON0 equ 019h");
[; <" CMCON0 equ 019h ;# ">
[; ;pic12f683.h: 702: typedef union {
[; ;pic12f683.h: 703: struct {
[; ;pic12f683.h: 704: unsigned CM :3;
[; ;pic12f683.h: 705: unsigned CIS :1;
[; ;pic12f683.h: 706: unsigned CINV :1;
[; ;pic12f683.h: 707: unsigned :1;
[; ;pic12f683.h: 708: unsigned COUT :1;
[; ;pic12f683.h: 709: };
[; ;pic12f683.h: 710: struct {
[; ;pic12f683.h: 711: unsigned CM0 :1;
[; ;pic12f683.h: 712: unsigned CM1 :1;
[; ;pic12f683.h: 713: unsigned CM2 :1;
[; ;pic12f683.h: 714: };
[; ;pic12f683.h: 715: } CMCON0bits_t;
[; ;pic12f683.h: 716: extern volatile CMCON0bits_t CMCON0bits @ 0x019;
[; ;pic12f683.h: 756: extern volatile unsigned char CMCON1 @ 0x01A;
"758
[; ;pic12f683.h: 758: asm("CMCON1 equ 01Ah");
[; <" CMCON1 equ 01Ah ;# ">
[; ;pic12f683.h: 761: typedef union {
[; ;pic12f683.h: 762: struct {
[; ;pic12f683.h: 763: unsigned CMSYNC :1;
[; ;pic12f683.h: 764: unsigned T1GSS :1;
[; ;pic12f683.h: 765: };
[; ;pic12f683.h: 766: } CMCON1bits_t;
[; ;pic12f683.h: 767: extern volatile CMCON1bits_t CMCON1bits @ 0x01A;
[; ;pic12f683.h: 782: extern volatile unsigned char ADRESH @ 0x01E;
"784
[; ;pic12f683.h: 784: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic12f683.h: 789: extern volatile unsigned char ADCON0 @ 0x01F;
"791
[; ;pic12f683.h: 791: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic12f683.h: 794: typedef union {
[; ;pic12f683.h: 795: struct {
[; ;pic12f683.h: 796: unsigned ADON :1;
[; ;pic12f683.h: 797: unsigned GO_nDONE :1;
[; ;pic12f683.h: 798: unsigned CHS :2;
[; ;pic12f683.h: 799: unsigned :2;
[; ;pic12f683.h: 800: unsigned VCFG :1;
[; ;pic12f683.h: 801: unsigned ADFM :1;
[; ;pic12f683.h: 802: };
[; ;pic12f683.h: 803: struct {
[; ;pic12f683.h: 804: unsigned :1;
[; ;pic12f683.h: 805: unsigned GO :1;
[; ;pic12f683.h: 806: unsigned CHS0 :1;
[; ;pic12f683.h: 807: unsigned CHS1 :1;
[; ;pic12f683.h: 808: unsigned CHS2 :1;
[; ;pic12f683.h: 809: };
[; ;pic12f683.h: 810: struct {
[; ;pic12f683.h: 811: unsigned :1;
[; ;pic12f683.h: 812: unsigned nDONE :1;
[; ;pic12f683.h: 813: };
[; ;pic12f683.h: 814: struct {
[; ;pic12f683.h: 815: unsigned :1;
[; ;pic12f683.h: 816: unsigned GO_DONE :1;
[; ;pic12f683.h: 817: };
[; ;pic12f683.h: 818: } ADCON0bits_t;
[; ;pic12f683.h: 819: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic12f683.h: 879: extern volatile unsigned char OPTION_REG @ 0x081;
"881
[; ;pic12f683.h: 881: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic12f683.h: 884: typedef union {
[; ;pic12f683.h: 885: struct {
[; ;pic12f683.h: 886: unsigned PS :3;
[; ;pic12f683.h: 887: unsigned PSA :1;
[; ;pic12f683.h: 888: unsigned T0SE :1;
[; ;pic12f683.h: 889: unsigned T0CS :1;
[; ;pic12f683.h: 890: unsigned INTEDG :1;
[; ;pic12f683.h: 891: unsigned nGPPU :1;
[; ;pic12f683.h: 892: };
[; ;pic12f683.h: 893: struct {
[; ;pic12f683.h: 894: unsigned PS0 :1;
[; ;pic12f683.h: 895: unsigned PS1 :1;
[; ;pic12f683.h: 896: unsigned PS2 :1;
[; ;pic12f683.h: 897: };
[; ;pic12f683.h: 898: } OPTION_REGbits_t;
[; ;pic12f683.h: 899: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic12f683.h: 949: extern volatile unsigned char TRISIO @ 0x085;
"951
[; ;pic12f683.h: 951: asm("TRISIO equ 085h");
[; <" TRISIO equ 085h ;# ">
[; ;pic12f683.h: 954: typedef union {
[; ;pic12f683.h: 955: struct {
[; ;pic12f683.h: 956: unsigned TRISIO0 :1;
[; ;pic12f683.h: 957: unsigned TRISIO1 :1;
[; ;pic12f683.h: 958: unsigned TRISIO2 :1;
[; ;pic12f683.h: 959: unsigned TRISIO3 :1;
[; ;pic12f683.h: 960: unsigned TRISIO4 :1;
[; ;pic12f683.h: 961: unsigned TRISIO5 :1;
[; ;pic12f683.h: 962: };
[; ;pic12f683.h: 963: } TRISIObits_t;
[; ;pic12f683.h: 964: extern volatile TRISIObits_t TRISIObits @ 0x085;
[; ;pic12f683.h: 999: extern volatile unsigned char PIE1 @ 0x08C;
"1001
[; ;pic12f683.h: 1001: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic12f683.h: 1004: typedef union {
[; ;pic12f683.h: 1005: struct {
[; ;pic12f683.h: 1006: unsigned TMR1IE :1;
[; ;pic12f683.h: 1007: unsigned TMR2IE :1;
[; ;pic12f683.h: 1008: unsigned OSFIE :1;
[; ;pic12f683.h: 1009: unsigned CMIE :1;
[; ;pic12f683.h: 1010: unsigned :1;
[; ;pic12f683.h: 1011: unsigned CCP1IE :1;
[; ;pic12f683.h: 1012: unsigned ADIE :1;
[; ;pic12f683.h: 1013: unsigned EEIE :1;
[; ;pic12f683.h: 1014: };
[; ;pic12f683.h: 1015: struct {
[; ;pic12f683.h: 1016: unsigned T1IE :1;
[; ;pic12f683.h: 1017: unsigned T2IE :1;
[; ;pic12f683.h: 1018: };
[; ;pic12f683.h: 1019: } PIE1bits_t;
[; ;pic12f683.h: 1020: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic12f683.h: 1070: extern volatile unsigned char PCON @ 0x08E;
"1072
[; ;pic12f683.h: 1072: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic12f683.h: 1075: typedef union {
[; ;pic12f683.h: 1076: struct {
[; ;pic12f683.h: 1077: unsigned nBOD :1;
[; ;pic12f683.h: 1078: unsigned nPOR :1;
[; ;pic12f683.h: 1079: unsigned :2;
[; ;pic12f683.h: 1080: unsigned SBODEN :1;
[; ;pic12f683.h: 1081: unsigned ULPWUE :1;
[; ;pic12f683.h: 1082: };
[; ;pic12f683.h: 1083: } PCONbits_t;
[; ;pic12f683.h: 1084: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic12f683.h: 1109: extern volatile unsigned char OSCCON @ 0x08F;
"1111
[; ;pic12f683.h: 1111: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic12f683.h: 1114: typedef union {
[; ;pic12f683.h: 1115: struct {
[; ;pic12f683.h: 1116: unsigned SCS :1;
[; ;pic12f683.h: 1117: unsigned LTS :1;
[; ;pic12f683.h: 1118: unsigned HTS :1;
[; ;pic12f683.h: 1119: unsigned OSTS :1;
[; ;pic12f683.h: 1120: unsigned IRCF :3;
[; ;pic12f683.h: 1121: };
[; ;pic12f683.h: 1122: struct {
[; ;pic12f683.h: 1123: unsigned :4;
[; ;pic12f683.h: 1124: unsigned IRCF0 :1;
[; ;pic12f683.h: 1125: unsigned IRCF1 :1;
[; ;pic12f683.h: 1126: unsigned IRCF2 :1;
[; ;pic12f683.h: 1127: };
[; ;pic12f683.h: 1128: } OSCCONbits_t;
[; ;pic12f683.h: 1129: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic12f683.h: 1174: extern volatile unsigned char OSCTUNE @ 0x090;
"1176
[; ;pic12f683.h: 1176: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic12f683.h: 1179: typedef union {
[; ;pic12f683.h: 1180: struct {
[; ;pic12f683.h: 1181: unsigned TUN :5;
[; ;pic12f683.h: 1182: };
[; ;pic12f683.h: 1183: struct {
[; ;pic12f683.h: 1184: unsigned TUN0 :1;
[; ;pic12f683.h: 1185: unsigned TUN1 :1;
[; ;pic12f683.h: 1186: unsigned TUN2 :1;
[; ;pic12f683.h: 1187: unsigned TUN3 :1;
[; ;pic12f683.h: 1188: unsigned TUN4 :1;
[; ;pic12f683.h: 1189: };
[; ;pic12f683.h: 1190: } OSCTUNEbits_t;
[; ;pic12f683.h: 1191: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic12f683.h: 1226: extern volatile unsigned char PR2 @ 0x092;
"1228
[; ;pic12f683.h: 1228: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic12f683.h: 1233: extern volatile unsigned char WPU @ 0x095;
"1235
[; ;pic12f683.h: 1235: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic12f683.h: 1238: extern volatile unsigned char WPUA @ 0x095;
"1240
[; ;pic12f683.h: 1240: asm("WPUA equ 095h");
[; <" WPUA equ 095h ;# ">
[; ;pic12f683.h: 1243: typedef union {
[; ;pic12f683.h: 1244: struct {
[; ;pic12f683.h: 1245: unsigned WPU0 :1;
[; ;pic12f683.h: 1246: unsigned WPU1 :1;
[; ;pic12f683.h: 1247: unsigned WPU2 :1;
[; ;pic12f683.h: 1248: unsigned :1;
[; ;pic12f683.h: 1249: unsigned WPU4 :1;
[; ;pic12f683.h: 1250: unsigned WPU5 :1;
[; ;pic12f683.h: 1251: };
[; ;pic12f683.h: 1252: struct {
[; ;pic12f683.h: 1253: unsigned WPUA0 :1;
[; ;pic12f683.h: 1254: unsigned WPUA1 :1;
[; ;pic12f683.h: 1255: unsigned WPUA2 :1;
[; ;pic12f683.h: 1256: unsigned :1;
[; ;pic12f683.h: 1257: unsigned WPUA4 :1;
[; ;pic12f683.h: 1258: unsigned WPUA5 :1;
[; ;pic12f683.h: 1259: };
[; ;pic12f683.h: 1260: } WPUbits_t;
[; ;pic12f683.h: 1261: extern volatile WPUbits_t WPUbits @ 0x095;
[; ;pic12f683.h: 1314: typedef union {
[; ;pic12f683.h: 1315: struct {
[; ;pic12f683.h: 1316: unsigned WPU0 :1;
[; ;pic12f683.h: 1317: unsigned WPU1 :1;
[; ;pic12f683.h: 1318: unsigned WPU2 :1;
[; ;pic12f683.h: 1319: unsigned :1;
[; ;pic12f683.h: 1320: unsigned WPU4 :1;
[; ;pic12f683.h: 1321: unsigned WPU5 :1;
[; ;pic12f683.h: 1322: };
[; ;pic12f683.h: 1323: struct {
[; ;pic12f683.h: 1324: unsigned WPUA0 :1;
[; ;pic12f683.h: 1325: unsigned WPUA1 :1;
[; ;pic12f683.h: 1326: unsigned WPUA2 :1;
[; ;pic12f683.h: 1327: unsigned :1;
[; ;pic12f683.h: 1328: unsigned WPUA4 :1;
[; ;pic12f683.h: 1329: unsigned WPUA5 :1;
[; ;pic12f683.h: 1330: };
[; ;pic12f683.h: 1331: } WPUAbits_t;
[; ;pic12f683.h: 1332: extern volatile WPUAbits_t WPUAbits @ 0x095;
[; ;pic12f683.h: 1387: extern volatile unsigned char IOC @ 0x096;
"1389
[; ;pic12f683.h: 1389: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic12f683.h: 1392: extern volatile unsigned char IOCA @ 0x096;
"1394
[; ;pic12f683.h: 1394: asm("IOCA equ 096h");
[; <" IOCA equ 096h ;# ">
[; ;pic12f683.h: 1397: typedef union {
[; ;pic12f683.h: 1398: struct {
[; ;pic12f683.h: 1399: unsigned IOC0 :1;
[; ;pic12f683.h: 1400: unsigned IOC1 :1;
[; ;pic12f683.h: 1401: unsigned IOC2 :1;
[; ;pic12f683.h: 1402: unsigned IOC3 :1;
[; ;pic12f683.h: 1403: unsigned IOC4 :1;
[; ;pic12f683.h: 1404: unsigned IOC5 :1;
[; ;pic12f683.h: 1405: };
[; ;pic12f683.h: 1406: struct {
[; ;pic12f683.h: 1407: unsigned IOCA0 :1;
[; ;pic12f683.h: 1408: unsigned IOCA1 :1;
[; ;pic12f683.h: 1409: unsigned IOCA2 :1;
[; ;pic12f683.h: 1410: unsigned IOCA3 :1;
[; ;pic12f683.h: 1411: unsigned IOCA4 :1;
[; ;pic12f683.h: 1412: unsigned IOCA5 :1;
[; ;pic12f683.h: 1413: };
[; ;pic12f683.h: 1414: } IOCbits_t;
[; ;pic12f683.h: 1415: extern volatile IOCbits_t IOCbits @ 0x096;
[; ;pic12f683.h: 1478: typedef union {
[; ;pic12f683.h: 1479: struct {
[; ;pic12f683.h: 1480: unsigned IOC0 :1;
[; ;pic12f683.h: 1481: unsigned IOC1 :1;
[; ;pic12f683.h: 1482: unsigned IOC2 :1;
[; ;pic12f683.h: 1483: unsigned IOC3 :1;
[; ;pic12f683.h: 1484: unsigned IOC4 :1;
[; ;pic12f683.h: 1485: unsigned IOC5 :1;
[; ;pic12f683.h: 1486: };
[; ;pic12f683.h: 1487: struct {
[; ;pic12f683.h: 1488: unsigned IOCA0 :1;
[; ;pic12f683.h: 1489: unsigned IOCA1 :1;
[; ;pic12f683.h: 1490: unsigned IOCA2 :1;
[; ;pic12f683.h: 1491: unsigned IOCA3 :1;
[; ;pic12f683.h: 1492: unsigned IOCA4 :1;
[; ;pic12f683.h: 1493: unsigned IOCA5 :1;
[; ;pic12f683.h: 1494: };
[; ;pic12f683.h: 1495: } IOCAbits_t;
[; ;pic12f683.h: 1496: extern volatile IOCAbits_t IOCAbits @ 0x096;
[; ;pic12f683.h: 1561: extern volatile unsigned char VRCON @ 0x099;
"1563
[; ;pic12f683.h: 1563: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic12f683.h: 1566: typedef union {
[; ;pic12f683.h: 1567: struct {
[; ;pic12f683.h: 1568: unsigned VR :4;
[; ;pic12f683.h: 1569: unsigned :1;
[; ;pic12f683.h: 1570: unsigned VRR :1;
[; ;pic12f683.h: 1571: unsigned :1;
[; ;pic12f683.h: 1572: unsigned VREN :1;
[; ;pic12f683.h: 1573: };
[; ;pic12f683.h: 1574: struct {
[; ;pic12f683.h: 1575: unsigned VR0 :1;
[; ;pic12f683.h: 1576: unsigned VR1 :1;
[; ;pic12f683.h: 1577: unsigned VR2 :1;
[; ;pic12f683.h: 1578: unsigned VR3 :1;
[; ;pic12f683.h: 1579: };
[; ;pic12f683.h: 1580: } VRCONbits_t;
[; ;pic12f683.h: 1581: extern volatile VRCONbits_t VRCONbits @ 0x099;
[; ;pic12f683.h: 1621: extern volatile unsigned char EEDAT @ 0x09A;
"1623
[; ;pic12f683.h: 1623: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic12f683.h: 1626: extern volatile unsigned char EEDATA @ 0x09A;
"1628
[; ;pic12f683.h: 1628: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic12f683.h: 1631: typedef union {
[; ;pic12f683.h: 1632: struct {
[; ;pic12f683.h: 1633: unsigned EEDAT :8;
[; ;pic12f683.h: 1634: };
[; ;pic12f683.h: 1635: } EEDATbits_t;
[; ;pic12f683.h: 1636: extern volatile EEDATbits_t EEDATbits @ 0x09A;
[; ;pic12f683.h: 1644: typedef union {
[; ;pic12f683.h: 1645: struct {
[; ;pic12f683.h: 1646: unsigned EEDAT :8;
[; ;pic12f683.h: 1647: };
[; ;pic12f683.h: 1648: } EEDATAbits_t;
[; ;pic12f683.h: 1649: extern volatile EEDATAbits_t EEDATAbits @ 0x09A;
[; ;pic12f683.h: 1659: extern volatile unsigned char EEADR @ 0x09B;
"1661
[; ;pic12f683.h: 1661: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic12f683.h: 1666: extern volatile unsigned char EECON1 @ 0x09C;
"1668
[; ;pic12f683.h: 1668: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic12f683.h: 1671: typedef union {
[; ;pic12f683.h: 1672: struct {
[; ;pic12f683.h: 1673: unsigned RD :1;
[; ;pic12f683.h: 1674: unsigned WR :1;
[; ;pic12f683.h: 1675: unsigned WREN :1;
[; ;pic12f683.h: 1676: unsigned WRERR :1;
[; ;pic12f683.h: 1677: };
[; ;pic12f683.h: 1678: } EECON1bits_t;
[; ;pic12f683.h: 1679: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic12f683.h: 1704: extern volatile unsigned char EECON2 @ 0x09D;
"1706
[; ;pic12f683.h: 1706: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic12f683.h: 1711: extern volatile unsigned char ADRESL @ 0x09E;
"1713
[; ;pic12f683.h: 1713: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic12f683.h: 1718: extern volatile unsigned char ANSEL @ 0x09F;
"1720
[; ;pic12f683.h: 1720: asm("ANSEL equ 09Fh");
[; <" ANSEL equ 09Fh ;# ">
[; ;pic12f683.h: 1723: typedef union {
[; ;pic12f683.h: 1724: struct {
[; ;pic12f683.h: 1725: unsigned ANS :4;
[; ;pic12f683.h: 1726: unsigned ADCS :3;
[; ;pic12f683.h: 1727: };
[; ;pic12f683.h: 1728: struct {
[; ;pic12f683.h: 1729: unsigned ANS0 :1;
[; ;pic12f683.h: 1730: unsigned ANS1 :1;
[; ;pic12f683.h: 1731: unsigned ANS2 :1;
[; ;pic12f683.h: 1732: unsigned ANS3 :1;
[; ;pic12f683.h: 1733: unsigned ADCS0 :1;
[; ;pic12f683.h: 1734: unsigned ADCS1 :1;
[; ;pic12f683.h: 1735: unsigned ADCS2 :1;
[; ;pic12f683.h: 1736: };
[; ;pic12f683.h: 1737: } ANSELbits_t;
[; ;pic12f683.h: 1738: extern volatile ANSELbits_t ANSELbits @ 0x09F;
[; ;pic12f683.h: 1793: extern volatile __bit ADCS0 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic12f683.h: 1795: extern volatile __bit ADCS1 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic12f683.h: 1797: extern volatile __bit ADCS2 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic12f683.h: 1799: extern volatile __bit ADFM @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic12f683.h: 1801: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic12f683.h: 1803: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic12f683.h: 1805: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic12f683.h: 1807: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic12f683.h: 1809: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic12f683.h: 1811: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic12f683.h: 1813: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic12f683.h: 1815: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic12f683.h: 1817: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic12f683.h: 1819: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic12f683.h: 1821: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic12f683.h: 1823: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic12f683.h: 1825: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic12f683.h: 1827: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic12f683.h: 1829: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic12f683.h: 1831: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic12f683.h: 1833: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic12f683.h: 1835: extern volatile __bit CINV @ (((unsigned) &CMCON0)*8) + 4;
[; ;pic12f683.h: 1837: extern volatile __bit CIS @ (((unsigned) &CMCON0)*8) + 3;
[; ;pic12f683.h: 1839: extern volatile __bit CM0 @ (((unsigned) &CMCON0)*8) + 0;
[; ;pic12f683.h: 1841: extern volatile __bit CM1 @ (((unsigned) &CMCON0)*8) + 1;
[; ;pic12f683.h: 1843: extern volatile __bit CM2 @ (((unsigned) &CMCON0)*8) + 2;
[; ;pic12f683.h: 1845: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic12f683.h: 1847: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic12f683.h: 1849: extern volatile __bit CMSYNC @ (((unsigned) &CMCON1)*8) + 0;
[; ;pic12f683.h: 1851: extern volatile __bit COUT @ (((unsigned) &CMCON0)*8) + 6;
[; ;pic12f683.h: 1853: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic12f683.h: 1855: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic12f683.h: 1857: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic12f683.h: 1859: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic12f683.h: 1861: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic12f683.h: 1863: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic12f683.h: 1865: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f683.h: 1867: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f683.h: 1869: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f683.h: 1871: extern volatile __bit GP0 @ (((unsigned) &GPIO)*8) + 0;
[; ;pic12f683.h: 1873: extern volatile __bit GP1 @ (((unsigned) &GPIO)*8) + 1;
[; ;pic12f683.h: 1875: extern volatile __bit GP2 @ (((unsigned) &GPIO)*8) + 2;
[; ;pic12f683.h: 1877: extern volatile __bit GP3 @ (((unsigned) &GPIO)*8) + 3;
[; ;pic12f683.h: 1879: extern volatile __bit GP4 @ (((unsigned) &GPIO)*8) + 4;
[; ;pic12f683.h: 1881: extern volatile __bit GP5 @ (((unsigned) &GPIO)*8) + 5;
[; ;pic12f683.h: 1883: extern volatile __bit GPIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic12f683.h: 1885: extern volatile __bit GPIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic12f683.h: 1887: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic12f683.h: 1889: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic12f683.h: 1891: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic12f683.h: 1893: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic12f683.h: 1895: extern volatile __bit IOC0 @ (((unsigned) &IOC)*8) + 0;
[; ;pic12f683.h: 1897: extern volatile __bit IOC1 @ (((unsigned) &IOC)*8) + 1;
[; ;pic12f683.h: 1899: extern volatile __bit IOC2 @ (((unsigned) &IOC)*8) + 2;
[; ;pic12f683.h: 1901: extern volatile __bit IOC3 @ (((unsigned) &IOC)*8) + 3;
[; ;pic12f683.h: 1903: extern volatile __bit IOC4 @ (((unsigned) &IOC)*8) + 4;
[; ;pic12f683.h: 1905: extern volatile __bit IOC5 @ (((unsigned) &IOC)*8) + 5;
[; ;pic12f683.h: 1907: extern volatile __bit IOCA0 @ (((unsigned) &IOC)*8) + 0;
[; ;pic12f683.h: 1909: extern volatile __bit IOCA1 @ (((unsigned) &IOC)*8) + 1;
[; ;pic12f683.h: 1911: extern volatile __bit IOCA2 @ (((unsigned) &IOC)*8) + 2;
[; ;pic12f683.h: 1913: extern volatile __bit IOCA3 @ (((unsigned) &IOC)*8) + 3;
[; ;pic12f683.h: 1915: extern volatile __bit IOCA4 @ (((unsigned) &IOC)*8) + 4;
[; ;pic12f683.h: 1917: extern volatile __bit IOCA5 @ (((unsigned) &IOC)*8) + 5;
[; ;pic12f683.h: 1919: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic12f683.h: 1921: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic12f683.h: 1923: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic12f683.h: 1925: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic12f683.h: 1927: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic12f683.h: 1929: extern volatile __bit OSFIE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic12f683.h: 1931: extern volatile __bit OSFIF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic12f683.h: 1933: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic12f683.h: 1935: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic12f683.h: 1937: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic12f683.h: 1939: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic12f683.h: 1941: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic12f683.h: 1943: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic12f683.h: 1945: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic12f683.h: 1947: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic12f683.h: 1949: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic12f683.h: 1951: extern volatile __bit SBODEN @ (((unsigned) &PCON)*8) + 4;
[; ;pic12f683.h: 1953: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic12f683.h: 1955: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic12f683.h: 1957: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic12f683.h: 1959: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic12f683.h: 1961: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic12f683.h: 1963: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic12f683.h: 1965: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic12f683.h: 1967: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic12f683.h: 1969: extern volatile __bit T1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic12f683.h: 1971: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic12f683.h: 1973: extern volatile __bit T1GSS @ (((unsigned) &CMCON1)*8) + 1;
[; ;pic12f683.h: 1975: extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic12f683.h: 1977: extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic12f683.h: 1979: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic12f683.h: 1981: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic12f683.h: 1983: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic12f683.h: 1985: extern volatile __bit T2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic12f683.h: 1987: extern volatile __bit T2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic12f683.h: 1989: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic12f683.h: 1991: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic12f683.h: 1993: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic12f683.h: 1995: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic12f683.h: 1997: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic12f683.h: 1999: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic12f683.h: 2001: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic12f683.h: 2003: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic12f683.h: 2005: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic12f683.h: 2007: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic12f683.h: 2009: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic12f683.h: 2011: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic12f683.h: 2013: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic12f683.h: 2015: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic12f683.h: 2017: extern volatile __bit TRISIO0 @ (((unsigned) &TRISIO)*8) + 0;
[; ;pic12f683.h: 2019: extern volatile __bit TRISIO1 @ (((unsigned) &TRISIO)*8) + 1;
[; ;pic12f683.h: 2021: extern volatile __bit TRISIO2 @ (((unsigned) &TRISIO)*8) + 2;
[; ;pic12f683.h: 2023: extern volatile __bit TRISIO3 @ (((unsigned) &TRISIO)*8) + 3;
[; ;pic12f683.h: 2025: extern volatile __bit TRISIO4 @ (((unsigned) &TRISIO)*8) + 4;
[; ;pic12f683.h: 2027: extern volatile __bit TRISIO5 @ (((unsigned) &TRISIO)*8) + 5;
[; ;pic12f683.h: 2029: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic12f683.h: 2031: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic12f683.h: 2033: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic12f683.h: 2035: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic12f683.h: 2037: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic12f683.h: 2039: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic12f683.h: 2041: extern volatile __bit VCFG @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic12f683.h: 2043: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic12f683.h: 2045: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic12f683.h: 2047: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic12f683.h: 2049: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic12f683.h: 2051: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic12f683.h: 2053: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic12f683.h: 2055: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic12f683.h: 2057: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic12f683.h: 2059: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic12f683.h: 2061: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic12f683.h: 2063: extern volatile __bit WPU0 @ (((unsigned) &WPU)*8) + 0;
[; ;pic12f683.h: 2065: extern volatile __bit WPU1 @ (((unsigned) &WPU)*8) + 1;
[; ;pic12f683.h: 2067: extern volatile __bit WPU2 @ (((unsigned) &WPU)*8) + 2;
[; ;pic12f683.h: 2069: extern volatile __bit WPU4 @ (((unsigned) &WPU)*8) + 4;
[; ;pic12f683.h: 2071: extern volatile __bit WPU5 @ (((unsigned) &WPU)*8) + 5;
[; ;pic12f683.h: 2073: extern volatile __bit WPUA0 @ (((unsigned) &WPU)*8) + 0;
[; ;pic12f683.h: 2075: extern volatile __bit WPUA1 @ (((unsigned) &WPU)*8) + 1;
[; ;pic12f683.h: 2077: extern volatile __bit WPUA2 @ (((unsigned) &WPU)*8) + 2;
[; ;pic12f683.h: 2079: extern volatile __bit WPUA4 @ (((unsigned) &WPU)*8) + 4;
[; ;pic12f683.h: 2081: extern volatile __bit WPUA5 @ (((unsigned) &WPU)*8) + 5;
[; ;pic12f683.h: 2083: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic12f683.h: 2085: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic12f683.h: 2087: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic12f683.h: 2089: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic12f683.h: 2091: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic12f683.h: 2093: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f683.h: 2095: extern volatile __bit nGPPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic12f683.h: 2097: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic12f683.h: 2099: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic12f683.h: 2101: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic12f683.h: 2103: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 154: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 192: extern unsigned char __resetbits;
[; ;pic.h: 193: extern __bit __powerdown;
[; ;pic.h: 194: extern __bit __timeout;
"38 main.c
[v _BUF `uc ~T0 @X0 -> 17 `i e ]
[i _BUF
:U ..
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 0 `c
..
]
[v _RC `uc ~T0 @X0 1 e ]
[i _RC
-> -> 0 `i `uc
]
[; ;main.c: 38: unsigned char BUF[17] = "                ", RC = 0;
"39
[v _T1ZOH `ui ~T0 @X0 1 e ]
[i _T1ZOH
-> -> 0 `i `ui
]
[; ;main.c: 39: unsigned int T1ZOH = 0;
"41
[v _PWM `c ~T0 @X0 1 e@19 ]
[; ;main.c: 41: signed char PWM @ &CCPR1L;
"42
[v _TX `b ~T0 @X0 1 e@40 ]
[; ;main.c: 42: bit TX @ (((unsigned) &GPIO)*8) + 0;
"43
[v _RX `b ~T0 @X0 1 e@41 ]
[; ;main.c: 43: bit RX @ (((unsigned) &GPIO)*8) + 1;
"47
[v _SENT `uc ~T0 @X0 1 e ]
[; ;main.c: 47: unsigned char SENT;
"48
[v _rsend `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 48: void rsend (unsigned char msg) {
[e :U _rsend ]
[v _msg `uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 54: SENT = msg;
"54
[e = _SENT _msg ]
[; ;main.c: 55: asm("BCF GPIO, 0"); _delay(104 - 1);
"55
[; <" BCF GPIO, 0 ;# ">
[e ( __delay (1 -> -> - -> 104 `i -> 1 `i `l `ul ]
[; ;main.c: 56: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"56
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 57: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"57
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 58: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"58
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 59: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"59
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 60: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"60
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 61: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"61
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 62: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"62
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 63: { asm("RRF " "rsend@msg" ", f"); asm("MOVF STATUS, w"); asm("MOVWF GPIO"); }; _delay(104 - 3);
"63
{
[; <" RRF rsend@msg, f ;# ">
[; <" MOVF STATUS, w ;# ">
[; <" MOVWF GPIO ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 64: asm("BSF GPIO, 0"); _delay(104 - 1);
"64
[; <" BSF GPIO, 0 ;# ">
[e ( __delay (1 -> -> - -> 104 `i -> 1 `i `l `ul ]
[; ;main.c: 65: }
"65
[e :UE 78 ]
}
"67
[v _rsget `(uc ~T0 @X0 1 ef ]
{
[; ;main.c: 67: unsigned char rsget () {
[e :U _rsget ]
[f ]
"68
[v _msg `uc ~T0 @X0 1 a ]
[; ;main.c: 68: unsigned char msg = 0;
[e = _msg -> -> 0 `i `uc ]
[; ;main.c: 69: while (RX==1) continue;
"69
[e $U 80  ]
[e :U 81 ]
[e $U 80  ]
[e :U 80 ]
[e $ == -> _RX `i -> 1 `i 81  ]
[e :U 82 ]
[; ;main.c: 70: _delay(104 - 1);
"70
[e ( __delay (1 -> -> - -> 104 `i -> 1 `i `l `ul ]
[; ;main.c: 71: _delay(104 >> 1);
"71
[e ( __delay (1 -> -> >> -> 104 `i -> 1 `i `l `ul ]
[; ;main.c: 72: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"72
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 73: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"73
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 74: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"74
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 75: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"75
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 76: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"76
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 77: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"77
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 78: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"78
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 79: { asm("RRF " "rsget@msg" ", f"); asm("BTFSC GPIO, 1"); asm("BSF " "rsget@msg" ", 7"); }; _delay(104 - 3);
"79
{
[; <" RRF rsget@msg, f ;# ">
[; <" BTFSC GPIO, 1 ;# ">
[; <" BSF rsget@msg, 7 ;# ">
}
[e ( __delay (1 -> -> - -> 104 `i -> 3 `i `l `ul ]
[; ;main.c: 80: _delay(104 >> 1);
"80
[e ( __delay (1 -> -> >> -> 104 `i -> 1 `i `l `ul ]
[; ;main.c: 81: return msg;
"81
[e ) _msg ]
[e $UE 79  ]
[; ;main.c: 82: }
"82
[e :UE 79 ]
}
"86
[v _read_tmr1 `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 86: void read_tmr1 () {
[e :U _read_tmr1 ]
[f ]
[; ;main.c: 87: T1ZOH = TMR1;
"87
[e = _T1ZOH -> _TMR1 `ui ]
[; ;main.c: 88: rsend(T1ZOH >> 8);
"88
[e ( _rsend (1 -> >> _T1ZOH -> 8 `i `uc ]
[; ;main.c: 89: rsend(T1ZOH);
"89
[e ( _rsend (1 -> _T1ZOH `uc ]
[; ;main.c: 90: TMR1 -= T1ZOH;
"90
[e =- _TMR1 -> _T1ZOH `us ]
[; ;main.c: 91: return;
"91
[e $UE 83  ]
[; ;main.c: 92: }
"92
[e :UE 83 ]
}
"94
[v _write `(v ~T0 @X0 1 ef1`c ]
{
[; ;main.c: 94: void write (signed char duty) {
[e :U _write ]
[v _duty `c ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 95: if (duty > 100) PWM = 100;
"95
[e $ ! > -> _duty `i -> 100 `i 85  ]
[e = _PWM -> -> 100 `i `c ]
[e $U 86  ]
"96
[e :U 85 ]
[; ;main.c: 96: else if (duty < 0) PWM = 0;
[e $ ! < -> _duty `i -> 0 `i 87  ]
[e = _PWM -> -> 0 `i `c ]
[e $U 88  ]
"97
[e :U 87 ]
[; ;main.c: 97: else PWM = duty;
[e = _PWM _duty ]
[e :U 88 ]
[e :U 86 ]
[; ;main.c: 98: }
"98
[e :UE 84 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"101
[v _main `(i ~T0 @X0 1 ef ]
{
[; ;main.c: 101: int main (void) {
[e :U _main ]
[f ]
[; ;main.c: 102: OSCCON = 0x77;
"102
[e = _OSCCON -> -> 119 `i `uc ]
[; ;main.c: 103: OPTION_REG = 0x07;
"103
[e = _OPTION_REG -> -> 7 `i `uc ]
[; ;main.c: 104: T1CON = 0x03;
"104
[e = _T1CON -> -> 3 `i `uc ]
[; ;main.c: 105: PR2 = 100;
"105
[e = _PR2 -> -> 100 `i `uc ]
[; ;main.c: 106: T2CON = 0x04;
"106
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 107: CCP1CON = 0x0C;
"107
[e = _CCP1CON -> -> 12 `i `uc ]
[; ;main.c: 108: CMCON0 = 0x07;
"108
[e = _CMCON0 -> -> 7 `i `uc ]
[; ;main.c: 109: ANSEL = 0x00;
"109
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 110: ADCON0 = 0x00;
"110
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 111: WPU = 0x22;
"111
[e = _WPU -> -> 34 `i `uc ]
[; ;main.c: 112: TRISIO = 0x2A;
"112
[e = _TRISIO -> -> 42 `i `uc ]
[; ;main.c: 113: TMR1 = 0;
"113
[e = _TMR1 -> -> 0 `i `us ]
[; ;main.c: 114: PWM = 0;
"114
[e = _PWM -> -> 0 `i `c ]
[; ;main.c: 115: TX = 1;
"115
[e = _TX -> -> 1 `i `b ]
[; ;main.c: 116: while (1) {
"116
[e :U 91 ]
{
"117
[v _x `uc ~T0 @X0 1 a ]
[; ;main.c: 117: char x = rsget();
[e = _x ( _rsget ..  ]
[; ;main.c: 118: if (x == '\n') {
"118
[e $ ! == -> _x `ui -> 10 `ui 93  ]
{
[; ;main.c: 119: switch (BUF[0]) {
"119
[e $U 95  ]
{
[; ;main.c: 120: case 'r': case '7': read_tmr1(); break;
"120
[e :U 96 ]
[e :U 97 ]
[e ( _read_tmr1 ..  ]
[e $U 94  ]
[; ;main.c: 121: case 'w': case '5': write(BUF[1]); break;
"121
[e :U 98 ]
[e :U 99 ]
[e ( _write (1 -> *U + &U _BUF * -> -> -> 1 `i `ui `ux -> -> # *U &U _BUF `ui `ux `c ]
[e $U 94  ]
[; ;main.c: 122: case 'x': case '1': write(BUF[1]); read_tmr1(); break;
"122
[e :U 100 ]
[e :U 101 ]
[e ( _write (1 -> *U + &U _BUF * -> -> -> 1 `i `ui `ux -> -> # *U &U _BUF `ui `ux `c ]
[e ( _read_tmr1 ..  ]
[e $U 94  ]
[; ;main.c: 123: case 's': case '2': write(0); break;
"123
[e :U 102 ]
[e :U 103 ]
[e ( _write (1 -> -> 0 `i `c ]
[e $U 94  ]
"124
}
[; ;main.c: 124: }
[e $U 94  ]
"119
[e :U 95 ]
[e [\ *U + &U _BUF * -> -> -> 0 `i `ui `ux -> -> # *U &U _BUF `ui `ux , $ -> -> 114 `ui `uc 96
 , $ -> -> 55 `ui `uc 97
 , $ -> -> 119 `ui `uc 98
 , $ -> -> 53 `ui `uc 99
 , $ -> -> 120 `ui `uc 100
 , $ -> -> 49 `ui `uc 101
 , $ -> -> 115 `ui `uc 102
 , $ -> -> 50 `ui `uc 103
 94 ]
"124
[e :U 94 ]
[; ;main.c: 125: RC = 0;
"125
[e = _RC -> -> 0 `i `uc ]
"126
}
[; ;main.c: 126: }
[e $U 104  ]
"127
[e :U 93 ]
[; ;main.c: 127: else {
{
[; ;main.c: 128: BUF[RC] = x;
"128
[e = *U + &U _BUF * -> _RC `ux -> -> # *U &U _BUF `ui `ux _x ]
[; ;main.c: 129: RC++;
"129
[e ++ _RC -> -> 1 `i `uc ]
"130
}
[e :U 104 ]
"131
}
[e :U 90 ]
"116
[e $U 91  ]
[e :U 92 ]
[; ;main.c: 130: }
[; ;main.c: 131: }
[; ;main.c: 132: return 0;
"132
[e ) -> 0 `i ]
[e $UE 89  ]
[; ;main.c: 133: }
"133
[e :UE 89 ]
}
