

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Sep  5 02:20:53 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.43
    22                           ; Generated 25/07/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115                           
   116                           	psect	idataBANK0
   117  0575                     __pidataBANK0:	
   118                           
   119                           ;initializer for _FAN
   120  0575  3400               	retlw	0
   121  0576  3400               	retlw	0
   122  0577  3400               	retlw	0
   123  0578  3400               	retlw	0
   124  0579  34FF               	retlw	255
   125  057A  34FF               	retlw	255
   126  057B  3407               	retlw	7
   127  057C  3400               	retlw	0
   128  057D  3488               	retlw	136
   129  057E  3413               	retlw	19
   130  000E                     _TMR1	set	14
   131  0015                     _CCPR1L	set	21
   132  0017                     _CCP1CON	set	23
   133  005F                     _GIE	set	95
   134  005C                     _INTE	set	92
   135  0092                     _TMR2ON	set	146
   136  0091                     _T2CKPS1	set	145
   137  0090                     _T2CKPS0	set	144
   138  00BA                     _CCP1M2	set	186
   139  00BB                     _CCP1M3	set	187
   140  0080                     _TMR1ON	set	128
   141  0085                     _T1CKPS1	set	133
   142  0084                     _T1CKPS0	set	132
   143  0081                     _TMR1CS	set	129
   144  0059                     _INTF	set	89
   145  0037                     _RB7	set	55
   146  0092                     _PR2	set	146
   147  040E                     _INTEDG	set	1038
   148  0437                     _TRISB7	set	1079
   149  0430                     _TRISB0	set	1072
   150  040F                     _nRBPU	set	1039
   151  043A                     _TRISC2	set	1082
   152                           
   153                           	psect	cinit
   154  026A                     start_initialization:	
   155                           ; #config settings
   156                           
   157  026A                     __initialization:	
   158                           
   159                           ; Initialize objects allocated to BANK0
   160  026A  1383               	bcf	3,7	;select IRP bank0
   161  026B  3066               	movlw	low (__pdataBANK0+10)
   162  026C  00FD               	movwf	btemp+-1
   163  026D  3005               	movlw	high __pidataBANK0
   164  026E  00FE               	movwf	btemp
   165  026F  3075               	movlw	low __pidataBANK0
   166  0270  00FF               	movwf	btemp+1
   167  0271  305C               	movlw	low __pdataBANK0
   168  0272  0084               	movwf	4
   169  0273  120A  118A  2568   	fcall	init_ram0
   170  0276                     end_of_initialization:	
   171                           ;End of C runtime variable initialization code
   172                           
   173  0276                     __end_of__initialization:	
   174  0276  0183               	clrf	3
   175  0277  120A  118A  2BFF   	ljmp	_main	;jump to C main() function
   176                           
   177                           	psect	dataBANK0
   178  005C                     __pdataBANK0:	
   179  005C                     _FAN:	
   180  005C                     	ds	10
   181                           
   182                           	psect	inittext
   183  0564                     init_fetch0:	
   184                           ;	Called with low address in FSR and high address in W
   185                           
   186  0564  087E               	movf	126,w
   187  0565  008A               	movwf	10
   188  0566  087F               	movf	127,w
   189  0567  0082               	movwf	2
   190  0568                     init_ram0:	
   191                           ;Called with:
   192                           ;	high address of idata address in btemp 
   193                           ;	low address of idata address in btemp+1 
   194                           ;	low address of data in FSR
   195                           ;	high address + 1 of data in btemp-1
   196                           
   197  0568  2564  120A  118A   	fcall	init_fetch0
   198  056B  0080               	movwf	0
   199  056C  0A84               	incf	4,f
   200  056D  0804               	movf	4,w
   201  056E  067D               	xorwf	125,w
   202  056F  1903               	btfsc	3,2
   203  0570  3400               	retlw	0
   204  0571  0AFF               	incf	127,f
   205  0572  1903               	btfsc	3,2
   206  0573  0AFE               	incf	126,f
   207  0574  2D68               	goto	init_ram0
   208                           
   209                           	psect	cstackCOMMON
   210  0070                     __pcstackCOMMON:	
   211  0070                     ?_raycast_intersection_cleared:	
   212  0070                     ??_raycast_intersection_cleared:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 2 bytes @ 0x0
   220  0070                     	ds	4
   221  0074                     ??___aldiv:	
   222  0074                     ?___wmul:	
   223                           ; 1 bytes @ 0x4
   224                           
   225  0074                     ___wmul@multiplier:	
   226                           ; 2 bytes @ 0x4
   227                           
   228                           
   229                           ; 2 bytes @ 0x4
   230  0074                     	ds	1
   231  0075                     ??___lmul:	
   232                           
   233                           ; 1 bytes @ 0x5
   234  0075                     	ds	1
   235  0076                     ___wmul@multiplicand:	
   236  0076                     ___lmul@product:	
   237                           ; 2 bytes @ 0x6
   238                           
   239                           
   240                           ; 4 bytes @ 0x6
   241  0076                     	ds	2
   242  0078                     ??___wmul:	
   243  0078                     ___wmul@product:	
   244                           ; 1 bytes @ 0x8
   245                           
   246                           
   247                           ; 2 bytes @ 0x8
   248  0078                     	ds	2
   249                           
   250                           	psect	cstackBANK0
   251  0020                     __pcstackBANK0:	
   252  0020                     ?___awdiv:	
   253  0020                     ?___aldiv:	
   254                           ; 2 bytes @ 0x0
   255                           
   256  0020                     ___awdiv@divisor:	
   257                           ; 4 bytes @ 0x0
   258                           
   259  0020                     ___aldiv@divisor:	
   260                           ; 2 bytes @ 0x0
   261                           
   262                           
   263                           ; 4 bytes @ 0x0
   264  0020                     	ds	2
   265  0022                     ___awdiv@dividend:	
   266                           
   267                           ; 2 bytes @ 0x2
   268  0022                     	ds	2
   269  0024                     ??___awdiv:	
   270  0024                     ___aldiv@dividend:	
   271                           ; 1 bytes @ 0x4
   272                           
   273                           
   274                           ; 4 bytes @ 0x4
   275  0024                     	ds	1
   276  0025                     ___awdiv@counter:	
   277                           
   278                           ; 1 bytes @ 0x5
   279  0025                     	ds	1
   280  0026                     ___awdiv@sign:	
   281                           
   282                           ; 1 bytes @ 0x6
   283  0026                     	ds	1
   284  0027                     ___awdiv@quotient:	
   285                           
   286                           ; 2 bytes @ 0x7
   287  0027                     	ds	1
   288  0028                     ___aldiv@counter:	
   289                           
   290                           ; 1 bytes @ 0x8
   291  0028                     	ds	1
   292  0029                     ?___bmul:	
   293  0029                     ___bmul@multiplicand:	
   294                           ; 1 bytes @ 0x9
   295                           
   296  0029                     ___aldiv@sign:	
   297                           ; 1 bytes @ 0x9
   298                           
   299                           
   300                           ; 1 bytes @ 0x9
   301  0029                     	ds	1
   302  002A                     ??___bmul:	
   303  002A                     ___aldiv@quotient:	
   304                           ; 1 bytes @ 0xA
   305                           
   306                           
   307                           ; 4 bytes @ 0xA
   308  002A                     	ds	1
   309  002B                     ___bmul@product:	
   310                           
   311                           ; 1 bytes @ 0xB
   312  002B                     	ds	1
   313  002C                     ___bmul@multiplier:	
   314                           
   315                           ; 1 bytes @ 0xC
   316  002C                     	ds	2
   317  002E                     ?___lmul:	
   318  002E                     ___lmul@multiplier:	
   319                           ; 4 bytes @ 0xE
   320                           
   321                           
   322                           ; 4 bytes @ 0xE
   323  002E                     	ds	4
   324  0032                     ___lmul@multiplicand:	
   325                           
   326                           ; 4 bytes @ 0x12
   327  0032                     	ds	4
   328  0036                     ?_rpm_timer:	
   329  0036                     rpm_timer@in:	
   330                           ; 10 bytes @ 0x16
   331                           
   332                           
   333                           ; 10 bytes @ 0x16
   334  0036                     	ds	10
   335  0040                     rpm_timer@t:	
   336                           
   337                           ; 2 bytes @ 0x20
   338  0040                     	ds	2
   339  0042                     ??_rpm_timer:	
   340                           
   341                           ; 1 bytes @ 0x22
   342  0042                     	ds	4
   343  0046                     _rpm_timer$469:	
   344                           
   345                           ; 4 bytes @ 0x26
   346  0046                     	ds	4
   347  004A                     rpm_timer@out:	
   348                           
   349                           ; 10 bytes @ 0x2A
   350  004A                     	ds	10
   351  0054                     ??_main:	
   352                           
   353                           ; 1 bytes @ 0x34
   354  0054                     	ds	8
   355                           
   356                           	psect	maintext
   357  03FF                     __pmaintext:	
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 52 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  2   65[None  ] int 
   370 ;; Registers used:
   371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : B00/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          0       8       0       0       0
   380 ;;      Totals:         0       8       0       0       0
   381 ;;Total ram usage:        8 bytes
   382 ;; Hardware stack levels required when called:    3
   383 ;; This function calls:
   384 ;;		___awdiv
   385 ;;		___bmul
   386 ;;		___wmul
   387 ;;		_rpm_timer
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _main
   395  03FF                     _main:	
   396                           
   397                           ;main.c: 54: TMR1CS = 0;
   398                           
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   401  03FF  1283               	bcf	3,5	;RP0=0, select bank0
   402  0400  1303               	bcf	3,6	;RP1=0, select bank0
   403  0401  1090               	bcf	16,1	;volatile
   404                           
   405                           ;main.c: 55: T1CKPS0 = 1;
   406  0402  1610               	bsf	16,4	;volatile
   407                           
   408                           ;main.c: 56: T1CKPS1 = 1;
   409  0403  1690               	bsf	16,5	;volatile
   410                           
   411                           ;main.c: 57: TMR1ON = 1;
   412  0404  1410               	bsf	16,0	;volatile
   413                           
   414                           ;main.c: 59: CCP1M3 = 1;
   415  0405  1597               	bsf	23,3	;volatile
   416                           
   417                           ;main.c: 60: CCP1M2 = 1;
   418  0406  1517               	bsf	23,2	;volatile
   419                           
   420                           ;main.c: 61: CCP1CON &= 0x0F;
   421  0407  300F               	movlw	15
   422  0408  00D4               	movwf	??_main
   423  0409  0854               	movf	??_main,w
   424  040A  0597               	andwf	23,f	;volatile
   425                           
   426                           ;main.c: 62: CCPR1L = 0;
   427  040B  0195               	clrf	21	;volatile
   428                           
   429                           ;main.c: 63: PR2 = 100;
   430  040C  3064               	movlw	100
   431  040D  1683               	bsf	3,5	;RP0=1, select bank1
   432  040E  1303               	bcf	3,6	;RP1=0, select bank1
   433  040F  0092               	movwf	18	;volatile
   434                           
   435                           ;main.c: 64: T2CKPS0 = 0;
   436  0410  1283               	bcf	3,5	;RP0=0, select bank0
   437  0411  1303               	bcf	3,6	;RP1=0, select bank0
   438  0412  1012               	bcf	18,0	;volatile
   439                           
   440                           ;main.c: 65: T2CKPS1 = 0;
   441  0413  1092               	bcf	18,1	;volatile
   442                           
   443                           ;main.c: 66: TMR2ON = 1;
   444  0414  1512               	bsf	18,2	;volatile
   445                           
   446                           ;main.c: 67: TRISC2 = 0;
   447  0415  1683               	bsf	3,5	;RP0=1, select bank1
   448  0416  1303               	bcf	3,6	;RP1=0, select bank1
   449  0417  1107               	bcf	7,2	;volatile
   450                           
   451                           ;main.c: 69: nRBPU = 0;
   452  0418  1381               	bcf	1,7	;volatile
   453                           
   454                           ;main.c: 70: TRISB0 = 1;
   455  0419  1406               	bsf	6,0	;volatile
   456                           
   457                           ;main.c: 71: TRISB7 = 0;
   458  041A  1386               	bcf	6,7	;volatile
   459                           
   460                           ;main.c: 72: INTEDG = 0;
   461  041B  1301               	bcf	1,6	;volatile
   462                           
   463                           ;main.c: 73: INTE = 1;
   464  041C  160B               	bsf	11,4	;volatile
   465                           
   466                           ;main.c: 74: GIE = 1;
   467  041D  178B               	bsf	11,7	;volatile
   468  041E                     l917:	
   469                           ;main.c: 77: while (1) {
   470                           
   471                           
   472                           ;main.c: 78: FAN = rpm_timer(FAN, TMR1);
   473  041E  3036               	movlw	rpm_timer@in& (0+255)
   474  041F  0084               	movwf	4
   475  0420  305C               	movlw	low _FAN
   476  0421  1283               	bcf	3,5	;RP0=0, select bank0
   477  0422  00D4               	movwf	??_main
   478  0423  0804               	movf	4,w
   479  0424  00D5               	movwf	??_main+1
   480  0425  300A               	movlw	10
   481  0426  00D6               	movwf	??_main+2
   482  0427                     u770:	
   483  0427  0854               	movf	??_main,w
   484  0428  0084               	movwf	4
   485  0429  1383               	bcf	3,7	;select IRP bank0
   486  042A  0800               	movf	0,w
   487  042B  00D7               	movwf	??_main+3
   488  042C  0AD4               	incf	??_main,f
   489  042D  0855               	movf	??_main+1,w
   490  042E  0084               	movwf	4
   491  042F  0857               	movf	??_main+3,w
   492  0430  0080               	movwf	0
   493  0431  0AD5               	incf	??_main+1,f
   494  0432  0BD6               	decfsz	??_main+2,f
   495  0433  2C27               	goto	u770
   496  0434  080F               	movf	15,w	;volatile
   497  0435  00C1               	movwf	rpm_timer@t+1
   498  0436  080E               	movf	14,w	;volatile
   499  0437  00C0               	movwf	rpm_timer@t
   500  0438  120A  118A  227A  120A  118A  	fcall	_rpm_timer
   501  043D  305C               	movlw	_FAN& (0+255)
   502  043E  0084               	movwf	4
   503  043F  1283               	bcf	3,5	;RP0=0, select bank0
   504  0440  1303               	bcf	3,6	;RP1=0, select bank0
   505  0441  3036               	movlw	low ?_rpm_timer
   506  0442  00D8               	movwf	??_main+4
   507  0443  0804               	movf	4,w
   508  0444  00D9               	movwf	??_main+5
   509  0445  300A               	movlw	10
   510  0446  00DA               	movwf	??_main+6
   511  0447                     u780:	
   512  0447  0858               	movf	??_main+4,w
   513  0448  0084               	movwf	4
   514  0449  1383               	bcf	3,7	;select IRP bank0
   515  044A  0800               	movf	0,w
   516  044B  00DB               	movwf	??_main+7
   517  044C  0AD8               	incf	??_main+4,f
   518  044D  0859               	movf	??_main+5,w
   519  044E  0084               	movwf	4
   520  044F  085B               	movf	??_main+7,w
   521  0450  0080               	movwf	0
   522  0451  0AD9               	incf	??_main+5,f
   523  0452  0BDA               	decfsz	??_main+6,f
   524  0453  2C47               	goto	u780
   525                           
   526                           ;main.c: 79: CCPR1L = 10 * FAN.value / FAN.max * 10;
   527  0454  300A               	movlw	10
   528  0455  00D4               	movwf	??_main
   529  0456  0854               	movf	??_main,w
   530  0457  00A9               	movwf	___bmul@multiplicand
   531  0458  300A               	movlw	10
   532  0459  00F6               	movwf	___wmul@multiplicand
   533  045A  3000               	movlw	0
   534  045B  00F7               	movwf	___wmul@multiplicand+1
   535  045C  085F               	movf	_FAN+3,w	;volatile
   536  045D  00F5               	movwf	___wmul@multiplier+1
   537  045E  085E               	movf	_FAN+2,w	;volatile
   538  045F  00F4               	movwf	___wmul@multiplier
   539  0460  120A  118A  251C  120A  118A  	fcall	___wmul
   540  0465  0875               	movf	?___wmul+1,w
   541  0466  1283               	bcf	3,5	;RP0=0, select bank0
   542  0467  1303               	bcf	3,6	;RP1=0, select bank0
   543  0468  00A3               	movwf	___awdiv@dividend+1
   544  0469  0874               	movf	?___wmul,w
   545  046A  00A2               	movwf	___awdiv@dividend
   546  046B  0865               	movf	_FAN+9,w	;volatile
   547  046C  00A1               	movwf	___awdiv@divisor+1
   548  046D  0864               	movf	_FAN+8,w	;volatile
   549  046E  00A0               	movwf	___awdiv@divisor
   550  046F  120A  118A  2480  120A  118A  	fcall	___awdiv
   551  0474  1283               	bcf	3,5	;RP0=0, select bank0
   552  0475  1303               	bcf	3,6	;RP1=0, select bank0
   553  0476  0820               	movf	?___awdiv,w
   554  0477  120A  118A  2551  120A  118A  	fcall	___bmul
   555  047C  1283               	bcf	3,5	;RP0=0, select bank0
   556  047D  1303               	bcf	3,6	;RP1=0, select bank0
   557  047E  0095               	movwf	21	;volatile
   558  047F  2C1E               	goto	l917
   559  0480                     __end_of_main:	
   560                           ;main.c: 80: }
   561                           ;main.c: 81: return 0;
   562                           ;	Return value of _main is never used
   563                           
   564                           
   565                           	psect	text1
   566  027A                     __ptext1:	
   567 ;; *************** function _rpm_timer *****************
   568 ;; Defined at:
   569 ;;		line 27 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  in             10   22[BANK0 ] volatile struct .
   572 ;;  t               2   32[BANK0 ] unsigned int 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  out            10   42[BANK0 ] volatile struct .
   575 ;; Return value:  Size  Location     Type
   576 ;;                  10   22[BANK0 ] struct .
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0      12       0       0       0
   585 ;;      Locals:         0      14       0       0       0
   586 ;;      Temps:          0       4       0       0       0
   587 ;;      Totals:         0      30       0       0       0
   588 ;;Total ram usage:       30 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    2
   591 ;; This function calls:
   592 ;;		___aldiv
   593 ;;		___lmul
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _rpm_timer
   601  027A                     _rpm_timer:	
   602                           
   603                           ;main.c: 28: rpm out;
   604                           ;main.c: 30: if (out.time > t) {
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _rpm_timer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   608  027A  1283               	bcf	3,5	;RP0=0, select bank0
   609  027B  1303               	bcf	3,6	;RP1=0, select bank0
   610  027C  084B               	movf	rpm_timer@out+1,w	;volatile
   611  027D  0241               	subwf	rpm_timer@t+1,w
   612  027E  1D03               	skipz
   613  027F  2A82               	goto	u555
   614  0280  084A               	movf	rpm_timer@out,w	;volatile
   615  0281  0240               	subwf	rpm_timer@t,w
   616  0282                     u555:	
   617  0282  1803               	skipnc
   618  0283  2A8B               	goto	l787
   619                           
   620                           ;main.c: 31: out.count = 0;
   621  0284  01CE               	clrf	rpm_timer@out+4	;volatile
   622  0285  01CF               	clrf	rpm_timer@out+5	;volatile
   623                           
   624                           ;main.c: 32: out.value = in.value;
   625  0286  0839               	movf	rpm_timer@in+3,w	;volatile
   626  0287  00CD               	movwf	rpm_timer@out+3	;volatile
   627  0288  0838               	movf	rpm_timer@in+2,w	;volatile
   628  0289  00CC               	movwf	rpm_timer@out+2	;volatile
   629  028A  2B40               	goto	l805
   630  028B                     l787:	
   631                           ;main.c: 34: }
   632                           
   633                           ;main.c: 33: out.time = t;
   634                           
   635                           
   636                           ;main.c: 35: else if (in.count > 0) {
   637  028B  083B               	movf	rpm_timer@in+5,w	;volatile
   638  028C  3A80               	xorlw	128
   639  028D  00FF               	movwf	127
   640  028E  3080               	movlw	128
   641  028F  027F               	subwf	127,w
   642  0290  1D03               	skipz
   643  0291  2A94               	goto	u565
   644  0292  3001               	movlw	1
   645  0293  023A               	subwf	rpm_timer@in+4,w	;volatile
   646  0294                     u565:	
   647  0294  1C03               	skipc
   648  0295  2B22               	goto	l799
   649                           
   650                           ;main.c: 36: out.count = 0;
   651  0296  1283               	bcf	3,5	;RP0=0, select bank0
   652  0297  1303               	bcf	3,6	;RP1=0, select bank0
   653  0298  01CE               	clrf	rpm_timer@out+4	;volatile
   654  0299  01CF               	clrf	rpm_timer@out+5	;volatile
   655                           
   656                           ;main.c: 37: out.value = 37500 / (t - in.time) * 1000 * in.count / in.div;
   657  029A  0936               	comf	rpm_timer@in,w	;volatile
   658  029B  00C2               	movwf	??_rpm_timer
   659  029C  0937               	comf	rpm_timer@in+1,w	;volatile
   660  029D  00C3               	movwf	??_rpm_timer+1
   661  029E  0AC2               	incf	??_rpm_timer,f
   662  029F  1903               	skipnz
   663  02A0  0AC3               	incf	??_rpm_timer+1,f
   664  02A1  0840               	movf	rpm_timer@t,w
   665  02A2  0742               	addwf	??_rpm_timer,w
   666  02A3  00A0               	movwf	___aldiv@divisor
   667  02A4  0841               	movf	rpm_timer@t+1,w
   668  02A5  1803               	skipnc
   669  02A6  0A41               	incf	rpm_timer@t+1,w
   670  02A7  0743               	addwf	??_rpm_timer+1,w
   671  02A8  00A1               	movwf	___aldiv@divisor+1
   672  02A9  01A2               	clrf	___aldiv@divisor+2
   673  02AA  01A3               	clrf	___aldiv@divisor+3
   674  02AB  3000               	movlw	0
   675  02AC  00A7               	movwf	___aldiv@dividend+3
   676  02AD  3000               	movlw	0
   677  02AE  00A6               	movwf	___aldiv@dividend+2
   678  02AF  3092               	movlw	146
   679  02B0  00A5               	movwf	___aldiv@dividend+1
   680  02B1  307C               	movlw	124
   681  02B2  00A4               	movwf	___aldiv@dividend
   682  02B3  120A  118A  2370  120A  118A  	fcall	___aldiv
   683  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   684  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   685  02BA  0823               	movf	?___aldiv+3,w
   686  02BB  00B1               	movwf	___lmul@multiplier+3
   687  02BC  0822               	movf	?___aldiv+2,w
   688  02BD  00B0               	movwf	___lmul@multiplier+2
   689  02BE  0821               	movf	?___aldiv+1,w
   690  02BF  00AF               	movwf	___lmul@multiplier+1
   691  02C0  0820               	movf	?___aldiv,w
   692  02C1  00AE               	movwf	___lmul@multiplier
   693  02C2  083A               	movf	rpm_timer@in+4,w	;volatile
   694  02C3  00B2               	movwf	___lmul@multiplicand
   695  02C4  083B               	movf	rpm_timer@in+5,w	;volatile
   696  02C5  00B3               	movwf	___lmul@multiplicand+1
   697  02C6  3000               	movlw	0
   698  02C7  1BB3               	btfsc	___lmul@multiplicand+1,7
   699  02C8  30FF               	movlw	255
   700  02C9  00B4               	movwf	___lmul@multiplicand+2
   701  02CA  00B5               	movwf	___lmul@multiplicand+3
   702  02CB  120A  118A  24DB  120A  118A  	fcall	___lmul
   703  02D0  1283               	bcf	3,5	;RP0=0, select bank0
   704  02D1  1303               	bcf	3,6	;RP1=0, select bank0
   705  02D2  0831               	movf	?___lmul+3,w
   706  02D3  00C9               	movwf	_rpm_timer$469+3
   707  02D4  0830               	movf	?___lmul+2,w
   708  02D5  00C8               	movwf	_rpm_timer$469+2
   709  02D6  082F               	movf	?___lmul+1,w
   710  02D7  00C7               	movwf	_rpm_timer$469+1
   711  02D8  082E               	movf	?___lmul,w
   712  02D9  00C6               	movwf	_rpm_timer$469
   713                           
   714                           ;main.c: 37: out.value = 37500 / (t - in.time) * 1000 * in.count / in.div;
   715  02DA  083C               	movf	rpm_timer@in+6,w	;volatile
   716  02DB  00A0               	movwf	___aldiv@divisor
   717  02DC  083D               	movf	rpm_timer@in+7,w	;volatile
   718  02DD  00A1               	movwf	___aldiv@divisor+1
   719  02DE  3000               	movlw	0
   720  02DF  1BA1               	btfsc	___aldiv@divisor+1,7
   721  02E0  30FF               	movlw	255
   722  02E1  00A2               	movwf	___aldiv@divisor+2
   723  02E2  00A3               	movwf	___aldiv@divisor+3
   724  02E3  0849               	movf	_rpm_timer$469+3,w
   725  02E4  00B1               	movwf	___lmul@multiplier+3
   726  02E5  0848               	movf	_rpm_timer$469+2,w
   727  02E6  00B0               	movwf	___lmul@multiplier+2
   728  02E7  0847               	movf	_rpm_timer$469+1,w
   729  02E8  00AF               	movwf	___lmul@multiplier+1
   730  02E9  0846               	movf	_rpm_timer$469,w
   731  02EA  00AE               	movwf	___lmul@multiplier
   732  02EB  3000               	movlw	0
   733  02EC  00B5               	movwf	___lmul@multiplicand+3
   734  02ED  3000               	movlw	0
   735  02EE  00B4               	movwf	___lmul@multiplicand+2
   736  02EF  3003               	movlw	3
   737  02F0  00B3               	movwf	___lmul@multiplicand+1
   738  02F1  30E8               	movlw	232
   739  02F2  00B2               	movwf	___lmul@multiplicand
   740  02F3  120A  118A  24DB  120A  118A  	fcall	___lmul
   741  02F8  1283               	bcf	3,5	;RP0=0, select bank0
   742  02F9  1303               	bcf	3,6	;RP1=0, select bank0
   743  02FA  0831               	movf	?___lmul+3,w
   744  02FB  00A7               	movwf	___aldiv@dividend+3
   745  02FC  0830               	movf	?___lmul+2,w
   746  02FD  00A6               	movwf	___aldiv@dividend+2
   747  02FE  082F               	movf	?___lmul+1,w
   748  02FF  00A5               	movwf	___aldiv@dividend+1
   749  0300  082E               	movf	?___lmul,w
   750  0301  00A4               	movwf	___aldiv@dividend
   751  0302  120A  118A  2370  120A  118A  	fcall	___aldiv
   752  0307  1283               	bcf	3,5	;RP0=0, select bank0
   753  0308  1303               	bcf	3,6	;RP1=0, select bank0
   754  0309  0821               	movf	?___aldiv+1,w
   755  030A  00CD               	movwf	rpm_timer@out+3	;volatile
   756  030B  0820               	movf	?___aldiv,w
   757  030C  00CC               	movwf	rpm_timer@out+2	;volatile
   758                           
   759                           ;main.c: 38: if (out.value > in.max) out.max = out.value;
   760  030D  083F               	movf	rpm_timer@in+9,w	;volatile
   761  030E  3A80               	xorlw	128
   762  030F  00C2               	movwf	??_rpm_timer
   763  0310  084D               	movf	rpm_timer@out+3,w	;volatile
   764  0311  3A80               	xorlw	128
   765  0312  0242               	subwf	??_rpm_timer,w
   766  0313  1D03               	skipz
   767  0314  2B17               	goto	u575
   768  0315  084C               	movf	rpm_timer@out+2,w	;volatile
   769  0316  023E               	subwf	rpm_timer@in+8,w	;volatile
   770  0317                     u575:	
   771  0317  1803               	skipnc
   772  0318  2B1F               	goto	l57
   773  0319  1283               	bcf	3,5	;RP0=0, select bank0
   774  031A  1303               	bcf	3,6	;RP1=0, select bank0
   775  031B  084D               	movf	rpm_timer@out+3,w	;volatile
   776  031C  00D3               	movwf	rpm_timer@out+9	;volatile
   777  031D  084C               	movf	rpm_timer@out+2,w	;volatile
   778  031E  00D2               	movwf	rpm_timer@out+8	;volatile
   779  031F                     l57:	
   780                           
   781                           ;main.c: 39: out.time = t;
   782  031F  1283               	bcf	3,5	;RP0=0, select bank0
   783  0320  1303               	bcf	3,6	;RP1=0, select bank0
   784  0321  2B40               	goto	l805
   785  0322                     l799:	
   786                           ;main.c: 40: }
   787                           
   788                           
   789                           ;main.c: 41: else if (t - in.time > 37500) {
   790  0322  1283               	bcf	3,5	;RP0=0, select bank0
   791  0323  1303               	bcf	3,6	;RP1=0, select bank0
   792  0324  0936               	comf	rpm_timer@in,w	;volatile
   793  0325  00C2               	movwf	??_rpm_timer
   794  0326  0937               	comf	rpm_timer@in+1,w	;volatile
   795  0327  00C3               	movwf	??_rpm_timer+1
   796  0328  0AC2               	incf	??_rpm_timer,f
   797  0329  1903               	skipnz
   798  032A  0AC3               	incf	??_rpm_timer+1,f
   799  032B  0840               	movf	rpm_timer@t,w
   800  032C  0742               	addwf	??_rpm_timer,w
   801  032D  00C4               	movwf	??_rpm_timer+2
   802  032E  0841               	movf	rpm_timer@t+1,w
   803  032F  1803               	skipnc
   804  0330  0A41               	incf	rpm_timer@t+1,w
   805  0331  0743               	addwf	??_rpm_timer+1,w
   806  0332  00C5               	movwf	??_rpm_timer+3
   807  0333  3092               	movlw	146
   808  0334  0245               	subwf	??_rpm_timer+3,w
   809  0335  307D               	movlw	125
   810  0336  1903               	skipnz
   811  0337  0244               	subwf	??_rpm_timer+2,w
   812  0338  1C03               	skipc
   813  0339  2B45               	goto	l807
   814                           
   815                           ;main.c: 42: out.count = -1;
   816  033A  30FF               	movlw	255
   817  033B  00CF               	movwf	rpm_timer@out+5	;volatile
   818  033C  30FF               	movlw	255
   819  033D  00CE               	movwf	rpm_timer@out+4	;volatile
   820                           
   821                           ;main.c: 43: out.value = 0;
   822  033E  01CC               	clrf	rpm_timer@out+2	;volatile
   823  033F  01CD               	clrf	rpm_timer@out+3	;volatile
   824  0340                     l805:	
   825                           
   826                           ;main.c: 44: out.time = t;
   827  0340  0841               	movf	rpm_timer@t+1,w
   828  0341  00CB               	movwf	rpm_timer@out+1	;volatile
   829  0342  0840               	movf	rpm_timer@t,w
   830  0343  00CA               	movwf	rpm_timer@out	;volatile
   831                           
   832                           ;main.c: 45: }
   833  0344  2B5A               	goto	l55
   834  0345                     l807:	
   835                           
   836                           ;main.c: 46: else {
   837                           ;main.c: 47: out = in;
   838  0345  304A               	movlw	rpm_timer@out& (0+255)
   839  0346  0084               	movwf	4
   840  0347  3036               	movlw	low rpm_timer@in
   841  0348  00C2               	movwf	??_rpm_timer
   842  0349  0804               	movf	4,w
   843  034A  00C3               	movwf	??_rpm_timer+1
   844  034B  300A               	movlw	10
   845  034C  00C4               	movwf	??_rpm_timer+2
   846  034D                     u590:	
   847  034D  0842               	movf	??_rpm_timer,w
   848  034E  0084               	movwf	4
   849  034F  1383               	bcf	3,7	;select IRP bank0
   850  0350  0800               	movf	0,w
   851  0351  00C5               	movwf	??_rpm_timer+3
   852  0352  0AC2               	incf	??_rpm_timer,f
   853  0353  0843               	movf	??_rpm_timer+1,w
   854  0354  0084               	movwf	4
   855  0355  0845               	movf	??_rpm_timer+3,w
   856  0356  0080               	movwf	0
   857  0357  0AC3               	incf	??_rpm_timer+1,f
   858  0358  0BC4               	decfsz	??_rpm_timer+2,f
   859  0359  2B4D               	goto	u590
   860  035A                     l55:	
   861                           
   862                           ;main.c: 48: }
   863                           ;main.c: 49: return out;
   864  035A  3036               	movlw	?_rpm_timer& (0+255)
   865  035B  0084               	movwf	4
   866  035C  304A               	movlw	low rpm_timer@out
   867  035D  00C2               	movwf	??_rpm_timer
   868  035E  0804               	movf	4,w
   869  035F  00C3               	movwf	??_rpm_timer+1
   870  0360  300A               	movlw	10
   871  0361  00C4               	movwf	??_rpm_timer+2
   872  0362                     u600:	
   873  0362  0842               	movf	??_rpm_timer,w
   874  0363  0084               	movwf	4
   875  0364  1383               	bcf	3,7	;select IRP bank0
   876  0365  0800               	movf	0,w
   877  0366  00C5               	movwf	??_rpm_timer+3
   878  0367  0AC2               	incf	??_rpm_timer,f
   879  0368  0843               	movf	??_rpm_timer+1,w
   880  0369  0084               	movwf	4
   881  036A  0845               	movf	??_rpm_timer+3,w
   882  036B  0080               	movwf	0
   883  036C  0AC3               	incf	??_rpm_timer+1,f
   884  036D  0BC4               	decfsz	??_rpm_timer+2,f
   885  036E  2B62               	goto	u600
   886  036F  0008               	return
   887  0370                     __end_of_rpm_timer:	
   888                           
   889                           	psect	text2
   890  04DB                     __ptext2:	
   891 ;; *************** function ___lmul *****************
   892 ;; Defined at:
   893 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/Umul32.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  multiplier      4   14[BANK0 ] unsigned long 
   896 ;;  multiplicand    4   18[BANK0 ] unsigned long 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  product         4    6[COMMON] unsigned long 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  4   14[BANK0 ] unsigned long 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       8       0       0       0
   909 ;;      Locals:         4       0       0       0       0
   910 ;;      Temps:          1       0       0       0       0
   911 ;;      Totals:         5       8       0       0       0
   912 ;;Total ram usage:       13 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_rpm_timer
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function ___lmul
   924  04DB                     ___lmul:	
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   928  04DB  3000               	movlw	0
   929  04DC  00F9               	movwf	___lmul@product+3
   930  04DD  3000               	movlw	0
   931  04DE  00F8               	movwf	___lmul@product+2
   932  04DF  3000               	movlw	0
   933  04E0  00F7               	movwf	___lmul@product+1
   934  04E1  3000               	movlw	0
   935  04E2  00F6               	movwf	___lmul@product
   936  04E3                     l727:	
   937  04E3  1283               	bcf	3,5	;RP0=0, select bank0
   938  04E4  1303               	bcf	3,6	;RP1=0, select bank0
   939  04E5  1C2E               	btfss	___lmul@multiplier,0
   940  04E6  2CFB               	goto	l731
   941  04E7  0832               	movf	___lmul@multiplicand,w
   942  04E8  07F6               	addwf	___lmul@product,f
   943  04E9  0833               	movf	___lmul@multiplicand+1,w
   944  04EA  1103               	clrz
   945  04EB  1803               	skipnc
   946  04EC  3E01               	addlw	1
   947  04ED  1D03               	btfss	3,2
   948  04EE  07F7               	addwf	___lmul@product+1,f
   949  04EF  0834               	movf	___lmul@multiplicand+2,w
   950  04F0  1103               	clrz
   951  04F1  1803               	skipnc
   952  04F2  3E01               	addlw	1
   953  04F3  1D03               	btfss	3,2
   954  04F4  07F8               	addwf	___lmul@product+2,f
   955  04F5  0835               	movf	___lmul@multiplicand+3,w
   956  04F6  1103               	clrz
   957  04F7  1803               	skipnc
   958  04F8  3E01               	addlw	1
   959  04F9  1D03               	btfss	3,2
   960  04FA  07F9               	addwf	___lmul@product+3,f
   961  04FB                     l731:	
   962  04FB  3001               	movlw	1
   963  04FC  00F5               	movwf	??___lmul
   964  04FD                     u425:	
   965  04FD  1003               	clrc
   966  04FE  0DB2               	rlf	___lmul@multiplicand,f
   967  04FF  0DB3               	rlf	___lmul@multiplicand+1,f
   968  0500  0DB4               	rlf	___lmul@multiplicand+2,f
   969  0501  0DB5               	rlf	___lmul@multiplicand+3,f
   970  0502  0BF5               	decfsz	??___lmul,f
   971  0503  2CFD               	goto	u425
   972  0504  3001               	movlw	1
   973  0505                     u435:	
   974  0505  1003               	clrc
   975  0506  0CB1               	rrf	___lmul@multiplier+3,f
   976  0507  0CB0               	rrf	___lmul@multiplier+2,f
   977  0508  0CAF               	rrf	___lmul@multiplier+1,f
   978  0509  0CAE               	rrf	___lmul@multiplier,f
   979  050A  3EFF               	addlw	-1
   980  050B  1D03               	skipz
   981  050C  2D05               	goto	u435
   982  050D  0831               	movf	___lmul@multiplier+3,w
   983  050E  0430               	iorwf	___lmul@multiplier+2,w
   984  050F  042F               	iorwf	___lmul@multiplier+1,w
   985  0510  042E               	iorwf	___lmul@multiplier,w
   986  0511  1D03               	skipz
   987  0512  2CE3               	goto	l727
   988  0513  0879               	movf	___lmul@product+3,w
   989  0514  00B1               	movwf	?___lmul+3
   990  0515  0878               	movf	___lmul@product+2,w
   991  0516  00B0               	movwf	?___lmul+2
   992  0517  0877               	movf	___lmul@product+1,w
   993  0518  00AF               	movwf	?___lmul+1
   994  0519  0876               	movf	___lmul@product,w
   995  051A  00AE               	movwf	?___lmul
   996  051B  0008               	return
   997  051C                     __end_of___lmul:	
   998                           
   999                           	psect	text3
  1000  0370                     __ptext3:	
  1001 ;; *************** function ___aldiv *****************
  1002 ;; Defined at:
  1003 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/common/aldiv.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  divisor         4    0[BANK0 ] long 
  1006 ;;  dividend        4    4[BANK0 ] long 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  quotient        4   10[BANK0 ] long 
  1009 ;;  sign            1    9[BANK0 ] unsigned char 
  1010 ;;  counter         1    8[BANK0 ] unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  4    0[BANK0 ] long 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2, status,0
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       8       0       0       0
  1021 ;;      Locals:         0       6       0       0       0
  1022 ;;      Temps:          1       0       0       0       0
  1023 ;;      Totals:         1      14       0       0       0
  1024 ;;Total ram usage:       15 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_rpm_timer
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function ___aldiv
  1036  0370                     ___aldiv:	
  1037                           
  1038                           ;incstack = 0
  1039                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1040  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0372  01A9               	clrf	___aldiv@sign
  1043  0373  1FA3               	btfss	___aldiv@divisor+3,7
  1044  0374  2B82               	goto	l208
  1045  0375  09A0               	comf	___aldiv@divisor,f
  1046  0376  09A1               	comf	___aldiv@divisor+1,f
  1047  0377  09A2               	comf	___aldiv@divisor+2,f
  1048  0378  09A3               	comf	___aldiv@divisor+3,f
  1049  0379  0AA0               	incf	___aldiv@divisor,f
  1050  037A  1903               	skipnz
  1051  037B  0AA1               	incf	___aldiv@divisor+1,f
  1052  037C  1903               	skipnz
  1053  037D  0AA2               	incf	___aldiv@divisor+2,f
  1054  037E  1903               	skipnz
  1055  037F  0AA3               	incf	___aldiv@divisor+3,f
  1056  0380  01A9               	clrf	___aldiv@sign
  1057  0381  0AA9               	incf	___aldiv@sign,f
  1058  0382                     l208:	
  1059  0382  1FA7               	btfss	___aldiv@dividend+3,7
  1060  0383  2B93               	goto	l749
  1061  0384  09A4               	comf	___aldiv@dividend,f
  1062  0385  09A5               	comf	___aldiv@dividend+1,f
  1063  0386  09A6               	comf	___aldiv@dividend+2,f
  1064  0387  09A7               	comf	___aldiv@dividend+3,f
  1065  0388  0AA4               	incf	___aldiv@dividend,f
  1066  0389  1903               	skipnz
  1067  038A  0AA5               	incf	___aldiv@dividend+1,f
  1068  038B  1903               	skipnz
  1069  038C  0AA6               	incf	___aldiv@dividend+2,f
  1070  038D  1903               	skipnz
  1071  038E  0AA7               	incf	___aldiv@dividend+3,f
  1072  038F  3001               	movlw	1
  1073  0390  00F4               	movwf	??___aldiv
  1074  0391  0874               	movf	??___aldiv,w
  1075  0392  06A9               	xorwf	___aldiv@sign,f
  1076  0393                     l749:	
  1077  0393  3000               	movlw	0
  1078  0394  00AD               	movwf	___aldiv@quotient+3
  1079  0395  3000               	movlw	0
  1080  0396  00AC               	movwf	___aldiv@quotient+2
  1081  0397  3000               	movlw	0
  1082  0398  00AB               	movwf	___aldiv@quotient+1
  1083  0399  3000               	movlw	0
  1084  039A  00AA               	movwf	___aldiv@quotient
  1085  039B  0823               	movf	___aldiv@divisor+3,w
  1086  039C  0422               	iorwf	___aldiv@divisor+2,w
  1087  039D  0421               	iorwf	___aldiv@divisor+1,w
  1088  039E  0420               	iorwf	___aldiv@divisor,w
  1089  039F  1903               	skipnz
  1090  03A0  2BE8               	goto	l771
  1091  03A1  01A8               	clrf	___aldiv@counter
  1092  03A2  0AA8               	incf	___aldiv@counter,f
  1093  03A3                     l757:	
  1094  03A3  1BA3               	btfsc	___aldiv@divisor+3,7
  1095  03A4  2BB3               	goto	l759
  1096  03A5  3001               	movlw	1
  1097  03A6  00F4               	movwf	??___aldiv
  1098  03A7                     u485:	
  1099  03A7  1003               	clrc
  1100  03A8  0DA0               	rlf	___aldiv@divisor,f
  1101  03A9  0DA1               	rlf	___aldiv@divisor+1,f
  1102  03AA  0DA2               	rlf	___aldiv@divisor+2,f
  1103  03AB  0DA3               	rlf	___aldiv@divisor+3,f
  1104  03AC  0BF4               	decfsz	??___aldiv,f
  1105  03AD  2BA7               	goto	u485
  1106  03AE  3001               	movlw	1
  1107  03AF  00F4               	movwf	??___aldiv
  1108  03B0  0874               	movf	??___aldiv,w
  1109  03B1  07A8               	addwf	___aldiv@counter,f
  1110  03B2  2BA3               	goto	l757
  1111  03B3                     l759:	
  1112  03B3  3001               	movlw	1
  1113  03B4  00F4               	movwf	??___aldiv
  1114  03B5                     u505:	
  1115  03B5  1003               	clrc
  1116  03B6  0DAA               	rlf	___aldiv@quotient,f
  1117  03B7  0DAB               	rlf	___aldiv@quotient+1,f
  1118  03B8  0DAC               	rlf	___aldiv@quotient+2,f
  1119  03B9  0DAD               	rlf	___aldiv@quotient+3,f
  1120  03BA  0BF4               	decfsz	??___aldiv,f
  1121  03BB  2BB5               	goto	u505
  1122  03BC  0823               	movf	___aldiv@divisor+3,w
  1123  03BD  0227               	subwf	___aldiv@dividend+3,w
  1124  03BE  1D03               	skipz
  1125  03BF  2BCA               	goto	u515
  1126  03C0  0822               	movf	___aldiv@divisor+2,w
  1127  03C1  0226               	subwf	___aldiv@dividend+2,w
  1128  03C2  1D03               	skipz
  1129  03C3  2BCA               	goto	u515
  1130  03C4  0821               	movf	___aldiv@divisor+1,w
  1131  03C5  0225               	subwf	___aldiv@dividend+1,w
  1132  03C6  1D03               	skipz
  1133  03C7  2BCA               	goto	u515
  1134  03C8  0820               	movf	___aldiv@divisor,w
  1135  03C9  0224               	subwf	___aldiv@dividend,w
  1136  03CA                     u515:	
  1137  03CA  1C03               	skipc
  1138  03CB  2BDB               	goto	l767
  1139  03CC  0820               	movf	___aldiv@divisor,w
  1140  03CD  02A4               	subwf	___aldiv@dividend,f
  1141  03CE  0821               	movf	___aldiv@divisor+1,w
  1142  03CF  1C03               	skipc
  1143  03D0  0F21               	incfsz	___aldiv@divisor+1,w
  1144  03D1  02A5               	subwf	___aldiv@dividend+1,f
  1145  03D2  0822               	movf	___aldiv@divisor+2,w
  1146  03D3  1C03               	skipc
  1147  03D4  0F22               	incfsz	___aldiv@divisor+2,w
  1148  03D5  02A6               	subwf	___aldiv@dividend+2,f
  1149  03D6  0823               	movf	___aldiv@divisor+3,w
  1150  03D7  1C03               	skipc
  1151  03D8  0F23               	incfsz	___aldiv@divisor+3,w
  1152  03D9  02A7               	subwf	___aldiv@dividend+3,f
  1153  03DA  142A               	bsf	___aldiv@quotient,0
  1154  03DB                     l767:	
  1155  03DB  3001               	movlw	1
  1156  03DC                     u525:	
  1157  03DC  1003               	clrc
  1158  03DD  0CA3               	rrf	___aldiv@divisor+3,f
  1159  03DE  0CA2               	rrf	___aldiv@divisor+2,f
  1160  03DF  0CA1               	rrf	___aldiv@divisor+1,f
  1161  03E0  0CA0               	rrf	___aldiv@divisor,f
  1162  03E1  3EFF               	addlw	-1
  1163  03E2  1D03               	skipz
  1164  03E3  2BDC               	goto	u525
  1165  03E4  3001               	movlw	1
  1166  03E5  02A8               	subwf	___aldiv@counter,f
  1167  03E6  1D03               	btfss	3,2
  1168  03E7  2BB3               	goto	l759
  1169  03E8                     l771:	
  1170  03E8  0829               	movf	___aldiv@sign,w
  1171  03E9  1903               	btfsc	3,2
  1172  03EA  2BF6               	goto	l775
  1173  03EB  09AA               	comf	___aldiv@quotient,f
  1174  03EC  09AB               	comf	___aldiv@quotient+1,f
  1175  03ED  09AC               	comf	___aldiv@quotient+2,f
  1176  03EE  09AD               	comf	___aldiv@quotient+3,f
  1177  03EF  0AAA               	incf	___aldiv@quotient,f
  1178  03F0  1903               	skipnz
  1179  03F1  0AAB               	incf	___aldiv@quotient+1,f
  1180  03F2  1903               	skipnz
  1181  03F3  0AAC               	incf	___aldiv@quotient+2,f
  1182  03F4  1903               	skipnz
  1183  03F5  0AAD               	incf	___aldiv@quotient+3,f
  1184  03F6                     l775:	
  1185  03F6  082D               	movf	___aldiv@quotient+3,w
  1186  03F7  00A3               	movwf	?___aldiv+3
  1187  03F8  082C               	movf	___aldiv@quotient+2,w
  1188  03F9  00A2               	movwf	?___aldiv+2
  1189  03FA  082B               	movf	___aldiv@quotient+1,w
  1190  03FB  00A1               	movwf	?___aldiv+1
  1191  03FC  082A               	movf	___aldiv@quotient,w
  1192  03FD  00A0               	movwf	?___aldiv
  1193  03FE  0008               	return
  1194  03FF                     __end_of___aldiv:	
  1195                           
  1196                           	psect	text4
  1197  051C                     __ptext4:	
  1198 ;; *************** function ___wmul *****************
  1199 ;; Defined at:
  1200 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/Umul16.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  multiplier      2    4[COMMON] unsigned int 
  1203 ;;  multiplicand    2    6[COMMON] unsigned int 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  product         2    8[COMMON] unsigned int 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  2    4[COMMON] unsigned int 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         4       0       0       0       0
  1216 ;;      Locals:         2       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0
  1218 ;;      Totals:         6       0       0       0       0
  1219 ;;Total ram usage:        6 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function ___wmul
  1231  051C                     ___wmul:	
  1232                           
  1233                           ;incstack = 0
  1234                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1235  051C  01F8               	clrf	___wmul@product
  1236  051D  01F9               	clrf	___wmul@product+1
  1237  051E                     l813:	
  1238  051E  1C74               	btfss	___wmul@multiplier,0
  1239  051F  2D26               	goto	l153
  1240  0520  0876               	movf	___wmul@multiplicand,w
  1241  0521  07F8               	addwf	___wmul@product,f
  1242  0522  1803               	skipnc
  1243  0523  0AF9               	incf	___wmul@product+1,f
  1244  0524  0877               	movf	___wmul@multiplicand+1,w
  1245  0525  07F9               	addwf	___wmul@product+1,f
  1246  0526                     l153:	
  1247  0526  3001               	movlw	1
  1248  0527                     u625:	
  1249  0527  1003               	clrc
  1250  0528  0DF6               	rlf	___wmul@multiplicand,f
  1251  0529  0DF7               	rlf	___wmul@multiplicand+1,f
  1252  052A  3EFF               	addlw	-1
  1253  052B  1D03               	skipz
  1254  052C  2D27               	goto	u625
  1255  052D  3001               	movlw	1
  1256  052E                     u635:	
  1257  052E  1003               	clrc
  1258  052F  0CF5               	rrf	___wmul@multiplier+1,f
  1259  0530  0CF4               	rrf	___wmul@multiplier,f
  1260  0531  3EFF               	addlw	-1
  1261  0532  1D03               	skipz
  1262  0533  2D2E               	goto	u635
  1263  0534  0874               	movf	___wmul@multiplier,w
  1264  0535  0475               	iorwf	___wmul@multiplier+1,w
  1265  0536  1D03               	btfss	3,2
  1266  0537  2D1E               	goto	l813
  1267  0538  0879               	movf	___wmul@product+1,w
  1268  0539  00F5               	movwf	?___wmul+1
  1269  053A  0878               	movf	___wmul@product,w
  1270  053B  00F4               	movwf	?___wmul
  1271  053C  0008               	return
  1272  053D                     __end_of___wmul:	
  1273                           
  1274                           	psect	text5
  1275  0551                     __ptext5:	
  1276 ;; *************** function ___bmul *****************
  1277 ;; Defined at:
  1278 ;;		line 4 in file "/opt/microchip/xc8/v1.43/sources/common/Umul8.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  multiplier      1    wreg     unsigned char 
  1281 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  multiplier      1   12[BANK0 ] unsigned char 
  1284 ;;  product         1   11[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       1       0       0       0
  1295 ;;      Locals:         0       2       0       0       0
  1296 ;;      Temps:          0       1       0       0       0
  1297 ;;      Totals:         0       4       0       0       0
  1298 ;;Total ram usage:        4 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function ___bmul
  1310  0551                     ___bmul:	
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1314                           ;___bmul@multiplier stored from wreg
  1315  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0553  00AC               	movwf	___bmul@multiplier
  1318  0554  01AB               	clrf	___bmul@product
  1319  0555                     l827:	
  1320  0555  1C2C               	btfss	___bmul@multiplier,0
  1321  0556  2D5B               	goto	l831
  1322  0557  0829               	movf	___bmul@multiplicand,w
  1323  0558  00AA               	movwf	??___bmul
  1324  0559  082A               	movf	??___bmul,w
  1325  055A  07AB               	addwf	___bmul@product,f
  1326  055B                     l831:	
  1327  055B  1003               	clrc
  1328  055C  0DA9               	rlf	___bmul@multiplicand,f
  1329  055D  1003               	clrc
  1330  055E  0CAC               	rrf	___bmul@multiplier,f
  1331  055F  082C               	movf	___bmul@multiplier,w
  1332  0560  1D03               	btfss	3,2
  1333  0561  2D55               	goto	l827
  1334  0562  082B               	movf	___bmul@product,w
  1335  0563  0008               	return
  1336  0564                     __end_of___bmul:	
  1337                           
  1338                           	psect	text6
  1339  0480                     __ptext6:	
  1340 ;; *************** function ___awdiv *****************
  1341 ;; Defined at:
  1342 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/common/awdiv.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  divisor         2    0[BANK0 ] int 
  1345 ;;  dividend        2    2[BANK0 ] int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  quotient        2    7[BANK0 ] int 
  1348 ;;  sign            1    6[BANK0 ] unsigned char 
  1349 ;;  counter         1    5[BANK0 ] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  2    0[BANK0 ] int 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       4       0       0       0
  1360 ;;      Locals:         0       4       0       0       0
  1361 ;;      Temps:          0       1       0       0       0
  1362 ;;      Totals:         0       9       0       0       0
  1363 ;;Total ram usage:        9 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function ___awdiv
  1375  0480                     ___awdiv:	
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1379  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0482  01A6               	clrf	___awdiv@sign
  1382  0483  1FA1               	btfss	___awdiv@divisor+1,7
  1383  0484  2C8C               	goto	l847
  1384  0485  09A0               	comf	___awdiv@divisor,f
  1385  0486  09A1               	comf	___awdiv@divisor+1,f
  1386  0487  0AA0               	incf	___awdiv@divisor,f
  1387  0488  1903               	skipnz
  1388  0489  0AA1               	incf	___awdiv@divisor+1,f
  1389  048A  01A6               	clrf	___awdiv@sign
  1390  048B  0AA6               	incf	___awdiv@sign,f
  1391  048C                     l847:	
  1392  048C  1FA3               	btfss	___awdiv@dividend+1,7
  1393  048D  2C97               	goto	l853
  1394  048E  09A2               	comf	___awdiv@dividend,f
  1395  048F  09A3               	comf	___awdiv@dividend+1,f
  1396  0490  0AA2               	incf	___awdiv@dividend,f
  1397  0491  1903               	skipnz
  1398  0492  0AA3               	incf	___awdiv@dividend+1,f
  1399  0493  3001               	movlw	1
  1400  0494  00A4               	movwf	??___awdiv
  1401  0495  0824               	movf	??___awdiv,w
  1402  0496  06A6               	xorwf	___awdiv@sign,f
  1403  0497                     l853:	
  1404  0497  01A7               	clrf	___awdiv@quotient
  1405  0498  01A8               	clrf	___awdiv@quotient+1
  1406  0499  0820               	movf	___awdiv@divisor,w
  1407  049A  0421               	iorwf	___awdiv@divisor+1,w
  1408  049B  1903               	btfsc	3,2
  1409  049C  2CCE               	goto	l875
  1410  049D  01A5               	clrf	___awdiv@counter
  1411  049E  0AA5               	incf	___awdiv@counter,f
  1412  049F                     l863:	
  1413  049F  1BA1               	btfsc	___awdiv@divisor+1,7
  1414  04A0  2CAD               	goto	l865
  1415  04A1  3001               	movlw	1
  1416  04A2                     u705:	
  1417  04A2  1003               	clrc
  1418  04A3  0DA0               	rlf	___awdiv@divisor,f
  1419  04A4  0DA1               	rlf	___awdiv@divisor+1,f
  1420  04A5  3EFF               	addlw	-1
  1421  04A6  1D03               	skipz
  1422  04A7  2CA2               	goto	u705
  1423  04A8  3001               	movlw	1
  1424  04A9  00A4               	movwf	??___awdiv
  1425  04AA  0824               	movf	??___awdiv,w
  1426  04AB  07A5               	addwf	___awdiv@counter,f
  1427  04AC  2C9F               	goto	l863
  1428  04AD                     l865:	
  1429  04AD  3001               	movlw	1
  1430  04AE                     u725:	
  1431  04AE  1003               	clrc
  1432  04AF  0DA7               	rlf	___awdiv@quotient,f
  1433  04B0  0DA8               	rlf	___awdiv@quotient+1,f
  1434  04B1  3EFF               	addlw	-1
  1435  04B2  1D03               	skipz
  1436  04B3  2CAE               	goto	u725
  1437  04B4  0821               	movf	___awdiv@divisor+1,w
  1438  04B5  0223               	subwf	___awdiv@dividend+1,w
  1439  04B6  1D03               	skipz
  1440  04B7  2CBA               	goto	u735
  1441  04B8  0820               	movf	___awdiv@divisor,w
  1442  04B9  0222               	subwf	___awdiv@dividend,w
  1443  04BA                     u735:	
  1444  04BA  1C03               	skipc
  1445  04BB  2CC3               	goto	l871
  1446  04BC  0820               	movf	___awdiv@divisor,w
  1447  04BD  02A2               	subwf	___awdiv@dividend,f
  1448  04BE  0821               	movf	___awdiv@divisor+1,w
  1449  04BF  1C03               	skipc
  1450  04C0  03A3               	decf	___awdiv@dividend+1,f
  1451  04C1  02A3               	subwf	___awdiv@dividend+1,f
  1452  04C2  1427               	bsf	___awdiv@quotient,0
  1453  04C3                     l871:	
  1454  04C3  3001               	movlw	1
  1455  04C4                     u745:	
  1456  04C4  1003               	clrc
  1457  04C5  0CA1               	rrf	___awdiv@divisor+1,f
  1458  04C6  0CA0               	rrf	___awdiv@divisor,f
  1459  04C7  3EFF               	addlw	-1
  1460  04C8  1D03               	skipz
  1461  04C9  2CC4               	goto	u745
  1462  04CA  3001               	movlw	1
  1463  04CB  02A5               	subwf	___awdiv@counter,f
  1464  04CC  1D03               	btfss	3,2
  1465  04CD  2CAD               	goto	l865
  1466  04CE                     l875:	
  1467  04CE  0826               	movf	___awdiv@sign,w
  1468  04CF  1903               	btfsc	3,2
  1469  04D0  2CD6               	goto	l879
  1470  04D1  09A7               	comf	___awdiv@quotient,f
  1471  04D2  09A8               	comf	___awdiv@quotient+1,f
  1472  04D3  0AA7               	incf	___awdiv@quotient,f
  1473  04D4  1903               	skipnz
  1474  04D5  0AA8               	incf	___awdiv@quotient+1,f
  1475  04D6                     l879:	
  1476  04D6  0828               	movf	___awdiv@quotient+1,w
  1477  04D7  00A1               	movwf	?___awdiv+1
  1478  04D8  0827               	movf	___awdiv@quotient,w
  1479  04D9  00A0               	movwf	?___awdiv
  1480  04DA  0008               	return
  1481  04DB                     __end_of___awdiv:	
  1482                           
  1483                           	psect	text7
  1484  053D                     __ptext7:	
  1485 ;; *************** function _raycast_intersection_cleared *****************
  1486 ;; Defined at:
  1487 ;;		line 20 in file "main.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0
  1503 ;;      Temps:          4       0       0       0       0
  1504 ;;      Totals:         4       0       0       0       0
  1505 ;;Total ram usage:        4 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		Interrupt level 1
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _raycast_intersection_cleared
  1516  053D                     _raycast_intersection_cleared:	
  1517                           
  1518                           ;main.c: 21: RB7 = !RB7;
  1519  053D  3080               	movlw	128
  1520  053E  0686               	xorwf	6,f
  1521                           
  1522                           ;main.c: 22: FAN.count++;
  1523  053F  3001               	movlw	1
  1524  0540  07E0               	addwf	_FAN+4,f	;volatile
  1525  0541  1803               	skipnc
  1526  0542  0AE1               	incf	_FAN+5,f	;volatile
  1527  0543  3000               	movlw	0
  1528  0544  07E1               	addwf	_FAN+5,f	;volatile
  1529                           
  1530                           ;main.c: 23: INTF = 0;
  1531  0545  108B               	bcf	11,1	;volatile
  1532                           
  1533                           ;main.c: 24: return;
  1534  0546  0873               	movf	??_raycast_intersection_cleared+3,w
  1535  0547  00FF               	movwf	127
  1536  0548  0872               	movf	??_raycast_intersection_cleared+2,w
  1537  0549  008A               	movwf	10
  1538  054A  0871               	movf	??_raycast_intersection_cleared+1,w
  1539  054B  0084               	movwf	4
  1540  054C  0E70               	swapf	??_raycast_intersection_cleared^(0+-128),w
  1541  054D  0083               	movwf	3
  1542  054E  0EFE               	swapf	126,f
  1543  054F  0E7E               	swapf	126,w
  1544  0550  0009               	retfie
  1545  0551                     __end_of_raycast_intersection_cleared:	
  1546  007E                     btemp	set	126	;btemp
  1547  007E                     wtemp0	set	126
  1548                           
  1549                           	psect	intentry
  1550  0259                     __pintentry:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _raycast_intersection_cleared: [wreg]
  1553                           
  1554  0259                     interrupt_function:	
  1555  007E                     saved_w	set	btemp
  1556  0259  00FE               	movwf	btemp
  1557  025A  0E03               	swapf	3,w
  1558  025B  00F0               	movwf	??_raycast_intersection_cleared
  1559  025C  0804               	movf	4,w
  1560  025D  00F1               	movwf	??_raycast_intersection_cleared+1
  1561  025E  080A               	movf	10,w
  1562  025F  00F2               	movwf	??_raycast_intersection_cleared+2
  1563  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0262  087F               	movf	btemp+1,w
  1566  0263  00F3               	movwf	??_raycast_intersection_cleared+3
  1567  0264  120A  118A  2D3D   	ljmp	_raycast_intersection_cleared


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     60      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _rpm_timer->___lmul
    ___lmul->___aldiv
    ___bmul->___wmul
    ___awdiv->___wmul

Critical Paths under _raycast_intersection_cleared in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_rpm_timer
    _rpm_timer->___lmul
    ___lmul->___aldiv
    ___bmul->___awdiv

Critical Paths under _raycast_intersection_cleared in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _raycast_intersection_cleared in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _raycast_intersection_cleared in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _raycast_intersection_cleared in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2269
                                             52 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _rpm_timer
 ---------------------------------------------------------------------------------
 (1) _rpm_timer                                           30    18     12    1520
                                             22 BANK0     30    18     12
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     304
                                              5 COMMON     5     5      0
                                             14 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     198
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     145
                                              9 BANK0      4     3      1
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _raycast_intersection_cleared                         4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
     ___awdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   ___wmul
   _rpm_timer
     ___aldiv
     ___lmul
       ___aldiv (ARG)

 _raycast_intersection_cleared (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3C      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      50      12        0.0%
ABS                  0      0      50       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Sep  5 02:20:53 2017

                                    pc 0002                         ___bmul@product 002B  
                                   l55 035A                                     l57 031F  
                         ___awdiv@sign 0026                                     fsr 0004  
                  ___wmul@multiplicand 0076                                    l208 0382  
                                  l153 0526                                    l731 04FB  
                                  l813 051E                                    l805 0340  
                                  l831 055B                                    l727 04E3  
                                  l807 0345                                    l827 0555  
                                  l771 03E8                                    l853 0497  
                                  l757 03A3                                    l749 0393  
                                  l917 041E                                    l871 04C3  
                                  l863 049F                                    l847 048C  
                                  l775 03F6                                    l767 03DB  
                                  l759 03B3                                    _FAN 005C  
                                  l865 04AD                                    l875 04CE  
                                  l787 028B                                    l879 04D6  
                                  l799 0322                                    _GIE 005F  
                                  _RB7 0037                                    _PR2 0092  
                                  u600 0362                                    u505 03B5  
                                  u425 04FD                                    u515 03CA  
                                  u435 0505                                    u525 03DC  
                                  u705 04A2                                    u625 0527  
                                  u635 052E                                    u555 0282  
                                  u725 04AE                                    u485 03A7  
                                  u565 0294                                    u590 034D  
                                  u735 04BA                                    u575 0317  
                                  u745 04C4                                    u770 0427  
                                  u780 0447                                    fsr0 0004  
                                  indf 0000                                   _INTE 005C  
                                 _INTF 0059                                   _TMR1 000E  
                                 _main 03FF                                   btemp 007E  
                                 start 0267                      ___bmul@multiplier 002C  
                      __end_of___aldiv 03FF                                  ?_main 0070  
                      __end_of___awdiv 04DB                        ___awdiv@divisor 0020  
                      ___awdiv@counter 0025                           rpm_timer@out 004A  
                  ___lmul@multiplicand 0032                                  _nRBPU 040F  
                                pclath 000A                                  status 0003  
                                wtemp0 007E                        __initialization 026A  
                         __end_of_main 0480                                 ??_main 0054  
                               _CCP1M2 00BA                                 _CCP1M3 00BB  
                               _CCPR1L 0015                       ___awdiv@dividend 0022  
                               _INTEDG 040E                                 _TMR1CS 0081  
                               _TMR1ON 0080                                 _TMR2ON 0092  
                               _TRISB0 0430                                 _TRISC2 043A  
                               _TRISB7 0437                                 ___bmul 0551  
                               ___lmul 04DB                              ??___aldiv 0074  
                               ___wmul 051C                              ??___awdiv 0024  
                     ___awdiv@quotient 0027                                 saved_w 007E  
              __end_of__initialization 0276                    ___bmul@multiplicand 0029  
                       __pcstackCOMMON 0070                           __pidataBANK0 0575  
                           __pmaintext 03FF                                ?___bmul 0029  
                              ?___lmul 002E                                ?___wmul 0074  
                           __pintentry 0259                                _CCP1CON 0017  
                       ___lmul@product 0076                                _T1CKPS0 0084  
                              _T1CKPS1 0085                                _T2CKPS0 0090  
                              _T2CKPS1 0091                     __size_of_rpm_timer 00F6  
                              ___aldiv 0370                        __size_of___bmul 0013  
                              ___awdiv 0480                        __size_of___lmul 0041  
                      __size_of___wmul 0021                                __ptext1 027A  
                              __ptext2 04DB                                __ptext3 0370  
                              __ptext4 051C                                __ptext5 0551  
                              __ptext6 0480                                __ptext7 053D  
                     ___aldiv@dividend 0024                   end_of_initialization 0276  
 __end_of_raycast_intersection_cleared 0551  __size_of_raycast_intersection_cleared 0014  
         _raycast_intersection_cleared 053D                      __end_of_rpm_timer 0370  
                     ___aldiv@quotient 002A          ?_raycast_intersection_cleared 0070  
                       __end_of___bmul 0564                         __end_of___lmul 051C  
                       __end_of___wmul 053D                            rpm_timer@in 0036  
                  start_initialization 026A                               ??___bmul 002A  
                             ??___lmul 0075                               ??___wmul 0078  
                           init_fetch0 0564                            __pdataBANK0 005C  
                            ___latbits 0002                          __pcstackBANK0 0020  
                             ?___aldiv 0020                               ?___awdiv 0020  
       ??_raycast_intersection_cleared 0070                        ___aldiv@divisor 0020  
                    interrupt_function 0259                        ___aldiv@counter 0028  
                       ___wmul@product 0078                              _rpm_timer 027A  
                    ___wmul@multiplier 0074                             rpm_timer@t 0040  
                    ___lmul@multiplier 002E                       __size_of___aldiv 008F  
                     __size_of___awdiv 005B                             ?_rpm_timer 0036  
                        __size_of_main 0081                               init_ram0 0568  
                             intlevel1 0000                            ??_rpm_timer 0042  
                        _rpm_timer$469 0046                           ___aldiv@sign 0029  
