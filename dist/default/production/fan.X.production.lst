

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Sep  6 01:25:47 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.43
    20                           ; Generated 25/07/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113                           
   114                           	psect	idataBANK0
   115  01E1                     __pidataBANK0:	
   116                           
   117                           ;initializer for _FAN
   118  01E1  34FF               	retlw	255
   119  01E2  34FF               	retlw	255
   120  01E3  3400               	retlw	0
   121  01E4  3400               	retlw	0
   122  01E5  3400               	retlw	0
   123  01E6  3400               	retlw	0
   124  01E7  3407               	retlw	7
   125  01E8  3400               	retlw	0
   126  01E9  3488               	retlw	136
   127  01EA  3413               	retlw	19
   128                           
   129                           	psect	strings
   130  01EB                     __pstrings:	
   131  01EB                     stringtab:	
   132  01EB                     __stringtab:	
   133  01EB                     stringcode:	
   134                           ;	String table - string pointers are 1 byte each
   135                           
   136  01EB                     stringdir:	
   137  01EB  3001               	movlw	high stringdir
   138  01EC  008A               	movwf	10
   139  01ED  0804               	movf	4,w
   140  01EE  0A84               	incf	4,f
   141  01EF  0782               	addwf	2,f
   142  01F0                     __stringbase:	
   143  01F0  3400               	retlw	0
   144  01F1                     __end_of__stringtab:	
   145  01F1                     _RPSMIN:	
   146  01F1  3408               	retlw	8
   147  01F2  3400               	retlw	0
   148  01F3                     __end_of_RPSMIN:	
   149  01F3                     _T1FOSC:	
   150  01F3  3400               	retlw	0
   151  01F4  3410               	retlw	16
   152  01F5                     __end_of_T1FOSC:	
   153  000E                     _TMR1	set	14
   154  0015                     _CCPR1L	set	21
   155  0017                     _CCP1CON	set	23
   156  005F                     _GIE	set	95
   157  005C                     _INTE	set	92
   158  0092                     _TMR2ON	set	146
   159  0091                     _T2CKPS1	set	145
   160  0090                     _T2CKPS0	set	144
   161  00BA                     _CCP1M2	set	186
   162  00BB                     _CCP1M3	set	187
   163  0080                     _TMR1ON	set	128
   164  0085                     _T1CKPS1	set	133
   165  0084                     _T1CKPS0	set	132
   166  0081                     _TMR1CS	set	129
   167  0059                     _INTF	set	89
   168  0037                     _RB7	set	55
   169  0092                     _PR2	set	146
   170  040E                     _INTEDG	set	1038
   171  0437                     _TRISB7	set	1079
   172  0430                     _TRISB0	set	1072
   173  040F                     _nRBPU	set	1039
   174  043A                     _TRISC2	set	1082
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  0015                     start_initialization:	
   180  0015                     __initialization:	
   181                           
   182                           ; Initialize objects allocated to BANK0
   183  0015  1383               	bcf	3,7	;select IRP bank0
   184  0016  304C               	movlw	low (__pdataBANK0+10)
   185  0017  00FD               	movwf	btemp+-1
   186  0018  3001               	movlw	high __pidataBANK0
   187  0019  00FE               	movwf	btemp
   188  001A  30E1               	movlw	low __pidataBANK0
   189  001B  00FF               	movwf	btemp+1
   190  001C  3042               	movlw	low __pdataBANK0
   191  001D  0084               	movwf	4
   192  001E  120A  118A  21D4   	fcall	init_ram0
   193  0021                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  0021                     __end_of__initialization:	
   197  0021  0183               	clrf	3
   198  0022  120A  118A  28E7   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	dataBANK0
   201  0042                     __pdataBANK0:	
   202  0042                     _FAN:	
   203  0042                     	ds	10
   204                           
   205                           	psect	inittext
   206  01D0                     init_fetch0:	
   207                           ;	Called with low address in FSR and high address in W
   208                           
   209  01D0  087E               	movf	126,w
   210  01D1  008A               	movwf	10
   211  01D2  087F               	movf	127,w
   212  01D3  0082               	movwf	2
   213  01D4                     init_ram0:	
   214                           ;Called with:
   215                           ;	high address of idata address in btemp 
   216                           ;	low address of idata address in btemp+1 
   217                           ;	low address of data in FSR
   218                           ;	high address + 1 of data in btemp-1
   219                           
   220  01D4  21D0  120A  118A   	fcall	init_fetch0
   221  01D7  0080               	movwf	0
   222  01D8  0A84               	incf	4,f
   223  01D9  0804               	movf	4,w
   224  01DA  067D               	xorwf	125,w
   225  01DB  1903               	btfsc	3,2
   226  01DC  3400               	retlw	0
   227  01DD  0AFF               	incf	127,f
   228  01DE  1903               	btfsc	3,2
   229  01DF  0AFE               	incf	126,f
   230  01E0  29D4               	goto	init_ram0
   231                           
   232                           	psect	cstackCOMMON
   233  0070                     __pcstackCOMMON:	
   234  0070                     ?_raycast_intersection_cleared:	
   235  0070                     ??_raycast_intersection_cleared:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 2 bytes @ 0x0
   243  0070                     	ds	4
   244  0074                     ?___wmul:	
   245  0074                     ___wmul@multiplier:	
   246                           ; 2 bytes @ 0x4
   247                           
   248                           
   249                           ; 2 bytes @ 0x4
   250  0074                     	ds	2
   251  0076                     ___wmul@multiplicand:	
   252                           
   253                           ; 2 bytes @ 0x6
   254  0076                     	ds	2
   255  0078                     ??___wmul:	
   256  0078                     ___wmul@product:	
   257                           ; 1 bytes @ 0x8
   258                           
   259                           
   260                           ; 2 bytes @ 0x8
   261  0078                     	ds	2
   262                           
   263                           	psect	cstackBANK0
   264  0020                     __pcstackBANK0:	
   265  0020                     ?___lwdiv:	
   266  0020                     ___lwdiv@divisor:	
   267                           ; 2 bytes @ 0x0
   268                           
   269                           
   270                           ; 2 bytes @ 0x0
   271  0020                     	ds	2
   272  0022                     ___lwdiv@dividend:	
   273                           
   274                           ; 2 bytes @ 0x2
   275  0022                     	ds	2
   276  0024                     ??___lwdiv:	
   277                           
   278                           ; 1 bytes @ 0x4
   279  0024                     	ds	1
   280  0025                     ___lwdiv@quotient:	
   281                           
   282                           ; 2 bytes @ 0x5
   283  0025                     	ds	2
   284  0027                     ___lwdiv@counter:	
   285                           
   286                           ; 1 bytes @ 0x7
   287  0027                     	ds	1
   288  0028                     ?_rps_timer1:	
   289  0028                     rps_timer1@x:	
   290                           ; 10 bytes @ 0x8
   291                           
   292                           
   293                           ; 10 bytes @ 0x8
   294  0028                     	ds	10
   295  0032                     rps_timer1@t:	
   296                           
   297                           ; 2 bytes @ 0x12
   298  0032                     	ds	2
   299  0034                     ??_rps_timer1:	
   300                           
   301                           ; 1 bytes @ 0x14
   302  0034                     	ds	4
   303  0038                     _rps_timer1$465:	
   304                           
   305                           ; 2 bytes @ 0x18
   306  0038                     	ds	2
   307  003A                     ??_main:	
   308                           
   309                           ; 1 bytes @ 0x1A
   310  003A                     	ds	8
   311                           
   312                           	psect	maintext
   313  00E7                     __pmaintext:	
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 60 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  2   68[None  ] int 
   326 ;; Registers used:
   327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : B00/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          0       8       0       0       0
   336 ;;      Totals:         0       8       0       0       0
   337 ;;Total ram usage:        8 bytes
   338 ;; Hardware stack levels required when called:    3
   339 ;; This function calls:
   340 ;;		___lwdiv
   341 ;;		___wmul
   342 ;;		_rps_timer1
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _main
   350  00E7                     _main:	
   351                           
   352                           ;main.c: 63: TMR1CS = 1;
   353                           
   354                           ;incstack = 0
   355                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   356  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   357  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   358  00E9  1490               	bsf	16,1	;volatile
   359                           
   360                           ;main.c: 64: T1CKPS0 = 1;
   361  00EA  1610               	bsf	16,4	;volatile
   362                           
   363                           ;main.c: 65: T1CKPS1 = 1;
   364  00EB  1690               	bsf	16,5	;volatile
   365                           
   366                           ;main.c: 66: TMR1ON = 1;
   367  00EC  1410               	bsf	16,0	;volatile
   368                           
   369                           ;main.c: 68: CCP1M3 = 1;
   370  00ED  1597               	bsf	23,3	;volatile
   371                           
   372                           ;main.c: 69: CCP1M2 = 1;
   373  00EE  1517               	bsf	23,2	;volatile
   374                           
   375                           ;main.c: 70: CCP1CON &= 0x0F;
   376  00EF  300F               	movlw	15
   377  00F0  00BA               	movwf	??_main
   378  00F1  083A               	movf	??_main,w
   379  00F2  0597               	andwf	23,f	;volatile
   380                           
   381                           ;main.c: 71: CCPR1L = 0;
   382  00F3  0195               	clrf	21	;volatile
   383                           
   384                           ;main.c: 72: PR2 = 100;
   385  00F4  3064               	movlw	100
   386  00F5  1683               	bsf	3,5	;RP0=1, select bank1
   387  00F6  1303               	bcf	3,6	;RP1=0, select bank1
   388  00F7  0092               	movwf	18	;volatile
   389                           
   390                           ;main.c: 73: T2CKPS0 = 0;
   391  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   392  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   393  00FA  1012               	bcf	18,0	;volatile
   394                           
   395                           ;main.c: 74: T2CKPS1 = 0;
   396  00FB  1092               	bcf	18,1	;volatile
   397                           
   398                           ;main.c: 75: TMR2ON = 1;
   399  00FC  1512               	bsf	18,2	;volatile
   400                           
   401                           ;main.c: 76: TRISC2 = 0;
   402  00FD  1683               	bsf	3,5	;RP0=1, select bank1
   403  00FE  1303               	bcf	3,6	;RP1=0, select bank1
   404  00FF  1107               	bcf	7,2	;volatile
   405                           
   406                           ;main.c: 78: nRBPU = 0;
   407  0100  1381               	bcf	1,7	;volatile
   408                           
   409                           ;main.c: 79: TRISB0 = 1;
   410  0101  1406               	bsf	6,0	;volatile
   411                           
   412                           ;main.c: 80: TRISB7 = 0;
   413  0102  1386               	bcf	6,7	;volatile
   414                           
   415                           ;main.c: 81: INTEDG = 0;
   416  0103  1301               	bcf	1,6	;volatile
   417                           
   418                           ;main.c: 82: INTE = 1;
   419  0104  160B               	bsf	11,4	;volatile
   420                           
   421                           ;main.c: 83: GIE = 1;
   422  0105  178B               	bsf	11,7	;volatile
   423  0106                     l748:	
   424                           ;main.c: 87: while (1) {
   425                           
   426                           
   427                           ;main.c: 88: CCPR1L = 100 * FAN.value / FAN.max;
   428  0106  1283               	bcf	3,5	;RP0=0, select bank0
   429  0107  084B               	movf	_FAN+9,w	;volatile
   430  0108  00A1               	movwf	___lwdiv@divisor+1
   431  0109  084A               	movf	_FAN+8,w	;volatile
   432  010A  00A0               	movwf	___lwdiv@divisor
   433  010B  0847               	movf	_FAN+5,w	;volatile
   434  010C  00F5               	movwf	___wmul@multiplier+1
   435  010D  0846               	movf	_FAN+4,w	;volatile
   436  010E  00F4               	movwf	___wmul@multiplier
   437  010F  3064               	movlw	100
   438  0110  00F6               	movwf	___wmul@multiplicand
   439  0111  3000               	movlw	0
   440  0112  00F7               	movwf	___wmul@multiplicand+1
   441  0113  120A  118A  219B  120A  118A  	fcall	___wmul
   442  0118  0875               	movf	?___wmul+1,w
   443  0119  1283               	bcf	3,5	;RP0=0, select bank0
   444  011A  1303               	bcf	3,6	;RP1=0, select bank0
   445  011B  00A3               	movwf	___lwdiv@dividend+1
   446  011C  0874               	movf	?___wmul,w
   447  011D  00A2               	movwf	___lwdiv@dividend
   448  011E  120A  118A  215D  120A  118A  	fcall	___lwdiv
   449  0123  1283               	bcf	3,5	;RP0=0, select bank0
   450  0124  1303               	bcf	3,6	;RP1=0, select bank0
   451  0125  0820               	movf	?___lwdiv,w
   452  0126  0095               	movwf	21	;volatile
   453                           
   454                           ;main.c: 89: FAN = rps_timer1(FAN, TMR1);
   455  0127  3028               	movlw	rps_timer1@x& (0+255)
   456  0128  0084               	movwf	4
   457  0129  3042               	movlw	low _FAN
   458  012A  00BA               	movwf	??_main
   459  012B  0804               	movf	4,w
   460  012C  00BB               	movwf	??_main+1
   461  012D  300A               	movlw	10
   462  012E  00BC               	movwf	??_main+2
   463  012F                     u330:	
   464  012F  083A               	movf	??_main,w
   465  0130  0084               	movwf	4
   466  0131  1383               	bcf	3,7	;select IRP bank0
   467  0132  0800               	movf	0,w
   468  0133  00BD               	movwf	??_main+3
   469  0134  0ABA               	incf	??_main,f
   470  0135  083B               	movf	??_main+1,w
   471  0136  0084               	movwf	4
   472  0137  083D               	movf	??_main+3,w
   473  0138  0080               	movwf	0
   474  0139  0ABB               	incf	??_main+1,f
   475  013A  0BBC               	decfsz	??_main+2,f
   476  013B  292F               	goto	u330
   477  013C  080F               	movf	15,w	;volatile
   478  013D  00B3               	movwf	rps_timer1@t+1
   479  013E  080E               	movf	14,w	;volatile
   480  013F  00B2               	movwf	rps_timer1@t
   481  0140  120A  118A  2025  120A  118A  	fcall	_rps_timer1
   482  0145  3042               	movlw	_FAN& (0+255)
   483  0146  0084               	movwf	4
   484  0147  1283               	bcf	3,5	;RP0=0, select bank0
   485  0148  1303               	bcf	3,6	;RP1=0, select bank0
   486  0149  3028               	movlw	low ?_rps_timer1
   487  014A  00BE               	movwf	??_main+4
   488  014B  0804               	movf	4,w
   489  014C  00BF               	movwf	??_main+5
   490  014D  300A               	movlw	10
   491  014E  00C0               	movwf	??_main+6
   492  014F                     u340:	
   493  014F  083E               	movf	??_main+4,w
   494  0150  0084               	movwf	4
   495  0151  1383               	bcf	3,7	;select IRP bank0
   496  0152  0800               	movf	0,w
   497  0153  00C1               	movwf	??_main+7
   498  0154  0ABE               	incf	??_main+4,f
   499  0155  083F               	movf	??_main+5,w
   500  0156  0084               	movwf	4
   501  0157  0841               	movf	??_main+7,w
   502  0158  0080               	movwf	0
   503  0159  0ABF               	incf	??_main+5,f
   504  015A  0BC0               	decfsz	??_main+6,f
   505  015B  294F               	goto	u340
   506  015C  2906               	goto	l748
   507  015D                     __end_of_main:	
   508                           ;main.c: 90: }
   509                           ;main.c: 91: return 0;
   510                           ;	Return value of _main is never used
   511                           
   512                           
   513                           	psect	text1
   514  0025                     __ptext1:	
   515 ;; *************** function _rps_timer1 *****************
   516 ;; Defined at:
   517 ;;		line 41 in file "main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  x              10    8[BANK0 ] volatile struct .
   520 ;;  t               2   18[BANK0 ] unsigned int 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  10    8[BANK0 ] struct .
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0      12       0       0       0
   533 ;;      Locals:         0       2       0       0       0
   534 ;;      Temps:          0       4       0       0       0
   535 ;;      Totals:         0      18       0       0       0
   536 ;;Total ram usage:       18 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    2
   539 ;; This function calls:
   540 ;;		___lwdiv
   541 ;;		___wmul
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function _rps_timer1
   549  0025                     _rps_timer1:	
   550                           
   551                           ;main.c: 42: if (x.time > t) {
   552                           
   553                           ;incstack = 0
   554                           ; Regs used in _rps_timer1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   555  0025  1283               	bcf	3,5	;RP0=0, select bank0
   556  0026  1303               	bcf	3,6	;RP1=0, select bank0
   557  0027  082B               	movf	rps_timer1@x+3,w	;volatile
   558  0028  0233               	subwf	rps_timer1@t+1,w
   559  0029  1D03               	skipz
   560  002A  282D               	goto	u295
   561  002B  082A               	movf	rps_timer1@x+2,w	;volatile
   562  002C  0232               	subwf	rps_timer1@t,w
   563  002D                     u295:	
   564  002D  1803               	skipnc
   565  002E  2836               	goto	l688
   566                           
   567                           ;main.c: 43: x.count = 0;
   568  002F  01A8               	clrf	rps_timer1@x	;volatile
   569  0030  01A9               	clrf	rps_timer1@x+1	;volatile
   570                           
   571                           ;main.c: 44: x.time = t;
   572  0031  0833               	movf	rps_timer1@t+1,w
   573  0032  00AB               	movwf	rps_timer1@x+3	;volatile
   574  0033  0832               	movf	rps_timer1@t,w
   575  0034  00AA               	movwf	rps_timer1@x+2	;volatile
   576                           
   577                           ;main.c: 45: }
   578  0035  0008               	return
   579  0036                     l688:	
   580                           
   581                           ;main.c: 46: else if (x.count > 0) {
   582  0036  0829               	movf	rps_timer1@x+1,w	;volatile
   583  0037  3A80               	xorlw	128
   584  0038  00FF               	movwf	127
   585  0039  3080               	movlw	128
   586  003A  027F               	subwf	127,w
   587  003B  1D03               	skipz
   588  003C  283F               	goto	u305
   589  003D  3001               	movlw	1
   590  003E  0228               	subwf	rps_timer1@x,w	;volatile
   591  003F                     u305:	
   592  003F  1C03               	skipc
   593  0040  28A0               	goto	l702
   594                           
   595                           ;main.c: 47: x.value = T1FOSC / (t - x.time) * x.count / x.div;
   596  0041  1283               	bcf	3,5	;RP0=0, select bank0
   597  0042  1303               	bcf	3,6	;RP1=0, select bank0
   598  0043  092A               	comf	rps_timer1@x+2,w	;volatile
   599  0044  00B4               	movwf	??_rps_timer1
   600  0045  092B               	comf	rps_timer1@x+3,w	;volatile
   601  0046  00B5               	movwf	??_rps_timer1+1
   602  0047  0AB4               	incf	??_rps_timer1,f
   603  0048  1903               	skipnz
   604  0049  0AB5               	incf	??_rps_timer1+1,f
   605  004A  0832               	movf	rps_timer1@t,w
   606  004B  0734               	addwf	??_rps_timer1,w
   607  004C  00A0               	movwf	___lwdiv@divisor
   608  004D  0833               	movf	rps_timer1@t+1,w
   609  004E  1803               	skipnc
   610  004F  0A33               	incf	rps_timer1@t+1,w
   611  0050  0735               	addwf	??_rps_timer1+1,w
   612  0051  00A1               	movwf	___lwdiv@divisor+1
   613  0052  3003               	movlw	low (_T1FOSC-__stringbase)
   614  0053  0084               	movwf	4
   615  0054  120A  118A  21EB  120A  118A  	fcall	stringdir
   616  0059  00A2               	movwf	___lwdiv@dividend
   617  005A  120A  118A  21EB  120A  118A  	fcall	stringdir
   618  005F  00A3               	movwf	___lwdiv@dividend+1
   619  0060  120A  118A  215D  120A  118A  	fcall	___lwdiv
   620  0065  1283               	bcf	3,5	;RP0=0, select bank0
   621  0066  1303               	bcf	3,6	;RP1=0, select bank0
   622  0067  0821               	movf	?___lwdiv+1,w
   623  0068  00F5               	movwf	___wmul@multiplier+1
   624  0069  0820               	movf	?___lwdiv,w
   625  006A  00F4               	movwf	___wmul@multiplier
   626  006B  0829               	movf	rps_timer1@x+1,w	;volatile
   627  006C  00F7               	movwf	___wmul@multiplicand+1
   628  006D  0828               	movf	rps_timer1@x,w	;volatile
   629  006E  00F6               	movwf	___wmul@multiplicand
   630  006F  120A  118A  219B  120A  118A  	fcall	___wmul
   631  0074  0875               	movf	?___wmul+1,w
   632  0075  1283               	bcf	3,5	;RP0=0, select bank0
   633  0076  1303               	bcf	3,6	;RP1=0, select bank0
   634  0077  00B9               	movwf	_rps_timer1$465+1
   635  0078  0874               	movf	?___wmul,w
   636  0079  00B8               	movwf	_rps_timer1$465
   637                           
   638                           ;main.c: 47: x.value = T1FOSC / (t - x.time) * x.count / x.div;
   639  007A  082F               	movf	rps_timer1@x+7,w	;volatile
   640  007B  00A1               	movwf	___lwdiv@divisor+1
   641  007C  082E               	movf	rps_timer1@x+6,w	;volatile
   642  007D  00A0               	movwf	___lwdiv@divisor
   643  007E  0839               	movf	_rps_timer1$465+1,w
   644  007F  00A3               	movwf	___lwdiv@dividend+1
   645  0080  0838               	movf	_rps_timer1$465,w
   646  0081  00A2               	movwf	___lwdiv@dividend
   647  0082  120A  118A  215D  120A  118A  	fcall	___lwdiv
   648  0087  1283               	bcf	3,5	;RP0=0, select bank0
   649  0088  1303               	bcf	3,6	;RP1=0, select bank0
   650  0089  0821               	movf	?___lwdiv+1,w
   651  008A  00AD               	movwf	rps_timer1@x+5	;volatile
   652  008B  0820               	movf	?___lwdiv,w
   653  008C  00AC               	movwf	rps_timer1@x+4	;volatile
   654                           
   655                           ;main.c: 48: if (x.value > x.max) x.max = x.value;
   656  008D  082D               	movf	rps_timer1@x+5,w	;volatile
   657  008E  0231               	subwf	rps_timer1@x+9,w	;volatile
   658  008F  1D03               	skipz
   659  0090  2893               	goto	u315
   660  0091  082C               	movf	rps_timer1@x+4,w	;volatile
   661  0092  0230               	subwf	rps_timer1@x+8,w	;volatile
   662  0093                     u315:	
   663  0093  1803               	skipnc
   664  0094  2899               	goto	l698
   665  0095  082D               	movf	rps_timer1@x+5,w	;volatile
   666  0096  00B1               	movwf	rps_timer1@x+9	;volatile
   667  0097  082C               	movf	rps_timer1@x+4,w	;volatile
   668  0098  00B0               	movwf	rps_timer1@x+8	;volatile
   669  0099                     l698:	
   670                           
   671                           ;main.c: 49: x.count = 0;
   672  0099  01A8               	clrf	rps_timer1@x	;volatile
   673  009A  01A9               	clrf	rps_timer1@x+1	;volatile
   674                           
   675                           ;main.c: 50: x.time = t;
   676  009B  0833               	movf	rps_timer1@t+1,w
   677  009C  00AB               	movwf	rps_timer1@x+3	;volatile
   678  009D  0832               	movf	rps_timer1@t,w
   679  009E  00AA               	movwf	rps_timer1@x+2	;volatile
   680                           
   681                           ;main.c: 51: }
   682  009F  0008               	return
   683  00A0                     l702:	
   684                           
   685                           ;main.c: 52: else if ( (t - x.time) > (T1FOSC / RPSMIN) ) {
   686  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   687  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   688  00A2  092A               	comf	rps_timer1@x+2,w	;volatile
   689  00A3  00B4               	movwf	??_rps_timer1
   690  00A4  092B               	comf	rps_timer1@x+3,w	;volatile
   691  00A5  00B5               	movwf	??_rps_timer1+1
   692  00A6  0AB4               	incf	??_rps_timer1,f
   693  00A7  1903               	skipnz
   694  00A8  0AB5               	incf	??_rps_timer1+1,f
   695  00A9  0832               	movf	rps_timer1@t,w
   696  00AA  0734               	addwf	??_rps_timer1,w
   697  00AB  00B6               	movwf	??_rps_timer1+2
   698  00AC  0833               	movf	rps_timer1@t+1,w
   699  00AD  1803               	skipnc
   700  00AE  0A33               	incf	rps_timer1@t+1,w
   701  00AF  0735               	addwf	??_rps_timer1+1,w
   702  00B0  00B7               	movwf	??_rps_timer1+3
   703  00B1  3001               	movlw	low (_RPSMIN-__stringbase)
   704  00B2  0084               	movwf	4
   705  00B3  120A  118A  21EB  120A  118A  	fcall	stringdir
   706  00B8  00A0               	movwf	___lwdiv@divisor
   707  00B9  120A  118A  21EB  120A  118A  	fcall	stringdir
   708  00BE  00A1               	movwf	___lwdiv@divisor+1
   709  00BF  3003               	movlw	low (_T1FOSC-__stringbase)
   710  00C0  0084               	movwf	4
   711  00C1  120A  118A  21EB  120A  118A  	fcall	stringdir
   712  00C6  00A2               	movwf	___lwdiv@dividend
   713  00C7  120A  118A  21EB  120A  118A  	fcall	stringdir
   714  00CC  00A3               	movwf	___lwdiv@dividend+1
   715  00CD  120A  118A  215D  120A  118A  	fcall	___lwdiv
   716  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   717  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   718  00D4  0837               	movf	??_rps_timer1+3,w
   719  00D5  0221               	subwf	?___lwdiv+1,w
   720  00D6  1D03               	skipz
   721  00D7  28DA               	goto	u325
   722  00D8  0836               	movf	??_rps_timer1+2,w
   723  00D9  0220               	subwf	?___lwdiv,w
   724  00DA                     u325:	
   725  00DA  1803               	skipnc
   726  00DB  0008               	return
   727                           
   728                           ;main.c: 53: x.count = -1;
   729  00DC  30FF               	movlw	255
   730  00DD  00A8               	movwf	rps_timer1@x	;volatile
   731  00DE  30FF               	movlw	255
   732  00DF  00A9               	movwf	rps_timer1@x+1	;volatile
   733                           
   734                           ;main.c: 54: x.value = 0;
   735  00E0  01AC               	clrf	rps_timer1@x+4	;volatile
   736  00E1  01AD               	clrf	rps_timer1@x+5	;volatile
   737                           
   738                           ;main.c: 55: x.time = t;
   739  00E2  0833               	movf	rps_timer1@t+1,w
   740  00E3  00AB               	movwf	rps_timer1@x+3	;volatile
   741  00E4  0832               	movf	rps_timer1@t,w
   742  00E5  00AA               	movwf	rps_timer1@x+2	;volatile
   743  00E6  0008               	return
   744  00E7                     __end_of_rps_timer1:	
   745                           ;main.c: 56: }
   746                           ;main.c: 57: return x;
   747                           
   748                           
   749                           	psect	text2
   750  019B                     __ptext2:	
   751 ;; *************** function ___wmul *****************
   752 ;; Defined at:
   753 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/Umul16.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  multiplier      2    4[COMMON] unsigned int 
   756 ;;  multiplicand    2    6[COMMON] unsigned int 
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  product         2    8[COMMON] unsigned int 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  2    4[COMMON] unsigned int 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         4       0       0       0       0
   769 ;;      Locals:         2       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0
   771 ;;      Totals:         6       0       0       0       0
   772 ;;Total ram usage:        6 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_rps_timer1
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           
   784                           ;psect for function ___wmul
   785  019B                     ___wmul:	
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   789  019B  01F8               	clrf	___wmul@product
   790  019C  01F9               	clrf	___wmul@product+1
   791  019D                     l644:	
   792  019D  1C74               	btfss	___wmul@multiplier,0
   793  019E  29A5               	goto	l156
   794  019F  0876               	movf	___wmul@multiplicand,w
   795  01A0  07F8               	addwf	___wmul@product,f
   796  01A1  1803               	skipnc
   797  01A2  0AF9               	incf	___wmul@product+1,f
   798  01A3  0877               	movf	___wmul@multiplicand+1,w
   799  01A4  07F9               	addwf	___wmul@product+1,f
   800  01A5                     l156:	
   801  01A5  3001               	movlw	1
   802  01A6                     u195:	
   803  01A6  1003               	clrc
   804  01A7  0DF6               	rlf	___wmul@multiplicand,f
   805  01A8  0DF7               	rlf	___wmul@multiplicand+1,f
   806  01A9  3EFF               	addlw	-1
   807  01AA  1D03               	skipz
   808  01AB  29A6               	goto	u195
   809  01AC  3001               	movlw	1
   810  01AD                     u205:	
   811  01AD  1003               	clrc
   812  01AE  0CF5               	rrf	___wmul@multiplier+1,f
   813  01AF  0CF4               	rrf	___wmul@multiplier,f
   814  01B0  3EFF               	addlw	-1
   815  01B1  1D03               	skipz
   816  01B2  29AD               	goto	u205
   817  01B3  0874               	movf	___wmul@multiplier,w
   818  01B4  0475               	iorwf	___wmul@multiplier+1,w
   819  01B5  1D03               	btfss	3,2
   820  01B6  299D               	goto	l644
   821  01B7  0879               	movf	___wmul@product+1,w
   822  01B8  00F5               	movwf	?___wmul+1
   823  01B9  0878               	movf	___wmul@product,w
   824  01BA  00F4               	movwf	?___wmul
   825  01BB  0008               	return
   826  01BC                     __end_of___wmul:	
   827                           
   828                           	psect	text3
   829  015D                     __ptext3:	
   830 ;; *************** function ___lwdiv *****************
   831 ;; Defined at:
   832 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/common/lwdiv.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  divisor         2    0[BANK0 ] unsigned int 
   835 ;;  dividend        2    2[BANK0 ] unsigned int 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  quotient        2    5[BANK0 ] unsigned int 
   838 ;;  counter         1    7[BANK0 ] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  2    0[BANK0 ] unsigned int 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       4       0       0       0
   849 ;;      Locals:         0       3       0       0       0
   850 ;;      Temps:          0       1       0       0       0
   851 ;;      Totals:         0       8       0       0       0
   852 ;;Total ram usage:        8 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_rps_timer1
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function ___lwdiv
   865  015D                     ___lwdiv:	
   866                           
   867                           ;incstack = 0
   868                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   869  015D  1283               	bcf	3,5	;RP0=0, select bank0
   870  015E  1303               	bcf	3,6	;RP1=0, select bank0
   871  015F  01A5               	clrf	___lwdiv@quotient
   872  0160  01A6               	clrf	___lwdiv@quotient+1
   873  0161  0820               	movf	___lwdiv@divisor,w
   874  0162  0421               	iorwf	___lwdiv@divisor+1,w
   875  0163  1903               	btfsc	3,2
   876  0164  2996               	goto	l678
   877  0165  01A7               	clrf	___lwdiv@counter
   878  0166  0AA7               	incf	___lwdiv@counter,f
   879  0167                     l666:	
   880  0167  1BA1               	btfsc	___lwdiv@divisor+1,7
   881  0168  2975               	goto	l668
   882  0169  3001               	movlw	1
   883  016A                     u235:	
   884  016A  1003               	clrc
   885  016B  0DA0               	rlf	___lwdiv@divisor,f
   886  016C  0DA1               	rlf	___lwdiv@divisor+1,f
   887  016D  3EFF               	addlw	-1
   888  016E  1D03               	skipz
   889  016F  296A               	goto	u235
   890  0170  3001               	movlw	1
   891  0171  00A4               	movwf	??___lwdiv
   892  0172  0824               	movf	??___lwdiv,w
   893  0173  07A7               	addwf	___lwdiv@counter,f
   894  0174  2967               	goto	l666
   895  0175                     l668:	
   896  0175  3001               	movlw	1
   897  0176                     u255:	
   898  0176  1003               	clrc
   899  0177  0DA5               	rlf	___lwdiv@quotient,f
   900  0178  0DA6               	rlf	___lwdiv@quotient+1,f
   901  0179  3EFF               	addlw	-1
   902  017A  1D03               	skipz
   903  017B  2976               	goto	u255
   904  017C  0821               	movf	___lwdiv@divisor+1,w
   905  017D  0223               	subwf	___lwdiv@dividend+1,w
   906  017E  1D03               	skipz
   907  017F  2982               	goto	u265
   908  0180  0820               	movf	___lwdiv@divisor,w
   909  0181  0222               	subwf	___lwdiv@dividend,w
   910  0182                     u265:	
   911  0182  1C03               	skipc
   912  0183  298B               	goto	l674
   913  0184  0820               	movf	___lwdiv@divisor,w
   914  0185  02A2               	subwf	___lwdiv@dividend,f
   915  0186  0821               	movf	___lwdiv@divisor+1,w
   916  0187  1C03               	skipc
   917  0188  03A3               	decf	___lwdiv@dividend+1,f
   918  0189  02A3               	subwf	___lwdiv@dividend+1,f
   919  018A  1425               	bsf	___lwdiv@quotient,0
   920  018B                     l674:	
   921  018B  3001               	movlw	1
   922  018C                     u275:	
   923  018C  1003               	clrc
   924  018D  0CA1               	rrf	___lwdiv@divisor+1,f
   925  018E  0CA0               	rrf	___lwdiv@divisor,f
   926  018F  3EFF               	addlw	-1
   927  0190  1D03               	skipz
   928  0191  298C               	goto	u275
   929  0192  3001               	movlw	1
   930  0193  02A7               	subwf	___lwdiv@counter,f
   931  0194  1D03               	btfss	3,2
   932  0195  2975               	goto	l668
   933  0196                     l678:	
   934  0196  0826               	movf	___lwdiv@quotient+1,w
   935  0197  00A1               	movwf	?___lwdiv+1
   936  0198  0825               	movf	___lwdiv@quotient,w
   937  0199  00A0               	movwf	?___lwdiv
   938  019A  0008               	return
   939  019B                     __end_of___lwdiv:	
   940                           
   941                           	psect	text4
   942  01BC                     __ptext4:	
   943 ;; *************** function _raycast_intersection_cleared *****************
   944 ;; Defined at:
   945 ;;		line 34 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0
   961 ;;      Temps:          4       0       0       0       0
   962 ;;      Totals:         4       0       0       0       0
   963 ;;Total ram usage:        4 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		Interrupt level 1
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _raycast_intersection_cleared
   974  01BC                     _raycast_intersection_cleared:	
   975                           
   976                           ;main.c: 35: RB7 = !RB7;
   977  01BC  3080               	movlw	128
   978  01BD  0686               	xorwf	6,f
   979                           
   980                           ;main.c: 36: FAN.count++;
   981  01BE  3001               	movlw	1
   982  01BF  07C2               	addwf	_FAN,f	;volatile
   983  01C0  1803               	skipnc
   984  01C1  0AC3               	incf	_FAN+1,f	;volatile
   985  01C2  3000               	movlw	0
   986  01C3  07C3               	addwf	_FAN+1,f	;volatile
   987                           
   988                           ;main.c: 37: INTF = 0;
   989  01C4  108B               	bcf	11,1	;volatile
   990                           
   991                           ;main.c: 38: return;
   992  01C5  0873               	movf	??_raycast_intersection_cleared+3,w
   993  01C6  00FF               	movwf	127
   994  01C7  0872               	movf	??_raycast_intersection_cleared+2,w
   995  01C8  008A               	movwf	10
   996  01C9  0871               	movf	??_raycast_intersection_cleared+1,w
   997  01CA  0084               	movwf	4
   998  01CB  0E70               	swapf	??_raycast_intersection_cleared^(0+-128),w
   999  01CC  0083               	movwf	3
  1000  01CD  0EFE               	swapf	126,f
  1001  01CE  0E7E               	swapf	126,w
  1002  01CF  0009               	retfie
  1003  01D0                     __end_of_raycast_intersection_cleared:	
  1004  007E                     btemp	set	126	;btemp
  1005  007E                     wtemp0	set	126
  1006                           
  1007                           	psect	intentry
  1008  0004                     __pintentry:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _raycast_intersection_cleared: [wreg]
  1011                           
  1012  0004                     interrupt_function:	
  1013  007E                     saved_w	set	btemp
  1014  0004  00FE               	movwf	btemp
  1015  0005  0E03               	swapf	3,w
  1016  0006  00F0               	movwf	??_raycast_intersection_cleared
  1017  0007  0804               	movf	4,w
  1018  0008  00F1               	movwf	??_raycast_intersection_cleared+1
  1019  0009  080A               	movf	10,w
  1020  000A  00F2               	movwf	??_raycast_intersection_cleared+2
  1021  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1022  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1023  000D  087F               	movf	btemp+1,w
  1024  000E  00F3               	movwf	??_raycast_intersection_cleared+3
  1025  000F  120A  118A  29BC   	ljmp	_raycast_intersection_cleared


Data Sizes:
    Strings     0
    Constant    4
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     34      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _rps_timer1->___wmul
    ___lwdiv->___wmul

Critical Paths under _raycast_intersection_cleared in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_rps_timer1
    _rps_timer1->___lwdiv

Critical Paths under _raycast_intersection_cleared in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _raycast_intersection_cleared in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _raycast_intersection_cleared in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _raycast_intersection_cleared in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2415
                                             26 BANK0      8     8      0
                            ___lwdiv
                             ___wmul
                         _rps_timer1
 ---------------------------------------------------------------------------------
 (1) _rps_timer1                                          18     6     12    1525
                                              8 BANK0     18     6     12
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     304
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _raycast_intersection_cleared                         4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _rps_timer1
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 _raycast_intersection_cleared (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Sep  6 01:25:47 2017

                                    pc 0002                            __CFG_CP$OFF 0000  
                                   fsr 0004                    ___wmul@multiplicand 0076  
                                  l156 01A5                                    l702 00A0  
                                  l644 019D                                    l674 018B  
                                  l666 0167                                    l668 0175  
                                  l748 0106                                    l678 0196  
                                  l688 0036                                    _FAN 0042  
                                  l698 0099                                    _GIE 005F  
                                  _RB7 0037                                    u205 01AD  
                                  u305 003F                                    u330 012F  
                                  u235 016A                                    u315 0093  
                                  u340 014F                                    u325 00DA  
                                  _PR2 0092                                    u255 0176  
                                  u265 0182                           __CFG_CPD$OFF 0000  
                                  u275 018C                                    u195 01A6  
                                  u295 002D                                    fsr0 0004  
                                  indf 0000                           __CFG_LVP$OFF 0000  
                                 _INTE 005C                                   _INTF 0059  
                                 _TMR1 000E                           __CFG_WRT$OFF 0000  
                                 _main 00E7                                   btemp 007E  
                                 start 0012                                  ?_main 0070  
                        __CFG_WDTE$OFF 0000                        __end_of___lwdiv 019B  
                                _nRBPU 040F                         _rps_timer1$465 0038  
                       __CFG_BOREN$OFF 0000                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
                      __initialization 0015                           __end_of_main 015D  
                               ??_main 003A                                 _CCP1M2 00BA  
                               _CCP1M3 00BB                                 _CCPR1L 0015  
                               _T1FOSC 01F3                                 _INTEDG 040E  
                               _TMR1CS 0081                                 _TMR1ON 0080  
                               _TMR2ON 0092                                 _TRISB0 0430  
                               _TRISC2 043A                                 _RPSMIN 01F1  
                               _TRISB7 0437                         __CFG_PWRTE$OFF 0000  
                               ___wmul 019B                              ??___lwdiv 0024  
                               saved_w 007E                        __CFG_FOSC$EXTRC 0000  
              __end_of__initialization 0021                         __pcstackCOMMON 0070  
                         __pidataBANK0 01E1                             __pmaintext 00E7  
                              ?___wmul 0074                             __pintentry 0004  
                              _CCP1CON 0017                                _T1CKPS0 0084  
                              _T1CKPS1 0085                                _T2CKPS0 0090  
                              _T2CKPS1 0091                             __stringtab 01EB  
                      __size_of___wmul 0021                                ___lwdiv 015D  
                              __ptext1 0025                                __ptext2 019B  
                              __ptext3 015D                                __ptext4 01BC  
                 end_of_initialization 0021   __end_of_raycast_intersection_cleared 01D0  
__size_of_raycast_intersection_cleared 0014           _raycast_intersection_cleared 01BC  
                           _rps_timer1 0025                         __end_of_T1FOSC 01F5  
                       __end_of_RPSMIN 01F3          ?_raycast_intersection_cleared 0070  
                       __end_of___wmul 01BC                    start_initialization 0015  
                          rps_timer1@t 0032                            rps_timer1@x 0028  
                             ??___wmul 0078                             init_fetch0 01D0  
                          __pdataBANK0 0042                              ___latbits 0002  
                        __pcstackBANK0 0020                            ?_rps_timer1 0028  
                     ___lwdiv@dividend 0022         ??_raycast_intersection_cleared 0070  
                             ?___lwdiv 0020                              __pstrings 01EB  
                     ___lwdiv@quotient 0025                      interrupt_function 0004  
                       ___wmul@product 0078                    __size_of_rps_timer1 00C2  
                          __stringbase 01F0                      ___wmul@multiplier 0074  
                     __size_of___lwdiv 003E                     __end_of__stringtab 01F1  
                      ___lwdiv@divisor 0020                        ___lwdiv@counter 0027  
                        __size_of_main 0076                               init_ram0 01D4  
                         ??_rps_timer1 0034                               intlevel1 0000  
                            stringcode 01EB                     __end_of_rps_timer1 00E7  
                             stringdir 01EB                               stringtab 01EB  
