

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Jan  3 19:13:07 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.43
    23                           ; Generated 25/07/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116                           
   117                           	psect	idataBANK0
   118  0234                     __pidataBANK0:	
   119                           
   120                           ;initializer for _BUF
   121  0234  3420               	retlw	32
   122  0235  3420               	retlw	32
   123  0236  3420               	retlw	32
   124  0237  3420               	retlw	32
   125  0238  3420               	retlw	32
   126  0239  3420               	retlw	32
   127  023A  3420               	retlw	32
   128  023B  3420               	retlw	32
   129  023C  3420               	retlw	32
   130  023D  3420               	retlw	32
   131  023E  3420               	retlw	32
   132  023F  3420               	retlw	32
   133  0240  3420               	retlw	32
   134  0241  3420               	retlw	32
   135  0242  3420               	retlw	32
   136  0243  3420               	retlw	32
   137  0244  3400               	retlw	0
   138  000E                     _TMR1	set	14
   139  001B                     _PWM	set	27
   140  0001                     _TMR0	set	1
   141  0006                     _PORTB	set	6
   142  0018                     _RCSTA	set	24
   143  0012                     _T2CON	set	18
   144  001B                     _CCPR2L	set	27
   145  001D                     _CCP2CON	set	29
   146  0015                     _CCPR1L	set	21
   147  0017                     _CCP1CON	set	23
   148  0010                     _T1CON	set	16
   149  000B                     _INTCON	set	11
   150  001A                     _RCREG	set	26
   151  0019                     _TXREG	set	25
   152  002D                     _BUZ	set	45
   153  005A                     _TMR0IF	set	90
   154  0065                     _RCIF	set	101
   155  0064                     _TXIF	set	100
   156  0099                     _SPBRG	set	153
   157  0098                     _TXSTA	set	152
   158  0085                     _TRISA	set	133
   159  0086                     _TRISB	set	134
   160  0087                     _TRISC	set	135
   161  009F                     _ADCON1	set	159
   162  0092                     _PR2	set	146
   163  0081                     _OPTION_REG	set	129
   164                           
   165                           ; #config settings
   166  0000                     
   167                           	psect	cinit
   168  0015                     start_initialization:	
   169  0015                     __initialization:	
   170                           
   171                           ; Initialize objects allocated to BANK0
   172  0015  1383               	bcf	3,7	;select IRP bank0
   173  0016  3031               	movlw	low (__pdataBANK0+17)
   174  0017  00FD               	movwf	btemp+-1
   175  0018  3002               	movlw	high __pidataBANK0
   176  0019  00FE               	movwf	btemp
   177  001A  3034               	movlw	low __pidataBANK0
   178  001B  00FF               	movwf	btemp+1
   179  001C  3020               	movlw	low __pdataBANK0
   180  001D  0084               	movwf	4
   181  001E  120A  118A  2249   	fcall	init_ram0
   182                           
   183                           ; Clear objects allocated to BANK0
   184  0021  01BB               	clrf	__pbssBANK0& (0+127)
   185  0022  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   186  0023  01BD               	clrf	(__pbssBANK0+2)& (0+127)
   187  0024  01BE               	clrf	(__pbssBANK0+3)& (0+127)
   188  0025  01BF               	clrf	(__pbssBANK0+4)& (0+127)
   189  0026  01C0               	clrf	(__pbssBANK0+5)& (0+127)
   190  0027                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193  0027                     __end_of__initialization:	
   194  0027  0183               	clrf	3
   195  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssBANK0
   198  003B                     __pbssBANK0:	
   199  003B                     _T1ZOH:	
   200  003B                     	ds	2
   201  003D                     _T0PS:	
   202  003D                     	ds	1
   203  003E                     _kT0:	
   204  003E                     	ds	1
   205  003F                     _PWMZOH:	
   206  003F                     	ds	1
   207  0040                     _RC:	
   208  0040                     	ds	1
   209                           
   210                           	psect	dataBANK0
   211  0020                     __pdataBANK0:	
   212  0020                     _BUF:	
   213  0020                     	ds	17
   214                           
   215                           	psect	inittext
   216  0245                     init_fetch0:	
   217                           ;	Called with low address in FSR and high address in W
   218                           
   219  0245  087E               	movf	126,w
   220  0246  008A               	movwf	10
   221  0247  087F               	movf	127,w
   222  0248  0082               	movwf	2
   223  0249                     init_ram0:	
   224                           ;Called with:
   225                           ;	high address of idata address in btemp 
   226                           ;	low address of idata address in btemp+1 
   227                           ;	low address of data in FSR
   228                           ;	high address + 1 of data in btemp-1
   229                           
   230  0249  2245  120A  118A   	fcall	init_fetch0
   231  024C  0080               	movwf	0
   232  024D  0A84               	incf	4,f
   233  024E  0804               	movf	4,w
   234  024F  067D               	xorwf	125,w
   235  0250  1903               	btfsc	3,2
   236  0251  3400               	retlw	0
   237  0252  0AFF               	incf	127,f
   238  0253  1903               	btfsc	3,2
   239  0254  0AFE               	incf	126,f
   240  0255  2A49               	goto	init_ram0
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:	
   244  0070                     ?_beep:	
   245  0070                     ?_rsend:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_rsget:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_read_tmr1:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_write:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_sampling:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?i1_rsend:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??i1_rsend:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     i1rsend@msg:	
   270                           ; 2 bytes @ 0x0
   271                           
   272                           
   273                           ; 1 bytes @ 0x0
   274  0070                     	ds	1
   275  0071                     ??_sampling:	
   276                           
   277                           ; 1 bytes @ 0x1
   278  0071                     	ds	5
   279  0076                     ??_beep:	
   280  0076                     ??_rsend:	
   281                           ; 1 bytes @ 0x6
   282                           
   283  0076                     ??_rsget:	
   284                           ; 1 bytes @ 0x6
   285                           
   286  0076                     ??_write:	
   287                           ; 1 bytes @ 0x6
   288                           
   289  0076                     rsend@msg:	
   290                           ; 1 bytes @ 0x6
   291                           
   292  0076                     write@duty:	
   293                           ; 1 bytes @ 0x6
   294                           
   295                           
   296                           ; 1 bytes @ 0x6
   297  0076                     	ds	1
   298  0077                     ??_read_tmr1:	
   299                           
   300                           	psect	cstackBANK0
   301  0031                     __pcstackBANK0:	
   302                           ; 1 bytes @ 0x7
   303                           
   304  0031                     beep@dash:	
   305                           
   306                           ; 1 bytes @ 0x0
   307  0031                     	ds	1
   308  0032                     beep@j:	
   309                           
   310                           ; 2 bytes @ 0x1
   311  0032                     	ds	2
   312  0034                     beep@j_57:	
   313                           
   314                           ; 2 bytes @ 0x3
   315  0034                     	ds	2
   316  0036                     ??_main:	
   317                           
   318                           ; 1 bytes @ 0x5
   319  0036                     	ds	2
   320  0038                     main@x:	
   321                           
   322                           ; 1 bytes @ 0x7
   323  0038                     	ds	1
   324  0039                     main@msg:	
   325                           
   326                           ; 1 bytes @ 0x8
   327  0039                     	ds	1
   328  003A                     main@cmd:	
   329                           
   330                           ; 1 bytes @ 0x9
   331  003A                     	ds	1
   332                           
   333                           	psect	maintext
   334  002B                     __pmaintext:	
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 83 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  cmd             1    9[BANK0 ] unsigned char 
   345 ;;  msg             1    8[BANK0 ] unsigned char 
   346 ;;  x               1    7[BANK0 ] unsigned char 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  2  107[None  ] int 
   349 ;; Registers used:
   350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0       3       0       0       0
   358 ;;      Temps:          0       2       0       0       0
   359 ;;      Totals:         0       5       0       0       0
   360 ;;Total ram usage:        5 bytes
   361 ;; Hardware stack levels required when called:    4
   362 ;; This function calls:
   363 ;;		_beep
   364 ;;		_read_tmr1
   365 ;;		_rsend
   366 ;;		_rsget
   367 ;;		_write
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _main
   375  002B                     _main:	
   376                           
   377                           ;main.c: 84: OPTION_REG = 0x83;
   378                           
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   381  002B  3083               	movlw	131
   382  002C  1683               	bsf	3,5	;RP0=1, select bank1
   383  002D  1303               	bcf	3,6	;RP1=0, select bank1
   384  002E  0081               	movwf	1	;volatile
   385                           
   386                           ;main.c: 85: INTCON = 0x80;
   387  002F  3080               	movlw	128
   388  0030  008B               	movwf	11	;volatile
   389                           
   390                           ;main.c: 86: T1CON = 0x03;
   391  0031  3003               	movlw	3
   392  0032  1283               	bcf	3,5	;RP0=0, select bank0
   393  0033  1303               	bcf	3,6	;RP1=0, select bank0
   394  0034  0090               	movwf	16	;volatile
   395                           
   396                           ;main.c: 87: CCP1CON = 0x0F;
   397  0035  300F               	movlw	15
   398  0036  0097               	movwf	23	;volatile
   399                           
   400                           ;main.c: 88: CCPR1L = 0;
   401  0037  0195               	clrf	21	;volatile
   402                           
   403                           ;main.c: 89: CCP2CON = 0x0F;
   404  0038  300F               	movlw	15
   405  0039  009D               	movwf	29	;volatile
   406                           
   407                           ;main.c: 90: CCPR2L = 0;
   408  003A  019B               	clrf	27	;volatile
   409                           
   410                           ;main.c: 91: PR2 = 100;
   411  003B  3064               	movlw	100
   412  003C  1683               	bsf	3,5	;RP0=1, select bank1
   413  003D  1303               	bcf	3,6	;RP1=0, select bank1
   414  003E  0092               	movwf	18	;volatile
   415                           
   416                           ;main.c: 92: T2CON = 0x04;
   417  003F  3004               	movlw	4
   418  0040  1283               	bcf	3,5	;RP0=0, select bank0
   419  0041  1303               	bcf	3,6	;RP1=0, select bank0
   420  0042  0092               	movwf	18	;volatile
   421                           
   422                           ;main.c: 93: ADCON1 = 0x05;
   423  0043  3005               	movlw	5
   424  0044  1683               	bsf	3,5	;RP0=1, select bank1
   425  0045  1303               	bcf	3,6	;RP1=0, select bank1
   426  0046  009F               	movwf	31	;volatile
   427                           
   428                           ;main.c: 94: TRISC = 0xFD;
   429  0047  30FD               	movlw	253
   430  0048  0087               	movwf	7	;volatile
   431                           
   432                           ;main.c: 95: TRISB = 0xFF;
   433  0049  30FF               	movlw	255
   434  004A  0086               	movwf	6	;volatile
   435                           
   436                           ;main.c: 96: TRISA = 0xDF;
   437  004B  30DF               	movlw	223
   438  004C  0085               	movwf	5	;volatile
   439                           
   440                           ;main.c: 97: RCSTA = 0x90;
   441  004D  3090               	movlw	144
   442  004E  1283               	bcf	3,5	;RP0=0, select bank0
   443  004F  1303               	bcf	3,6	;RP1=0, select bank0
   444  0050  0098               	movwf	24	;volatile
   445                           
   446                           ;main.c: 98: TXSTA = 0x24;
   447  0051  3024               	movlw	36
   448  0052  1683               	bsf	3,5	;RP0=1, select bank1
   449  0053  1303               	bcf	3,6	;RP1=0, select bank1
   450  0054  0098               	movwf	24	;volatile
   451                           
   452                           ;main.c: 99: SPBRG = 12;
   453  0055  300C               	movlw	12
   454  0056  0099               	movwf	25	;volatile
   455                           
   456                           ;main.c: 103: if (PORTB & 0x02) {
   457  0057  1283               	bcf	3,5	;RP0=0, select bank0
   458  0058  1303               	bcf	3,6	;RP1=0, select bank0
   459  0059  1C86               	btfss	6,1	;volatile
   460  005A  28E6               	goto	l911
   461                           
   462                           ;main.c: 104: beep(0); _delay((unsigned long)((100)*(4000000/4000.0)));
   463  005B  3000               	movlw	0
   464  005C  120A  118A  217A  120A  118A  	fcall	_beep
   465  0061  3082               	movlw	130
   466  0062  1283               	bcf	3,5	;RP0=0, select bank0
   467  0063  1303               	bcf	3,6	;RP1=0, select bank0
   468  0064  00B7               	movwf	??_main+1
   469  0065  30DD               	movlw	221
   470  0066  00B6               	movwf	??_main
   471  0067                     u357:	
   472  0067  0BB6               	decfsz	??_main,f
   473  0068  2867               	goto	u357
   474  0069  0BB7               	decfsz	??_main+1,f
   475  006A  2867               	goto	u357
   476                           
   477                           ;main.c: 105: beep(0); _delay((unsigned long)((100)*(4000000/4000.0)));
   478  006B  3000               	movlw	0
   479  006C  120A  118A  217A  120A  118A  	fcall	_beep
   480  0071  3082               	movlw	130
   481  0072  1283               	bcf	3,5	;RP0=0, select bank0
   482  0073  1303               	bcf	3,6	;RP1=0, select bank0
   483  0074  00B7               	movwf	??_main+1
   484  0075  30DD               	movlw	221
   485  0076  00B6               	movwf	??_main
   486  0077                     u367:	
   487  0077  0BB6               	decfsz	??_main,f
   488  0078  2877               	goto	u367
   489  0079  0BB7               	decfsz	??_main+1,f
   490  007A  2877               	goto	u367
   491                           
   492                           ;main.c: 106: beep(0); _delay((unsigned long)((100)*(4000000/4000.0)));
   493  007B  3000               	movlw	0
   494  007C  120A  118A  217A  120A  118A  	fcall	_beep
   495  0081  3082               	movlw	130
   496  0082  1283               	bcf	3,5	;RP0=0, select bank0
   497  0083  1303               	bcf	3,6	;RP1=0, select bank0
   498  0084  00B7               	movwf	??_main+1
   499  0085  30DD               	movlw	221
   500  0086  00B6               	movwf	??_main
   501  0087                     u377:	
   502  0087  0BB6               	decfsz	??_main,f
   503  0088  2887               	goto	u377
   504  0089  0BB7               	decfsz	??_main+1,f
   505  008A  2887               	goto	u377
   506  008B  28CB               	goto	l883
   507  008C                     l889:	
   508                           ;main.c: 112: case '7': read_tmr1(); break;
   509                           
   510                           ;main.c: 111: switch (BUF[0]) {
   511                           
   512  008C  120A  118A  2203  120A  118A  	fcall	_read_tmr1
   513  0091  28C8               	goto	l905
   514  0092                     l891:	
   515                           ;main.c: 113: case '5': write(BUF[1]); break;
   516                           
   517  0092  1283               	bcf	3,5	;RP0=0, select bank0
   518  0093  1303               	bcf	3,6	;RP1=0, select bank0
   519  0094  0821               	movf	_BUF+1,w
   520  0095  120A  118A  221E  120A  118A  	fcall	_write
   521  009A  28C8               	goto	l905
   522  009B                     l893:	
   523                           ;main.c: 114: case '1': write(BUF[1]); read_tmr1(); break;
   524                           
   525  009B  1283               	bcf	3,5	;RP0=0, select bank0
   526  009C  1303               	bcf	3,6	;RP1=0, select bank0
   527  009D  0821               	movf	_BUF+1,w
   528  009E  120A  118A  221E  120A  118A  	fcall	_write
   529  00A3  120A  118A  2203  120A  118A  	fcall	_read_tmr1
   530  00A8  28C8               	goto	l905
   531  00A9                     l895:	
   532                           ;main.c: 115: case '2': write(0); beep(0); TMR1 = 0; break;
   533                           
   534  00A9  3000               	movlw	0
   535  00AA  120A  118A  221E  120A  118A  	fcall	_write
   536  00AF  3000               	movlw	0
   537  00B0  120A  118A  217A  120A  118A  	fcall	_beep
   538  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   539  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   540  00B7  018E               	clrf	14	;volatile
   541  00B8  018F               	clrf	15	;volatile
   542                           
   543                           ;main.c: 116: }
   544  00B9  28C8               	goto	l905
   545  00BA                     l903:	
   546  00BA  0820               	movf	_BUF,w
   547                           
   548                           ; Switch size 1, requested type "space"
   549                           ; Number of cases is 4, Range of values is 49 to 55
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte           13     7 (average)
   553                           ; direct_byte           32    11 (fixed)
   554                           ; jumptable            263     9 (fixed)
   555                           ;	Chosen strategy is simple_byte
   556  00BB  3A31               	xorlw	49	; case 49
   557  00BC  1903               	skipnz
   558  00BD  289B               	goto	l893
   559  00BE  3A03               	xorlw	3	; case 50
   560  00BF  1903               	skipnz
   561  00C0  28A9               	goto	l895
   562  00C1  3A07               	xorlw	7	; case 53
   563  00C2  1903               	skipnz
   564  00C3  2892               	goto	l891
   565  00C4  3A02               	xorlw	2	; case 55
   566  00C5  1903               	skipnz
   567  00C6  288C               	goto	l889
   568  00C7  28C8               	goto	l905
   569  00C8                     l905:	
   570                           
   571                           ;main.c: 117: RC = 0;
   572  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   573  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   574  00CA  01C0               	clrf	_RC
   575  00CB                     l883:	
   576                           ;main.c: 107: while (1) {
   577                           
   578                           ;main.c: 118: }
   579                           
   580                           
   581                           ;main.c: 109: char x = rsget();
   582  00CB  120A  118A  2266  120A  118A  	fcall	_rsget
   583  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   584  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   585  00D2  00B6               	movwf	??_main
   586  00D3  0836               	movf	??_main,w
   587  00D4  00B8               	movwf	main@x
   588                           
   589                           ;main.c: 110: if (x == '\n') {
   590  00D5  300A               	movlw	10
   591  00D6  0638               	xorwf	main@x,w
   592  00D7  1903               	btfsc	3,2
   593  00D8  28BA               	goto	l903
   594                           
   595                           ;main.c: 119: else {
   596                           ;main.c: 120: BUF[RC] = x;
   597  00D9  0838               	movf	main@x,w
   598  00DA  00B6               	movwf	??_main
   599  00DB  0840               	movf	_RC,w
   600  00DC  3E20               	addlw	(low (_BUF| 0))& (0+255)
   601  00DD  0084               	movwf	4
   602  00DE  0836               	movf	??_main,w
   603  00DF  1383               	bcf	3,7	;select IRP bank0
   604  00E0  0080               	movwf	0
   605                           
   606                           ;main.c: 121: RC++;
   607  00E1  3001               	movlw	1
   608  00E2  00B6               	movwf	??_main
   609  00E3  0836               	movf	??_main,w
   610  00E4  07C0               	addwf	_RC,f
   611  00E5  28CB               	goto	l883
   612  00E6                     l911:	
   613                           ;main.c: 122: }
   614                           ;main.c: 123: }
   615                           ;main.c: 124: }
   616                           
   617                           
   618                           ;main.c: 126: else {
   619                           ;main.c: 127: beep(0); _delay((unsigned long)((100)*(4000000/4000.0)));
   620  00E6  3000               	movlw	0
   621  00E7  120A  118A  217A  120A  118A  	fcall	_beep
   622  00EC  3082               	movlw	130
   623  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   624  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   625  00EF  00B7               	movwf	??_main+1
   626  00F0  30DD               	movlw	221
   627  00F1  00B6               	movwf	??_main
   628  00F2                     u387:	
   629  00F2  0BB6               	decfsz	??_main,f
   630  00F3  28F2               	goto	u387
   631  00F4  0BB7               	decfsz	??_main+1,f
   632  00F5  28F2               	goto	u387
   633                           
   634                           ;main.c: 128: beep(1); _delay((unsigned long)((100)*(4000000/4000.0)));
   635  00F6  3001               	movlw	1
   636  00F7  120A  118A  217A  120A  118A  	fcall	_beep
   637  00FC  3082               	movlw	130
   638  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   639  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   640  00FF  00B7               	movwf	??_main+1
   641  0100  30DD               	movlw	221
   642  0101  00B6               	movwf	??_main
   643  0102                     u397:	
   644  0102  0BB6               	decfsz	??_main,f
   645  0103  2902               	goto	u397
   646  0104  0BB7               	decfsz	??_main+1,f
   647  0105  2902               	goto	u397
   648  0106  2945               	goto	l917
   649  0107                     l923:	
   650                           
   651                           ;main.c: 134: PWMZOH = msg;
   652  0107  0839               	movf	main@msg,w
   653  0108  00B6               	movwf	??_main
   654  0109  0836               	movf	??_main,w
   655  010A  00BF               	movwf	_PWMZOH
   656                           
   657                           ;main.c: 135: }
   658  010B  2945               	goto	l917
   659  010C                     l927:	
   660                           
   661                           ;main.c: 137: INTCON &= 0xDF;
   662  010C  30DF               	movlw	223
   663  010D  00B6               	movwf	??_main
   664  010E  0836               	movf	??_main,w
   665  010F  058B               	andwf	11,f	;volatile
   666                           
   667                           ;main.c: 138: T1ZOH = TMR1;
   668  0110  080F               	movf	15,w	;volatile
   669  0111  00BC               	movwf	_T1ZOH+1	;volatile
   670  0112  080E               	movf	14,w	;volatile
   671  0113  00BB               	movwf	_T1ZOH	;volatile
   672                           
   673                           ;main.c: 139: write(msg);
   674  0114  0839               	movf	main@msg,w
   675  0115  120A  118A  221E  120A  118A  	fcall	_write
   676                           
   677                           ;main.c: 140: rsend(T1ZOH);
   678  011A  1283               	bcf	3,5	;RP0=0, select bank0
   679  011B  1303               	bcf	3,6	;RP1=0, select bank0
   680  011C  083B               	movf	_T1ZOH,w	;volatile
   681  011D  120A  118A  2256  120A  118A  	fcall	_rsend
   682                           
   683                           ;main.c: 141: rsend(T1ZOH >> 8);
   684  0122  1283               	bcf	3,5	;RP0=0, select bank0
   685  0123  1303               	bcf	3,6	;RP1=0, select bank0
   686  0124  083C               	movf	_T1ZOH+1,w	;volatile
   687  0125  120A  118A  2256  120A  118A  	fcall	_rsend
   688                           
   689                           ;main.c: 142: TMR1 -= T1ZOH;
   690  012A  1283               	bcf	3,5	;RP0=0, select bank0
   691  012B  1303               	bcf	3,6	;RP1=0, select bank0
   692  012C  083B               	movf	_T1ZOH,w	;volatile
   693  012D  028E               	subwf	14,f	;volatile
   694  012E  083C               	movf	_T1ZOH+1,w	;volatile
   695  012F  1C03               	skipc
   696  0130  038F               	decf	15,f	;volatile
   697  0131  028F               	subwf	15,f	;volatile
   698                           
   699                           ;main.c: 143: }
   700  0132  2945               	goto	l917
   701  0133                     l941:	
   702                           
   703                           ;main.c: 145: PWM = 0;
   704  0133  019B               	clrf	27
   705                           
   706                           ;main.c: 146: PWMZOH = 0;
   707  0134  01BF               	clrf	_PWMZOH
   708                           
   709                           ;main.c: 147: T1CON &= 0xFE;
   710  0135  30FE               	movlw	254
   711  0136  00B6               	movwf	??_main
   712  0137  0836               	movf	??_main,w
   713  0138  0590               	andwf	16,f	;volatile
   714                           
   715                           ;main.c: 148: INTCON &= 0xDF;
   716  0139  30DF               	movlw	223
   717  013A  00B6               	movwf	??_main
   718  013B  0836               	movf	??_main,w
   719  013C  058B               	andwf	11,f	;volatile
   720                           
   721                           ;main.c: 149: T1ZOH = 0;
   722  013D  01BB               	clrf	_T1ZOH	;volatile
   723  013E  01BC               	clrf	_T1ZOH+1	;volatile
   724                           
   725                           ;main.c: 150: beep(0);
   726  013F  3000               	movlw	0
   727  0140  120A  118A  217A  120A  118A  	fcall	_beep
   728  0145                     l917:	
   729                           ;main.c: 129: while (1) {
   730                           
   731                           ;main.c: 151: }
   732                           
   733                           
   734                           ;main.c: 131: char cmd = rsget();
   735  0145  120A  118A  2266  120A  118A  	fcall	_rsget
   736  014A  1283               	bcf	3,5	;RP0=0, select bank0
   737  014B  1303               	bcf	3,6	;RP1=0, select bank0
   738  014C  00B6               	movwf	??_main
   739  014D  0836               	movf	??_main,w
   740  014E  00BA               	movwf	main@cmd
   741                           
   742                           ;main.c: 132: char msg = rsget();
   743  014F  120A  118A  2266  120A  118A  	fcall	_rsget
   744  0154  1283               	bcf	3,5	;RP0=0, select bank0
   745  0155  1303               	bcf	3,6	;RP1=0, select bank0
   746  0156  00B6               	movwf	??_main
   747  0157  0836               	movf	??_main,w
   748  0158  00B9               	movwf	main@msg
   749                           
   750                           ;main.c: 133: if (cmd == 'x') {
   751  0159  3078               	movlw	120
   752  015A  063A               	xorwf	main@cmd,w
   753  015B  1903               	btfsc	3,2
   754  015C  2907               	goto	l923
   755                           
   756                           ;main.c: 136: else if (cmd == 'r') {
   757  015D  3072               	movlw	114
   758  015E  063A               	xorwf	main@cmd,w
   759  015F  1903               	btfsc	3,2
   760  0160  290C               	goto	l927
   761                           
   762                           ;main.c: 144: else if (cmd == 's') {
   763  0161  3073               	movlw	115
   764  0162  063A               	xorwf	main@cmd,w
   765  0163  1903               	btfsc	3,2
   766  0164  2933               	goto	l941
   767                           
   768                           ;main.c: 152: else if (cmd == 't') {
   769  0165  3074               	movlw	116
   770  0166  1283               	bcf	3,5	;RP0=0, select bank0
   771  0167  1303               	bcf	3,6	;RP1=0, select bank0
   772  0168  063A               	xorwf	main@cmd,w
   773  0169  1D03               	btfss	3,2
   774  016A  2945               	goto	l917
   775                           
   776                           ;main.c: 153: T0PS = msg;
   777  016B  0839               	movf	main@msg,w
   778  016C  00B6               	movwf	??_main
   779  016D  0836               	movf	??_main,w
   780  016E  00BD               	movwf	_T0PS
   781                           
   782                           ;main.c: 154: kT0 = T0PS;
   783  016F  083D               	movf	_T0PS,w
   784  0170  00B6               	movwf	??_main
   785  0171  0836               	movf	??_main,w
   786  0172  00BE               	movwf	_kT0
   787                           
   788                           ;main.c: 155: TMR1 = 0;
   789  0173  018E               	clrf	14	;volatile
   790  0174  018F               	clrf	15	;volatile
   791                           
   792                           ;main.c: 156: T1CON |= 0x01;
   793  0175  1410               	bsf	16,0	;volatile
   794                           
   795                           ;main.c: 157: TMR0 = 255;
   796  0176  30FF               	movlw	255
   797  0177  0081               	movwf	1	;volatile
   798  0178  168B               	bsf	11,5	;# 
   799  0179  2945               	goto	l917
   800  017A                     __end_of_main:	
   801                           ;main.c: 159: }
   802                           ;main.c: 160: }
   803                           ;main.c: 161: }
   804                           ;main.c: 162: return 0;
   805                           ;	Return value of _main is never used
   806                           
   807                           
   808                           	psect	text1
   809  021E                     __ptext1:	
   810 ;; *************** function _write *****************
   811 ;; Defined at:
   812 ;;		line 61 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  duty            1    wreg     char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  duty            1    6[COMMON] char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         1       0       0       0       0
   830 ;;Total ram usage:        1 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    2
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _write
   842  021E                     _write:	
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _write: [wreg+status,2]
   846                           ;write@duty stored from wreg
   847  021E  00F6               	movwf	write@duty
   848                           
   849                           ;main.c: 62: if (duty > 100) PWM = 100;
   850  021F  0876               	movf	write@duty,w
   851  0220  3A80               	xorlw	128
   852  0221  3E1B               	addlw	-229
   853  0222  1C03               	skipc
   854  0223  2A29               	goto	l87
   855  0224  3064               	movlw	100
   856  0225  1283               	bcf	3,5	;RP0=0, select bank0
   857  0226  1303               	bcf	3,6	;RP1=0, select bank0
   858  0227  009B               	movwf	27
   859  0228  0008               	return
   860  0229                     l87:	
   861                           
   862                           ;main.c: 63: else if (duty < 0) PWM = 0;
   863  0229  1FF6               	btfss	write@duty,7
   864  022A  2A2F               	goto	l823
   865  022B  1283               	bcf	3,5	;RP0=0, select bank0
   866  022C  1303               	bcf	3,6	;RP1=0, select bank0
   867  022D  019B               	clrf	27
   868  022E  0008               	return
   869  022F                     l823:	
   870                           
   871                           ;main.c: 64: else PWM = duty;
   872  022F  0876               	movf	write@duty,w
   873  0230  1283               	bcf	3,5	;RP0=0, select bank0
   874  0231  1303               	bcf	3,6	;RP1=0, select bank0
   875  0232  009B               	movwf	27
   876  0233  0008               	return
   877  0234                     __end_of_write:	
   878                           
   879                           	psect	text2
   880  0266                     __ptext2:	
   881 ;; *************** function _rsget *****************
   882 ;; Defined at:
   883 ;;		line 47 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      unsigned char 
   890 ;; Registers used:
   891 ;;		wreg
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    2
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _rsget
   913  0266                     _rsget:	
   914  0266                     l78:	
   915                           ;main.c: 48: while (!RCIF) continue;
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _rsget: [wreg]
   919                           
   920  0266  1283               	bcf	3,5	;RP0=0, select bank0
   921  0267  1303               	bcf	3,6	;RP1=0, select bank0
   922  0268  1E8C               	btfss	12,5	;volatile
   923  0269  2A66               	goto	l78
   924                           
   925                           ;main.c: 49: return RCREG;
   926  026A  081A               	movf	26,w	;volatile
   927  026B  0008               	return
   928  026C                     __end_of_rsget:	
   929                           
   930                           	psect	text3
   931  0203                     __ptext3:	
   932 ;; *************** function _read_tmr1 *****************
   933 ;; Defined at:
   934 ;;		line 54 in file "main.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    3
   955 ;; This function calls:
   956 ;;		_rsend
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _read_tmr1
   964  0203                     _read_tmr1:	
   965                           
   966                           ;main.c: 55: T1ZOH = TMR1;
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in _read_tmr1: [wreg+status,2+status,0+pclath+cstack]
   970  0203  1283               	bcf	3,5	;RP0=0, select bank0
   971  0204  1303               	bcf	3,6	;RP1=0, select bank0
   972  0205  080F               	movf	15,w	;volatile
   973  0206  00BC               	movwf	_T1ZOH+1	;volatile
   974  0207  080E               	movf	14,w	;volatile
   975  0208  00BB               	movwf	_T1ZOH	;volatile
   976                           
   977                           ;main.c: 56: rsend(T1ZOH >> 8);
   978  0209  083C               	movf	_T1ZOH+1,w	;volatile
   979  020A  120A  118A  2256  120A  118A  	fcall	_rsend
   980                           
   981                           ;main.c: 57: rsend(T1ZOH);
   982  020F  1283               	bcf	3,5	;RP0=0, select bank0
   983  0210  1303               	bcf	3,6	;RP1=0, select bank0
   984  0211  083B               	movf	_T1ZOH,w	;volatile
   985  0212  120A  118A  2256   	fcall	_rsend
   986                           
   987                           ;main.c: 58: TMR1 -= T1ZOH;
   988  0215  1283               	bcf	3,5	;RP0=0, select bank0
   989  0216  1303               	bcf	3,6	;RP1=0, select bank0
   990  0217  083B               	movf	_T1ZOH,w	;volatile
   991  0218  028E               	subwf	14,f	;volatile
   992  0219  083C               	movf	_T1ZOH+1,w	;volatile
   993  021A  1C03               	skipc
   994  021B  038F               	decf	15,f	;volatile
   995  021C  028F               	subwf	15,f	;volatile
   996  021D  0008               	return
   997  021E                     __end_of_read_tmr1:	
   998                           
   999                           	psect	text4
  1000  0256                     __ptext4:	
  1001 ;; *************** function _rsend *****************
  1002 ;; Defined at:
  1003 ;;		line 42 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  msg             1    wreg     unsigned char 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  msg             1    6[COMMON] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         1       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         1       0       0       0       0
  1021 ;;Total ram usage:        1 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_read_tmr1
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _rsend
  1034  0256                     _rsend:	
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _rsend: [wreg]
  1038                           ;rsend@msg stored from wreg
  1039  0256  00F6               	movwf	rsend@msg
  1040  0257                     l72:	
  1041                           ;main.c: 43: while (!TXIF) continue;
  1042                           
  1043  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0259  1E0C               	btfss	12,4	;volatile
  1046  025A  2A57               	goto	l72
  1047                           
  1048                           ;main.c: 44: TXREG = msg;
  1049  025B  0876               	movf	rsend@msg,w
  1050  025C  0099               	movwf	25	;volatile
  1051  025D  0008               	return
  1052  025E                     __end_of_rsend:	
  1053                           
  1054                           	psect	text5
  1055  017A                     __ptext5:	
  1056 ;; *************** function _beep *****************
  1057 ;; Defined at:
  1058 ;;		line 31 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  dash            1    wreg     unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  dash            1    0[BANK0 ] unsigned char 
  1063 ;;  j               2    3[BANK0 ] int 
  1064 ;;  j               2    1[BANK0 ] int 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, btemp+1
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       5       0       0       0
  1076 ;;      Temps:          1       0       0       0       0
  1077 ;;      Totals:         1       5       0       0       0
  1078 ;;Total ram usage:        6 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    2
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _beep
  1090  017A                     _beep:	
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1]
  1094                           ;beep@dash stored from wreg
  1095  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1096  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1097  017C  00B1               	movwf	beep@dash
  1098                           
  1099                           ;main.c: 32: if (!dash) for (int j = 0; j < 100; ++j) {
  1100  017D  0831               	movf	beep@dash,w
  1101  017E  1D03               	btfss	3,2
  1102  017F  29A8               	goto	l793
  1103  0180  01B2               	clrf	beep@j
  1104  0181  01B3               	clrf	beep@j+1
  1105  0182                     L1:	
  1106  0182  0833               	movf	beep@j+1,w
  1107  0183  3A80               	xorlw	128
  1108  0184  00FF               	movwf	127
  1109  0185  3080               	movlw	128
  1110  0186  027F               	subwf	127,w
  1111  0187  1D03               	skipz
  1112  0188  298B               	goto	u205
  1113  0189  3064               	movlw	100
  1114  018A  0232               	subwf	beep@j,w
  1115  018B                     u205:	
  1116  018B  1803               	btfsc	3,0
  1117  018C  0008               	return
  1118                           
  1119                           ;main.c: 33: BUZ = 1; _delay((unsigned long)((1000)*(4000000/4000000.0)));
  1120  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1121  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1122  018F  1685               	bsf	5,5
  1123  0190  30C7               	movlw	199
  1124  0191  00F6               	movwf	??_beep
  1125  0192                     u407:	
  1126  0192  2993               	nop2
  1127  0193  0BF6               	decfsz	??_beep,f
  1128  0194  2992               	goto	u407
  1129  0195  2996               	nop2
  1130  0196  2997               	nop2
  1131                           
  1132                           ;main.c: 34: BUZ = 0; _delay((unsigned long)((500)*(4000000/4000000.0)));
  1133  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0199  1285               	bcf	5,5
  1136  019A  30A6               	movlw	166
  1137  019B  00F6               	movwf	??_beep
  1138  019C                     u417:	
  1139  019C  0BF6               	decfsz	??_beep,f
  1140  019D  299C               	goto	u417
  1141  019E  0000               	nop
  1142  019F  3001               	movlw	1
  1143  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1144  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1145  01A2  07B2               	addwf	beep@j,f
  1146  01A3  1803               	skipnc
  1147  01A4  0AB3               	incf	beep@j+1,f
  1148  01A5  3000               	movlw	0
  1149  01A6  07B3               	addwf	beep@j+1,f
  1150  01A7  2982               	goto	L1
  1151  01A8                     l793:	
  1152                           ;main.c: 35: }
  1153                           
  1154                           
  1155                           ;main.c: 36: else for (int j = 0; j < 500; ++j) {
  1156  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1157  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1158  01AA  01B4               	clrf	beep@j_57
  1159  01AB  01B5               	clrf	beep@j_57+1
  1160  01AC                     L2:	
  1161  01AC  0835               	movf	beep@j_57+1,w
  1162  01AD  3A80               	xorlw	128
  1163  01AE  00FF               	movwf	127
  1164  01AF  3081               	movlw	129
  1165  01B0  027F               	subwf	127,w
  1166  01B1  1D03               	skipz
  1167  01B2  29B5               	goto	u225
  1168  01B3  30F4               	movlw	244
  1169  01B4  0234               	subwf	beep@j_57,w
  1170  01B5                     u225:	
  1171  01B5  1803               	btfsc	3,0
  1172  01B6  0008               	return
  1173                           
  1174                           ;main.c: 37: BUZ = 1; _delay((unsigned long)((1000)*(4000000/4000000.0)));
  1175  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1176  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1177  01B9  1685               	bsf	5,5
  1178  01BA  30C7               	movlw	199
  1179  01BB  00F6               	movwf	??_beep
  1180  01BC                     u427:	
  1181  01BC  29BD               	nop2
  1182  01BD  0BF6               	decfsz	??_beep,f
  1183  01BE  29BC               	goto	u427
  1184  01BF  29C0               	nop2
  1185  01C0  29C1               	nop2
  1186                           
  1187                           ;main.c: 38: BUZ = 0; _delay((unsigned long)((500)*(4000000/4000000.0)));
  1188  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1189  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1190  01C3  1285               	bcf	5,5
  1191  01C4  30A6               	movlw	166
  1192  01C5  00F6               	movwf	??_beep
  1193  01C6                     u437:	
  1194  01C6  0BF6               	decfsz	??_beep,f
  1195  01C7  29C6               	goto	u437
  1196  01C8  0000               	nop
  1197  01C9  3001               	movlw	1
  1198  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1199  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1200  01CC  07B4               	addwf	beep@j_57,f
  1201  01CD  1803               	skipnc
  1202  01CE  0AB5               	incf	beep@j_57+1,f
  1203  01CF  3000               	movlw	0
  1204  01D0  07B5               	addwf	beep@j_57+1,f
  1205  01D1  29AC               	goto	L2
  1206  01D2                     __end_of_beep:	
  1207                           
  1208                           	psect	text6
  1209  01D2                     __ptext6:	
  1210 ;; *************** function _sampling *****************
  1211 ;; Defined at:
  1212 ;;		line 70 in file "main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          5       0       0       0       0
  1229 ;;      Totals:         5       0       0       0       0
  1230 ;;Total ram usage:        5 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		i1_rsend
  1235 ;; This function is called by:
  1236 ;;		Interrupt level 1
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _sampling
  1242  01D2                     _sampling:	
  1243                           
  1244                           ;main.c: 71: kT0++;
  1245  01D2  3001               	movlw	1
  1246  01D3  00F1               	movwf	??_sampling
  1247  01D4  0871               	movf	??_sampling,w
  1248  01D5  07BE               	addwf	_kT0,f
  1249                           
  1250                           ;main.c: 72: if (kT0 > T0PS) {
  1251  01D6  083E               	movf	_kT0,w
  1252  01D7  023D               	subwf	_T0PS,w
  1253  01D8  1803               	skipnc
  1254  01D9  29F7               	goto	i1l845
  1255                           
  1256                           ;main.c: 73: kT0 = 0;
  1257  01DA  01BE               	clrf	_kT0
  1258                           
  1259                           ;main.c: 74: T1ZOH = TMR1;
  1260  01DB  080F               	movf	15,w	;volatile
  1261  01DC  00BC               	movwf	_T1ZOH+1	;volatile
  1262  01DD  080E               	movf	14,w	;volatile
  1263  01DE  00BB               	movwf	_T1ZOH	;volatile
  1264                           
  1265                           ;main.c: 75: PWM = PWMZOH;
  1266  01DF  083F               	movf	_PWMZOH,w
  1267  01E0  009B               	movwf	27
  1268                           
  1269                           ;main.c: 76: rsend(T1ZOH);
  1270  01E1  083B               	movf	_T1ZOH,w	;volatile
  1271  01E2  120A  118A  225E  120A  118A  	fcall	i1_rsend
  1272                           
  1273                           ;main.c: 77: rsend(T1ZOH >> 8);
  1274  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1275  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1276  01E9  083C               	movf	_T1ZOH+1,w	;volatile
  1277  01EA  120A  118A  225E  120A  118A  	fcall	i1_rsend
  1278                           
  1279                           ;main.c: 78: TMR1 -= T1ZOH;
  1280  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1281  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1282  01F1  083B               	movf	_T1ZOH,w	;volatile
  1283  01F2  028E               	subwf	14,f	;volatile
  1284  01F3  083C               	movf	_T1ZOH+1,w	;volatile
  1285  01F4  1C03               	skipc
  1286  01F5  038F               	decf	15,f	;volatile
  1287  01F6  028F               	subwf	15,f	;volatile
  1288  01F7                     i1l845:	
  1289                           
  1290                           ;main.c: 79: }
  1291                           ;main.c: 80: TMR0IF = 0;
  1292  01F7  110B               	bcf	11,2	;volatile
  1293  01F8  0875               	movf	??_sampling+4,w
  1294  01F9  00FF               	movwf	127
  1295  01FA  0874               	movf	??_sampling+3,w
  1296  01FB  008A               	movwf	10
  1297  01FC  0873               	movf	??_sampling+2,w
  1298  01FD  0084               	movwf	4
  1299  01FE  0E72               	swapf	(??_sampling+1)^(0+-128),w
  1300  01FF  0083               	movwf	3
  1301  0200  0EFE               	swapf	126,f
  1302  0201  0E7E               	swapf	126,w
  1303  0202  0009               	retfie
  1304  0203                     __end_of_sampling:	
  1305                           
  1306                           	psect	intentry
  1307  0004                     __pintentry:	
  1308                           ;incstack = 0
  1309                           ; Regs used in _sampling: [wreg+status,2+status,0+pclath+cstack]
  1310                           
  1311  0004                     interrupt_function:	
  1312  007E                     saved_w	set	btemp
  1313  0004  00FE               	movwf	btemp
  1314  0005  0E03               	swapf	3,w
  1315  0006  00F2               	movwf	??_sampling+1
  1316  0007  0804               	movf	4,w
  1317  0008  00F3               	movwf	??_sampling+2
  1318  0009  080A               	movf	10,w
  1319  000A  00F4               	movwf	??_sampling+3
  1320  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1321  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1322  000D  087F               	movf	btemp+1,w
  1323  000E  00F5               	movwf	??_sampling+4
  1324  000F  120A  118A  29D2   	ljmp	_sampling
  1325                           
  1326                           	psect	text7
  1327  025E                     __ptext7:	
  1328 ;; *************** function i1_rsend *****************
  1329 ;; Defined at:
  1330 ;;		line 42 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  msg             1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  msg             1    0[COMMON] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0
  1347 ;;      Totals:         1       0       0       0       0
  1348 ;;Total ram usage:        1 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_sampling
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function i1_rsend
  1359  025E                     i1_rsend:	
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in i1_rsend: [wreg]
  1363                           ;i1rsend@msg stored from wreg
  1364  025E  00F0               	movwf	i1rsend@msg
  1365  025F                     i1l72:	
  1366                           ;main.c: 43: while (!TXIF) continue;
  1367                           
  1368  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0261  1E0C               	btfss	12,4	;volatile
  1371  0262  2A5F               	goto	i1l72
  1372                           
  1373                           ;main.c: 44: TXREG = msg;
  1374  0263  0870               	movf	i1rsend@msg,w
  1375  0264  0099               	movwf	25	;volatile
  1376  0265  0008               	return
  1377  0266                     __end_ofi1_rsend:	
  1378  007E                     btemp	set	126	;btemp
  1379  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80     10      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_beep
    _main->_rsend
    _main->_write
    _read_tmr1->_rsend

Critical Paths under _sampling in COMMON

    _sampling->i1_rsend

Critical Paths under _main in BANK0

    _main->_beep

Critical Paths under _sampling in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _sampling in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _sampling in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _sampling in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     425
                                              5 BANK0      5     5      0
                               _beep
                          _read_tmr1
                              _rsend
                              _rsget
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                1     1      0      66
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rsget                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_tmr1                                            0     0      0      22
                              _rsend
 ---------------------------------------------------------------------------------
 (1) _rsend                                                1     1      0      22
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _beep                                                 6     6      0     114
                                              6 COMMON     1     1      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _sampling                                             5     5      0      22
                                              1 COMMON     5     5      0
                            i1_rsend
 ---------------------------------------------------------------------------------
 (4) i1_rsend                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
   _read_tmr1
     _rsend
   _rsend
   _rsget
   _write

 _sampling (ROOT)
   i1_rsend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      21       5       41.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Jan  3 19:13:07 2018

                      pc 0002              __CFG_CP$OFF 0000                       l72 0257  
                     l78 0266                       l87 0229                       _RC 0040  
                     fsr 0004                      l823 022F                      l903 00BA  
                    l911 00E6                      l905 00C8                      l923 0107  
                    l941 0133                      l917 0145                      l927 010C  
                    l793 01A8                      l891 0092                      l883 00CB  
                    l893 009B                      l895 00A9                      l889 008C  
                    _BUF 0020                      _BUZ 002D                      u205 018B  
                    u225 01B5                      _PR2 0092                      u407 0192  
                    u417 019C             __CFG_CPD$OFF 0000                      u427 01BC  
                    u437 01C6                      u357 0067                      u367 0077  
                    u377 0087                      u387 00F2                      u397 0102  
                    _PWM 001B                      _kT0 003E                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   _T0PS 003D                     _RCIF 0065                     i1l72 025F  
                   _TMR0 0001                     _TMR1 000E                     _TXIF 0064  
           __CFG_WRT$OFF 0000                     _beep 017A                     _main 002B  
                   btemp 007E                     start 0012          __end_ofi1_rsend 0266  
                  INTCON 000B                    ?_beep 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _T1CON 0010                    _T2CON 0012  
                  _T1ZOH 003B                    i1l845 01F7                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    _TXSTA 0098                    beep@j 0032  
                  _rsend 0256                    _rsget 0266                    main@x 0038  
                  _write 021E           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E               i1rsend@msg 0070  
        __initialization 0015             __end_of_beep 01D2             __end_of_main 017A  
                 ??_beep 0076                   ??_main 0036                   _ADCON1 009F  
                 _CCPR1L 0015                   _CCPR2L 001B                   ?_rsend 0070  
                 ?_rsget 0070                   ?_write 0070                   _INTCON 000B  
              ??i1_rsend 0070                   _TMR0IF 005A                   _PWMZOH 003F  
         __CFG_PWRTE$OFF 0000         __end_of_sampling 0203                   saved_w 007E  
__end_of__initialization 0027           __pcstackCOMMON 0070             __pidataBANK0 0234  
          __end_of_rsend 025E            __end_of_rsget 026C            __end_of_write 0234  
                ??_rsend 0076                  ??_rsget 0076                  ??_write 0076  
             __pbssBANK0 003B       __size_of_read_tmr1 001B               __pmaintext 002B  
             __pintentry 0004                  _CCP1CON 0017                  _CCP2CON 001D  
                i1_rsend 025E                ?_sampling 0070                  __ptext1 021E  
                __ptext2 0266                  __ptext3 0203                  __ptext4 0256  
                __ptext5 017A                  __ptext6 01D2                  __ptext7 025E  
      __end_of_read_tmr1 021E                  main@cmd 003A                  main@msg 0039  
   end_of_initialization 0027               ??_sampling 0071      start_initialization 0015  
             init_fetch0 0245              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 0031                 ?i1_rsend 0070        __size_of_sampling 0031  
              _read_tmr1 0203           __size_of_rsend 0008           __size_of_rsget 0006  
         __size_of_write 0016        interrupt_function 0004               ?_read_tmr1 0070  
       __size_ofi1_rsend 0008                 beep@j_57 0034                 beep@dash 0031  
          __size_of_beep 0058            __size_of_main 014F                 _sampling 01D2  
               init_ram0 0249              ??_read_tmr1 0077                 intlevel1 0000  
              write@duty 0076                 rsend@msg 0076               _OPTION_REG 0081  
