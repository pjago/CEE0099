

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Sep 11 18:52:33 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.43
    29                           ; Generated 25/07/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122                           
   123                           	psect	idataBANK0
   124  0735                     __pidataBANK0:	
   125                           
   126                           ;initializer for _FAN
   127  0735  34FF               	retlw	255
   128  0736  34FF               	retlw	255
   129  0737  3400               	retlw	0
   130  0738  3400               	retlw	0
   131  0739  3400               	retlw	0
   132  073A  3400               	retlw	0
   133  073B  3407               	retlw	7
   134  073C  3400               	retlw	0
   135  073D  3488               	retlw	136
   136  073E  3413               	retlw	19
   137                           
   138                           	psect	strings
   139  0600                     __pstrings:	
   140  0600                     stringtab:	
   141  0600                     __stringtab:	
   142  0600                     stringcode:	
   143                           ;	String table - string pointers are 1 byte each
   144                           
   145  0600                     stringdir:	
   146  0600  3006               	movlw	high stringdir
   147  0601  008A               	movwf	10
   148  0602  0804               	movf	4,w
   149  0603  0A84               	incf	4,f
   150  0604  0782               	addwf	2,f
   151  0605                     __stringbase:	
   152  0605  3400               	retlw	0
   153  0606                     __end_of__stringtab:	
   154  0606                     _dpowers:	
   155  0606  3401               	retlw	1
   156  0607  3400               	retlw	0
   157  0608  340A               	retlw	10
   158  0609  3400               	retlw	0
   159  060A  3464               	retlw	100
   160  060B  3400               	retlw	0
   161  060C  34E8               	retlw	232
   162  060D  3403               	retlw	3
   163  060E  3410               	retlw	16
   164  060F  3427               	retlw	39
   165  0610                     __end_of_dpowers:	
   166  0610                     _IFOSC:	
   167  0610  3440               	retlw	64
   168  0611  3442               	retlw	66
   169  0612  340F               	retlw	15
   170  0613  3400               	retlw	0
   171  0614                     __end_of_IFOSC:	
   172  0614                     _RPSMIN:	
   173  0614  3408               	retlw	8
   174  0615  3400               	retlw	0
   175  0616                     __end_of_RPSMIN:	
   176  0616                     _T1FOSC:	
   177  0616  3400               	retlw	0
   178  0617  3410               	retlw	16
   179  0618                     __end_of_T1FOSC:	
   180  000E                     _TMR1	set	14
   181  0009                     _LCD	set	9
   182  000B                     _INTCON	set	11
   183  0012                     _T2CON	set	18
   184  0015                     _CCPR1L	set	21
   185  0017                     _CCP1CON	set	23
   186  0010                     _T1CON	set	16
   187  0008                     _PORTD	set	8
   188  0059                     _INTF	set	89
   189  0037                     _RB7	set	55
   190  002D                     _RA5	set	45
   191  0085                     _TRISA	set	133
   192  0089                     _TRISE	set	137
   193  0088                     _TRISD	set	136
   194  0086                     _TRISB	set	134
   195  0081                     _OPTION_REG	set	129
   196  0087                     _TRISC	set	135
   197  0092                     _PR2	set	146
   198  0618                     STR_3:	
   199  0618  344C               	retlw	76	;'L'
   200  0619  3441               	retlw	65	;'A'
   201  061A  3442               	retlw	66	;'B'
   202  061B  342E               	retlw	46	;'.'
   203  061C  3443               	retlw	67	;'C'
   204  061D  344F               	retlw	79	;'O'
   205  061E  344E               	retlw	78	;'N'
   206  061F  3454               	retlw	84	;'T'
   207  0620  342E               	retlw	46	;'.'
   208  0621  3444               	retlw	68	;'D'
   209  0622  3449               	retlw	73	;'I'
   210  0623  3447               	retlw	71	;'G'
   211  0624  3449               	retlw	73	;'I'
   212  0625  3454               	retlw	84	;'T'
   213  0626  3441               	retlw	65	;'A'
   214  0627  344C               	retlw	76	;'L'
   215  0628  3400               	retlw	0
   216  0629                     STR_4:	
   217  0629  3453               	retlw	83	;'S'
   218  062A  3465               	retlw	101	;'e'
   219  062B  346A               	retlw	106	;'j'
   220  062C  3461               	retlw	97	;'a'
   221  062D  3420               	retlw	32	;' '
   222  062E  3442               	retlw	66	;'B'
   223  062F  3465               	retlw	101	;'e'
   224  0630  346D               	retlw	109	;'m'
   225  0631  342D               	retlw	45	;'-'
   226  0632  3456               	retlw	86	;'V'
   227  0633  3469               	retlw	105	;'i'
   228  0634  346E               	retlw	110	;'n'
   229  0635  3464               	retlw	100	;'d'
   230  0636  346F               	retlw	111	;'o'
   231  0637  3421               	retlw	33	;'!'
   232  0638  3400               	retlw	0
   233  0639                     STR_2:	
   234  0639  3450               	retlw	80	;'P'
   235  063A  3457               	retlw	87	;'W'
   236  063B  344D               	retlw	77	;'M'
   237  063C  3420               	retlw	32	;' '
   238  063D  3425               	retlw	37	;'%'
   239  063E  3433               	retlw	51	;'3'
   240  063F  3464               	retlw	100	;'d'
   241  0640  3425               	retlw	37	;'%'
   242  0641  3425               	retlw	37	;'%'
   243  0642  3400               	retlw	0
   244  0643                     STR_1:	
   245  0643  3425               	retlw	37	;'%'
   246  0644  3434               	retlw	52	;'4'
   247  0645  3464               	retlw	100	;'d'
   248  0646  3420               	retlw	32	;' '
   249  0647  3400               	retlw	0
   250                           
   251                           ; #config settings
   252  0000                     
   253                           	psect	cinit
   254  0015                     start_initialization:	
   255  0015                     __initialization:	
   256                           
   257                           ; Initialize objects allocated to BANK0
   258  0015  1383               	bcf	3,7	;select IRP bank0
   259  0016  3059               	movlw	low (__pdataBANK0+10)
   260  0017  00FD               	movwf	btemp+-1
   261  0018  3007               	movlw	high __pidataBANK0
   262  0019  00FE               	movwf	btemp
   263  001A  3035               	movlw	low __pidataBANK0
   264  001B  00FF               	movwf	btemp+1
   265  001C  304F               	movlw	low __pdataBANK0
   266  001D  0084               	movwf	4
   267  001E  120A  118A  271A   	fcall	init_ram0
   268  0021                     end_of_initialization:	
   269                           ;End of C runtime variable initialization code
   270                           
   271  0021                     __end_of__initialization:	
   272  0021  0183               	clrf	3
   273  0022  120A  118A  2B4F   	ljmp	_main	;jump to C main() function
   274                           
   275                           	psect	dataBANK0
   276  004F                     __pdataBANK0:	
   277  004F                     _FAN:	
   278  004F                     	ds	10
   279                           
   280                           	psect	inittext
   281  0716                     init_fetch0:	
   282                           ;	Called with low address in FSR and high address in W
   283                           
   284  0716  087E               	movf	126,w
   285  0717  008A               	movwf	10
   286  0718  087F               	movf	127,w
   287  0719  0082               	movwf	2
   288  071A                     init_ram0:	
   289                           ;Called with:
   290                           ;	high address of idata address in btemp 
   291                           ;	low address of idata address in btemp+1 
   292                           ;	low address of data in FSR
   293                           ;	high address + 1 of data in btemp-1
   294                           
   295  071A  2716  120A  118A   	fcall	init_fetch0
   296  071D  0080               	movwf	0
   297  071E  0A84               	incf	4,f
   298  071F  0804               	movf	4,w
   299  0720  067D               	xorwf	125,w
   300  0721  1903               	btfsc	3,2
   301  0722  3400               	retlw	0
   302  0723  0AFF               	incf	127,f
   303  0724  1903               	btfsc	3,2
   304  0725  0AFE               	incf	126,f
   305  0726  2F1A               	goto	init_ram0
   306                           
   307                           	psect	cstackCOMMON
   308  0070                     __pcstackCOMMON:	
   309  0070                     ?_isdigit:	
   310  0070                     ?_beep:	
   311                           ; 1 bit 
   312                           
   313  0070                     ?_putch:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_prog_lcd:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_init_lcd:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_raycast_intersection_cleared:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ??_raycast_intersection_cleared:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333  0070                     	ds	4
   334  0074                     ??_isdigit:	
   335  0074                     ??___lldiv:	
   336                           ; 1 bytes @ 0x4
   337                           
   338  0074                     ?___wmul:	
   339                           ; 1 bytes @ 0x4
   340                           
   341  0074                     _isdigit$324:	
   342                           ; 2 bytes @ 0x4
   343                           
   344  0074                     ___wmul@multiplier:	
   345                           ; 1 bytes @ 0x4
   346                           
   347                           
   348                           ; 2 bytes @ 0x4
   349  0074                     	ds	1
   350  0075                     isdigit@c:	
   351  0075                     ___lldiv@quotient:	
   352                           ; 1 bytes @ 0x5
   353                           
   354                           
   355                           ; 4 bytes @ 0x5
   356  0075                     	ds	1
   357  0076                     ___wmul@multiplicand:	
   358                           
   359                           ; 2 bytes @ 0x6
   360  0076                     	ds	2
   361  0078                     ??___wmul:	
   362  0078                     ___wmul@product:	
   363                           ; 1 bytes @ 0x8
   364                           
   365                           
   366                           ; 2 bytes @ 0x8
   367  0078                     	ds	1
   368  0079                     ___lldiv@counter:	
   369                           
   370                           ; 1 bytes @ 0x9
   371  0079                     	ds	1
   372  007A                     ??_main_lcd:	
   373                           
   374                           	psect	cstackBANK0
   375  0020                     __pcstackBANK0:	
   376                           ; 1 bytes @ 0xA
   377                           
   378  0020                     ?___lwdiv:	
   379  0020                     ?___lldiv:	
   380                           ; 2 bytes @ 0x0
   381                           
   382  0020                     ___lwdiv@divisor:	
   383                           ; 4 bytes @ 0x0
   384                           
   385  0020                     ___lldiv@divisor:	
   386                           ; 2 bytes @ 0x0
   387                           
   388                           
   389                           ; 4 bytes @ 0x0
   390  0020                     	ds	2
   391  0022                     ___lwdiv@dividend:	
   392                           
   393                           ; 2 bytes @ 0x2
   394  0022                     	ds	2
   395  0024                     ??___lwdiv:	
   396  0024                     ___lldiv@dividend:	
   397                           ; 1 bytes @ 0x4
   398                           
   399                           
   400                           ; 4 bytes @ 0x4
   401  0024                     	ds	1
   402  0025                     ___lwdiv@quotient:	
   403                           
   404                           ; 2 bytes @ 0x5
   405  0025                     	ds	2
   406  0027                     ___lwdiv@counter:	
   407                           
   408                           ; 1 bytes @ 0x7
   409  0027                     	ds	1
   410  0028                     ??_beep:	
   411  0028                     ??_putch:	
   412                           ; 1 bytes @ 0x8
   413                           
   414  0028                     ??_prog_lcd:	
   415                           ; 1 bytes @ 0x8
   416                           
   417  0028                     ?___lwmod:	
   418                           ; 1 bytes @ 0x8
   419                           
   420  0028                     ?_rps_timer1:	
   421                           ; 2 bytes @ 0x8
   422                           
   423  0028                     ___lwmod@divisor:	
   424                           ; 10 bytes @ 0x8
   425                           
   426  0028                     rps_timer1@x:	
   427                           ; 2 bytes @ 0x8
   428                           
   429                           
   430                           ; 10 bytes @ 0x8
   431  0028                     	ds	2
   432  002A                     ___lwmod@dividend:	
   433                           
   434                           ; 2 bytes @ 0xA
   435  002A                     	ds	2
   436  002C                     ??___lwmod:	
   437  002C                     putch@msg:	
   438                           ; 1 bytes @ 0xC
   439                           
   440  002C                     prog_lcd@msg:	
   441                           ; 1 bytes @ 0xC
   442                           
   443  002C                     beep@j:	
   444                           ; 1 bytes @ 0xC
   445                           
   446                           
   447                           ; 2 bytes @ 0xC
   448  002C                     	ds	1
   449  002D                     ??_init_lcd:	
   450  002D                     ___lwmod@counter:	
   451                           ; 1 bytes @ 0xD
   452                           
   453                           
   454                           ; 1 bytes @ 0xD
   455  002D                     	ds	1
   456  002E                     ?_printf:	
   457                           
   458                           ; 2 bytes @ 0xE
   459  002E                     	ds	4
   460  0032                     ??_printf:	
   461  0032                     rps_timer1@t:	
   462                           ; 1 bytes @ 0x12
   463                           
   464                           
   465                           ; 2 bytes @ 0x12
   466  0032                     	ds	2
   467  0034                     ??_rps_timer1:	
   468                           
   469                           ; 1 bytes @ 0x14
   470  0034                     	ds	1
   471  0035                     printf@ap:	
   472                           
   473                           ; 1 bytes @ 0x15
   474  0035                     	ds	1
   475  0036                     printf@cp:	
   476                           
   477                           ; 1 bytes @ 0x16
   478  0036                     	ds	1
   479  0037                     printf@prec:	
   480                           
   481                           ; 1 bytes @ 0x17
   482  0037                     	ds	1
   483  0038                     printf@flag:	
   484  0038                     _rps_timer1$542:	
   485                           ; 1 bytes @ 0x18
   486                           
   487                           
   488                           ; 2 bytes @ 0x18
   489  0038                     	ds	1
   490  0039                     printf@len:	
   491                           
   492                           ; 2 bytes @ 0x19
   493  0039                     	ds	2
   494  003B                     printf@val:	
   495                           
   496                           ; 2 bytes @ 0x1B
   497  003B                     	ds	2
   498  003D                     printf@f:	
   499                           
   500                           ; 1 bytes @ 0x1D
   501  003D                     	ds	1
   502  003E                     printf@width:	
   503                           
   504                           ; 2 bytes @ 0x1E
   505  003E                     	ds	2
   506  0040                     printf@c:	
   507                           
   508                           ; 1 bytes @ 0x20
   509  0040                     	ds	1
   510  0041                     ?_main_lcd:	
   511  0041                     main_lcd@value:	
   512                           ; 1 bytes @ 0x21
   513                           
   514                           
   515                           ; 4 bytes @ 0x21
   516  0041                     	ds	4
   517  0045                     main_lcd@duty:	
   518                           
   519                           ; 2 bytes @ 0x25
   520  0045                     	ds	2
   521  0047                     ??_main:	
   522                           
   523                           ; 1 bytes @ 0x27
   524  0047                     	ds	8
   525                           
   526                           	psect	maintext
   527  034F                     __pmaintext:	
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 110 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  2   83[None  ] int 
   540 ;; Registers used:
   541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : B00/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       8       0       0       0
   550 ;;      Totals:         0       8       0       0       0
   551 ;;Total ram usage:        8 bytes
   552 ;; Hardware stack levels required when called:    5
   553 ;; This function calls:
   554 ;;		___lwdiv
   555 ;;		___wmul
   556 ;;		_beep
   557 ;;		_init_lcd
   558 ;;		_main_lcd
   559 ;;		_printf
   560 ;;		_prog_lcd
   561 ;;		_rps_timer1
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _main
   569  034F                     _main:	
   570                           
   571                           ;main.c: 113: T1CON = 0xFB;
   572                           
   573                           ;incstack = 0
   574                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   575  034F  30FB               	movlw	251
   576  0350  1283               	bcf	3,5	;RP0=0, select bank0
   577  0351  1303               	bcf	3,6	;RP1=0, select bank0
   578  0352  0090               	movwf	16	;volatile
   579                           
   580                           ;main.c: 114: CCP1CON = 0x0F;
   581  0353  300F               	movlw	15
   582  0354  0097               	movwf	23	;volatile
   583                           
   584                           ;main.c: 115: CCPR1L = 0;
   585  0355  0195               	clrf	21	;volatile
   586                           
   587                           ;main.c: 116: PR2 = 100;
   588  0356  3064               	movlw	100
   589  0357  1683               	bsf	3,5	;RP0=1, select bank1
   590  0358  1303               	bcf	3,6	;RP1=0, select bank1
   591  0359  0092               	movwf	18	;volatile
   592                           
   593                           ;main.c: 117: T2CON = 0x04;
   594  035A  3004               	movlw	4
   595  035B  1283               	bcf	3,5	;RP0=0, select bank0
   596  035C  1303               	bcf	3,6	;RP1=0, select bank0
   597  035D  0092               	movwf	18	;volatile
   598                           
   599                           ;main.c: 118: TRISC = 0xFB;
   600  035E  30FB               	movlw	251
   601  035F  1683               	bsf	3,5	;RP0=1, select bank1
   602  0360  1303               	bcf	3,6	;RP1=0, select bank1
   603  0361  0087               	movwf	7	;volatile
   604                           
   605                           ;main.c: 119: OPTION_REG = 0x00;
   606  0362  0181               	clrf	1	;volatile
   607                           
   608                           ;main.c: 120: TRISB = 0x7F;
   609  0363  307F               	movlw	127
   610  0364  0086               	movwf	6	;volatile
   611                           
   612                           ;main.c: 121: INTCON = 0x90;
   613  0365  3090               	movlw	144
   614  0366  008B               	movwf	11	;volatile
   615                           
   616                           ;main.c: 122: TRISD = 0x00;
   617  0367  0188               	clrf	8	;volatile
   618                           
   619                           ;main.c: 123: TRISE = 0xFC;
   620  0368  30FC               	movlw	252
   621  0369  0089               	movwf	9	;volatile
   622                           
   623                           ;main.c: 124: TRISA = 0xDF;
   624  036A  30DF               	movlw	223
   625  036B  0085               	movwf	5	;volatile
   626                           
   627                           ;main.c: 126: beep();
   628  036C  120A  118A  2402  120A  118A  	fcall	_beep
   629                           
   630                           ;main.c: 127: beep();
   631  0371  120A  118A  2402  120A  118A  	fcall	_beep
   632                           
   633                           ;main.c: 128: beep();
   634  0376  120A  118A  2402  120A  118A  	fcall	_beep
   635                           
   636                           ;main.c: 129: init_lcd();
   637  037B  120A  118A  21D6  120A  118A  	fcall	_init_lcd
   638                           
   639                           ;main.c: 130: prog_lcd(0x80);
   640  0380  3080               	movlw	128
   641  0381  120A  118A  2520  120A  118A  	fcall	_prog_lcd
   642                           
   643                           ;main.c: 131: printf("LAB.CONT.DIGITAL");
   644  0386  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   645  0387  120A  118A  2025  120A  118A  	fcall	_printf
   646                           
   647                           ;main.c: 132: prog_lcd(0xC0);
   648  038C  30C0               	movlw	192
   649  038D  120A  118A  2520  120A  118A  	fcall	_prog_lcd
   650                           
   651                           ;main.c: 133: printf("Seja Bem-Vindo!");
   652  0392  3024               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   653  0393  120A  118A  2025  120A  118A  	fcall	_printf
   654  0398                     l1244:	
   655                           ;main.c: 137: while (1) {
   656                           
   657                           
   658                           ;main.c: 138: CCPR1L = 100 * FAN.value / FAN.max;
   659  0398  1283               	bcf	3,5	;RP0=0, select bank0
   660  0399  1303               	bcf	3,6	;RP1=0, select bank0
   661  039A  0858               	movf	_FAN+9,w	;volatile
   662  039B  00A1               	movwf	___lwdiv@divisor+1
   663  039C  0857               	movf	_FAN+8,w	;volatile
   664  039D  00A0               	movwf	___lwdiv@divisor
   665  039E  0854               	movf	_FAN+5,w	;volatile
   666  039F  00F5               	movwf	___wmul@multiplier+1
   667  03A0  0853               	movf	_FAN+4,w	;volatile
   668  03A1  00F4               	movwf	___wmul@multiplier
   669  03A2  3064               	movlw	100
   670  03A3  00F6               	movwf	___wmul@multiplicand
   671  03A4  3000               	movlw	0
   672  03A5  00F7               	movwf	___wmul@multiplicand+1
   673  03A6  120A  118A  26E1  120A  118A  	fcall	___wmul
   674  03AB  0875               	movf	?___wmul+1,w
   675  03AC  1283               	bcf	3,5	;RP0=0, select bank0
   676  03AD  1303               	bcf	3,6	;RP1=0, select bank0
   677  03AE  00A3               	movwf	___lwdiv@dividend+1
   678  03AF  0874               	movf	?___wmul,w
   679  03B0  00A2               	movwf	___lwdiv@dividend
   680  03B1  120A  118A  2648  120A  118A  	fcall	___lwdiv
   681  03B6  1283               	bcf	3,5	;RP0=0, select bank0
   682  03B7  1303               	bcf	3,6	;RP1=0, select bank0
   683  03B8  0820               	movf	?___lwdiv,w
   684  03B9  0095               	movwf	21	;volatile
   685                           
   686                           ;main.c: 139: FAN = rps_timer1(FAN, TMR1);
   687  03BA  3028               	movlw	rps_timer1@x& (0+255)
   688  03BB  0084               	movwf	4
   689  03BC  304F               	movlw	low _FAN
   690  03BD  00C7               	movwf	??_main
   691  03BE  0804               	movf	4,w
   692  03BF  00C8               	movwf	??_main+1
   693  03C0  300A               	movlw	10
   694  03C1  00C9               	movwf	??_main+2
   695  03C2                     u1030:	
   696  03C2  0847               	movf	??_main,w
   697  03C3  0084               	movwf	4
   698  03C4  1383               	bcf	3,7	;select IRP bank0
   699  03C5  0800               	movf	0,w
   700  03C6  00CA               	movwf	??_main+3
   701  03C7  0AC7               	incf	??_main,f
   702  03C8  0848               	movf	??_main+1,w
   703  03C9  0084               	movwf	4
   704  03CA  084A               	movf	??_main+3,w
   705  03CB  0080               	movwf	0
   706  03CC  0AC8               	incf	??_main+1,f
   707  03CD  0BC9               	decfsz	??_main+2,f
   708  03CE  2BC2               	goto	u1030
   709  03CF  080F               	movf	15,w	;volatile
   710  03D0  00B3               	movwf	rps_timer1@t+1
   711  03D1  080E               	movf	14,w	;volatile
   712  03D2  00B2               	movwf	rps_timer1@t
   713  03D3  120A  118A  2298  120A  118A  	fcall	_rps_timer1
   714  03D8  304F               	movlw	_FAN& (0+255)
   715  03D9  0084               	movwf	4
   716  03DA  1283               	bcf	3,5	;RP0=0, select bank0
   717  03DB  1303               	bcf	3,6	;RP1=0, select bank0
   718  03DC  3028               	movlw	low ?_rps_timer1
   719  03DD  00CB               	movwf	??_main+4
   720  03DE  0804               	movf	4,w
   721  03DF  00CC               	movwf	??_main+5
   722  03E0  300A               	movlw	10
   723  03E1  00CD               	movwf	??_main+6
   724  03E2                     u1040:	
   725  03E2  084B               	movf	??_main+4,w
   726  03E3  0084               	movwf	4
   727  03E4  1383               	bcf	3,7	;select IRP bank0
   728  03E5  0800               	movf	0,w
   729  03E6  00CE               	movwf	??_main+7
   730  03E7  0ACB               	incf	??_main+4,f
   731  03E8  084C               	movf	??_main+5,w
   732  03E9  0084               	movwf	4
   733  03EA  084E               	movf	??_main+7,w
   734  03EB  0080               	movwf	0
   735  03EC  0ACC               	incf	??_main+5,f
   736  03ED  0BCD               	decfsz	??_main+6,f
   737  03EE  2BE2               	goto	u1040
   738                           
   739                           ;main.c: 140: main_lcd(FAN.value, CCPR1L);
   740  03EF  0853               	movf	_FAN+4,w	;volatile
   741  03F0  00C1               	movwf	main_lcd@value
   742  03F1  0854               	movf	_FAN+5,w	;volatile
   743  03F2  00C2               	movwf	main_lcd@value+1
   744  03F3  01C3               	clrf	main_lcd@value+2
   745  03F4  01C4               	clrf	main_lcd@value+3
   746  03F5  0815               	movf	21,w	;volatile
   747  03F6  00C7               	movwf	??_main
   748  03F7  01C8               	clrf	??_main+1
   749  03F8  0847               	movf	??_main,w
   750  03F9  00C5               	movwf	main_lcd@duty
   751  03FA  0848               	movf	??_main+1,w
   752  03FB  00C6               	movwf	main_lcd@duty+1
   753  03FC  120A  118A  26BA  120A  118A  	fcall	_main_lcd
   754  0401  2B98               	goto	l1244
   755  0402                     __end_of_main:	
   756                           ;main.c: 141: }
   757                           ;main.c: 142: return 0;
   758                           ;	Return value of _main is never used
   759                           
   760                           
   761                           	psect	text1
   762  0298                     __ptext1:	
   763 ;; *************** function _rps_timer1 *****************
   764 ;; Defined at:
   765 ;;		line 91 in file "main.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  x              10    8[BANK0 ] volatile struct .
   768 ;;  t               2   18[BANK0 ] unsigned int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  10    8[BANK0 ] struct .
   773 ;; Registers used:
   774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0      12       0       0       0
   781 ;;      Locals:         0       2       0       0       0
   782 ;;      Temps:          0       4       0       0       0
   783 ;;      Totals:         0      18       0       0       0
   784 ;;Total ram usage:       18 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    2
   787 ;; This function calls:
   788 ;;		___lwdiv
   789 ;;		___wmul
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _rps_timer1
   797  0298                     _rps_timer1:	
   798                           
   799                           ;main.c: 92: if (x.time > t) {
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _rps_timer1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   803  0298  1283               	bcf	3,5	;RP0=0, select bank0
   804  0299  1303               	bcf	3,6	;RP1=0, select bank0
   805  029A  082B               	movf	rps_timer1@x+3,w	;volatile
   806  029B  0233               	subwf	rps_timer1@t+1,w
   807  029C  1D03               	skipz
   808  029D  2AA0               	goto	u995
   809  029E  082A               	movf	rps_timer1@x+2,w	;volatile
   810  029F  0232               	subwf	rps_timer1@t,w
   811  02A0                     u995:	
   812  02A0  1803               	skipnc
   813  02A1  2AA9               	goto	l1178
   814                           
   815                           ;main.c: 93: x.count = 0;
   816  02A2  01A8               	clrf	rps_timer1@x	;volatile
   817  02A3  01A9               	clrf	rps_timer1@x+1	;volatile
   818                           
   819                           ;main.c: 94: x.time = t;
   820  02A4  0833               	movf	rps_timer1@t+1,w
   821  02A5  00AB               	movwf	rps_timer1@x+3	;volatile
   822  02A6  0832               	movf	rps_timer1@t,w
   823  02A7  00AA               	movwf	rps_timer1@x+2	;volatile
   824                           
   825                           ;main.c: 95: }
   826  02A8  0008               	return
   827  02A9                     l1178:	
   828                           
   829                           ;main.c: 96: else if (x.count > 0) {
   830  02A9  0828               	movf	rps_timer1@x,w	;volatile
   831  02AA  0429               	iorwf	rps_timer1@x+1,w	;volatile
   832  02AB  1903               	btfsc	3,2
   833  02AC  2B0A               	goto	l1192
   834                           
   835                           ;main.c: 97: x.value = T1FOSC / (t - x.time) * x.count / x.div;
   836  02AD  092A               	comf	rps_timer1@x+2,w	;volatile
   837  02AE  00B4               	movwf	??_rps_timer1
   838  02AF  092B               	comf	rps_timer1@x+3,w	;volatile
   839  02B0  00B5               	movwf	??_rps_timer1+1
   840  02B1  0AB4               	incf	??_rps_timer1,f
   841  02B2  1903               	skipnz
   842  02B3  0AB5               	incf	??_rps_timer1+1,f
   843  02B4  0832               	movf	rps_timer1@t,w
   844  02B5  0734               	addwf	??_rps_timer1,w
   845  02B6  00A0               	movwf	___lwdiv@divisor
   846  02B7  0833               	movf	rps_timer1@t+1,w
   847  02B8  1803               	skipnc
   848  02B9  0A33               	incf	rps_timer1@t+1,w
   849  02BA  0735               	addwf	??_rps_timer1+1,w
   850  02BB  00A1               	movwf	___lwdiv@divisor+1
   851  02BC  3011               	movlw	low (_T1FOSC-__stringbase)
   852  02BD  0084               	movwf	4
   853  02BE  120A  118A  2600  120A  118A  	fcall	stringdir
   854  02C3  00A2               	movwf	___lwdiv@dividend
   855  02C4  120A  118A  2600  120A  118A  	fcall	stringdir
   856  02C9  00A3               	movwf	___lwdiv@dividend+1
   857  02CA  120A  118A  2648  120A  118A  	fcall	___lwdiv
   858  02CF  1283               	bcf	3,5	;RP0=0, select bank0
   859  02D0  1303               	bcf	3,6	;RP1=0, select bank0
   860  02D1  0821               	movf	?___lwdiv+1,w
   861  02D2  00F5               	movwf	___wmul@multiplier+1
   862  02D3  0820               	movf	?___lwdiv,w
   863  02D4  00F4               	movwf	___wmul@multiplier
   864  02D5  0829               	movf	rps_timer1@x+1,w	;volatile
   865  02D6  00F7               	movwf	___wmul@multiplicand+1
   866  02D7  0828               	movf	rps_timer1@x,w	;volatile
   867  02D8  00F6               	movwf	___wmul@multiplicand
   868  02D9  120A  118A  26E1  120A  118A  	fcall	___wmul
   869  02DE  0875               	movf	?___wmul+1,w
   870  02DF  1283               	bcf	3,5	;RP0=0, select bank0
   871  02E0  1303               	bcf	3,6	;RP1=0, select bank0
   872  02E1  00B9               	movwf	_rps_timer1$542+1
   873  02E2  0874               	movf	?___wmul,w
   874  02E3  00B8               	movwf	_rps_timer1$542
   875                           
   876                           ;main.c: 97: x.value = T1FOSC / (t - x.time) * x.count / x.div;
   877  02E4  082F               	movf	rps_timer1@x+7,w	;volatile
   878  02E5  00A1               	movwf	___lwdiv@divisor+1
   879  02E6  082E               	movf	rps_timer1@x+6,w	;volatile
   880  02E7  00A0               	movwf	___lwdiv@divisor
   881  02E8  0839               	movf	_rps_timer1$542+1,w
   882  02E9  00A3               	movwf	___lwdiv@dividend+1
   883  02EA  0838               	movf	_rps_timer1$542,w
   884  02EB  00A2               	movwf	___lwdiv@dividend
   885  02EC  120A  118A  2648  120A  118A  	fcall	___lwdiv
   886  02F1  1283               	bcf	3,5	;RP0=0, select bank0
   887  02F2  1303               	bcf	3,6	;RP1=0, select bank0
   888  02F3  0821               	movf	?___lwdiv+1,w
   889  02F4  00AD               	movwf	rps_timer1@x+5	;volatile
   890  02F5  0820               	movf	?___lwdiv,w
   891  02F6  00AC               	movwf	rps_timer1@x+4	;volatile
   892                           
   893                           ;main.c: 98: if (x.value > x.max) x.max = x.value;
   894  02F7  082D               	movf	rps_timer1@x+5,w	;volatile
   895  02F8  0231               	subwf	rps_timer1@x+9,w	;volatile
   896  02F9  1D03               	skipz
   897  02FA  2AFD               	goto	u1015
   898  02FB  082C               	movf	rps_timer1@x+4,w	;volatile
   899  02FC  0230               	subwf	rps_timer1@x+8,w	;volatile
   900  02FD                     u1015:	
   901  02FD  1803               	skipnc
   902  02FE  2B03               	goto	l1188
   903  02FF  082D               	movf	rps_timer1@x+5,w	;volatile
   904  0300  00B1               	movwf	rps_timer1@x+9	;volatile
   905  0301  082C               	movf	rps_timer1@x+4,w	;volatile
   906  0302  00B0               	movwf	rps_timer1@x+8	;volatile
   907  0303                     l1188:	
   908                           
   909                           ;main.c: 99: x.count = 0;
   910  0303  01A8               	clrf	rps_timer1@x	;volatile
   911  0304  01A9               	clrf	rps_timer1@x+1	;volatile
   912                           
   913                           ;main.c: 100: x.time = t;
   914  0305  0833               	movf	rps_timer1@t+1,w
   915  0306  00AB               	movwf	rps_timer1@x+3	;volatile
   916  0307  0832               	movf	rps_timer1@t,w
   917  0308  00AA               	movwf	rps_timer1@x+2	;volatile
   918                           
   919                           ;main.c: 101: }
   920  0309  0008               	return
   921  030A                     l1192:	
   922                           
   923                           ;main.c: 102: else if ( (t - x.time) > (T1FOSC / RPSMIN) ) {
   924  030A  092A               	comf	rps_timer1@x+2,w	;volatile
   925  030B  00B4               	movwf	??_rps_timer1
   926  030C  092B               	comf	rps_timer1@x+3,w	;volatile
   927  030D  00B5               	movwf	??_rps_timer1+1
   928  030E  0AB4               	incf	??_rps_timer1,f
   929  030F  1903               	skipnz
   930  0310  0AB5               	incf	??_rps_timer1+1,f
   931  0311  0832               	movf	rps_timer1@t,w
   932  0312  0734               	addwf	??_rps_timer1,w
   933  0313  00B6               	movwf	??_rps_timer1+2
   934  0314  0833               	movf	rps_timer1@t+1,w
   935  0315  1803               	skipnc
   936  0316  0A33               	incf	rps_timer1@t+1,w
   937  0317  0735               	addwf	??_rps_timer1+1,w
   938  0318  00B7               	movwf	??_rps_timer1+3
   939  0319  300F               	movlw	low (_RPSMIN-__stringbase)
   940  031A  0084               	movwf	4
   941  031B  120A  118A  2600  120A  118A  	fcall	stringdir
   942  0320  00A0               	movwf	___lwdiv@divisor
   943  0321  120A  118A  2600  120A  118A  	fcall	stringdir
   944  0326  00A1               	movwf	___lwdiv@divisor+1
   945  0327  3011               	movlw	low (_T1FOSC-__stringbase)
   946  0328  0084               	movwf	4
   947  0329  120A  118A  2600  120A  118A  	fcall	stringdir
   948  032E  00A2               	movwf	___lwdiv@dividend
   949  032F  120A  118A  2600  120A  118A  	fcall	stringdir
   950  0334  00A3               	movwf	___lwdiv@dividend+1
   951  0335  120A  118A  2648  120A  118A  	fcall	___lwdiv
   952  033A  1283               	bcf	3,5	;RP0=0, select bank0
   953  033B  1303               	bcf	3,6	;RP1=0, select bank0
   954  033C  0837               	movf	??_rps_timer1+3,w
   955  033D  0221               	subwf	?___lwdiv+1,w
   956  033E  1D03               	skipz
   957  033F  2B42               	goto	u1025
   958  0340  0836               	movf	??_rps_timer1+2,w
   959  0341  0220               	subwf	?___lwdiv,w
   960  0342                     u1025:	
   961  0342  1803               	skipnc
   962  0343  0008               	return
   963                           
   964                           ;main.c: 103: x.count = -1;
   965  0344  30FF               	movlw	255
   966  0345  00A8               	movwf	rps_timer1@x	;volatile
   967  0346  30FF               	movlw	255
   968  0347  00A9               	movwf	rps_timer1@x+1	;volatile
   969                           
   970                           ;main.c: 104: x.value = 0;
   971  0348  01AC               	clrf	rps_timer1@x+4	;volatile
   972  0349  01AD               	clrf	rps_timer1@x+5	;volatile
   973                           
   974                           ;main.c: 105: x.time = t;
   975  034A  0833               	movf	rps_timer1@t+1,w
   976  034B  00AB               	movwf	rps_timer1@x+3	;volatile
   977  034C  0832               	movf	rps_timer1@t,w
   978  034D  00AA               	movwf	rps_timer1@x+2	;volatile
   979  034E  0008               	return
   980  034F                     __end_of_rps_timer1:	
   981                           ;main.c: 106: }
   982                           ;main.c: 107: return x;
   983                           
   984                           
   985                           	psect	text2
   986  06BA                     __ptext2:	
   987 ;; *************** function _main_lcd *****************
   988 ;; Defined at:
   989 ;;		line 66 in file "main.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  value           4   33[BANK0 ] long 
   992 ;;  duty            2   37[BANK0 ] int 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       6       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0
  1007 ;;      Totals:         0       6       0       0       0
  1008 ;;Total ram usage:        6 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    4
  1011 ;; This function calls:
  1012 ;;		_printf
  1013 ;;		_prog_lcd
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _main_lcd
  1021  06BA                     _main_lcd:	
  1022                           
  1023                           ;main.c: 67: prog_lcd(0xC0);
  1024                           
  1025                           ;incstack = 0
  1026                           ; Regs used in _main_lcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1027  06BA  30C0               	movlw	192
  1028  06BB  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  1029                           
  1030                           ;main.c: 68: printf("%4d ", value);
  1031  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1032  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1033  06C2  0844               	movf	main_lcd@value+3,w
  1034  06C3  00B1               	movwf	?_printf+3
  1035  06C4  0843               	movf	main_lcd@value+2,w
  1036  06C5  00B0               	movwf	?_printf+2
  1037  06C6  0842               	movf	main_lcd@value+1,w
  1038  06C7  00AF               	movwf	?_printf+1
  1039  06C8  0841               	movf	main_lcd@value,w
  1040  06C9  00AE               	movwf	?_printf
  1041  06CA  303E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1042  06CB  120A  118A  2025  120A  118A  	fcall	_printf
  1043                           
  1044                           ;main.c: 69: prog_lcd(0xC8);
  1045  06D0  30C8               	movlw	200
  1046  06D1  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  1047                           
  1048                           ;main.c: 70: printf("PWM %3d%%", duty);
  1049  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1050  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1051  06D8  0846               	movf	main_lcd@duty+1,w
  1052  06D9  00AF               	movwf	?_printf+1
  1053  06DA  0845               	movf	main_lcd@duty,w
  1054  06DB  00AE               	movwf	?_printf
  1055  06DC  3034               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1056  06DD  120A  118A  2025   	fcall	_printf
  1057  06E0  0008               	return
  1058  06E1                     __end_of_main_lcd:	
  1059                           ;main.c: 71: return;
  1060                           
  1061                           
  1062                           	psect	text3
  1063  0025                     __ptext3:	
  1064 ;; *************** function _printf *****************
  1065 ;; Defined at:
  1066 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  f               1    wreg     PTR const unsigned char 
  1069 ;;		 -> STR_4(16), STR_3(17), STR_2(10), STR_1(5), 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  f               1   29[BANK0 ] PTR const unsigned char 
  1072 ;;		 -> STR_4(16), STR_3(17), STR_2(10), STR_1(5), 
  1073 ;;  tmpval          4    0        struct .
  1074 ;;  width           2   30[BANK0 ] int 
  1075 ;;  val             2   27[BANK0 ] unsigned int 
  1076 ;;  len             2   25[BANK0 ] unsigned int 
  1077 ;;  c               1   32[BANK0 ] char 
  1078 ;;  flag            1   24[BANK0 ] unsigned char 
  1079 ;;  prec            1   23[BANK0 ] char 
  1080 ;;  cp              1   22[BANK0 ] PTR const unsigned char 
  1081 ;;		 -> printf@c(1), 
  1082 ;;  ap              1   21[BANK0 ] PTR void [1]
  1083 ;;		 -> ?_printf(2), 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  2   14[BANK0 ] int 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       4       0       0       0
  1094 ;;      Locals:         0      12       0       0       0
  1095 ;;      Temps:          0       3       0       0       0
  1096 ;;      Totals:         0      19       0       0       0
  1097 ;;Total ram usage:       19 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    3
  1100 ;; This function calls:
  1101 ;;		___lwdiv
  1102 ;;		___lwmod
  1103 ;;		___wmul
  1104 ;;		_isdigit
  1105 ;;		_putch
  1106 ;; This function is called by:
  1107 ;;		_main_lcd
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _printf
  1114  0025                     _printf:	
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1118                           ;printf@f stored from wreg
  1119  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0027  00BD               	movwf	printf@f
  1122                           
  1123                           ;doprnt.c: 466: va_list ap;
  1124                           ;doprnt.c: 499: signed char c;
  1125                           ;doprnt.c: 501: int width;
  1126                           ;doprnt.c: 506: signed char prec;
  1127                           ;doprnt.c: 508: unsigned char flag;
  1128                           ;doprnt.c: 523: union {
  1129                           ;doprnt.c: 524: unsigned long vd;
  1130                           ;doprnt.c: 525: double integ;
  1131                           ;doprnt.c: 526: } tmpval;
  1132                           ;doprnt.c: 528: unsigned int val;
  1133                           ;doprnt.c: 529: unsigned len;
  1134                           ;doprnt.c: 530: const char * cp;
  1135                           ;doprnt.c: 533: *ap = __va_start();
  1136  0028  302E               	movlw	(low (?_printf| 0))& (0+255)
  1137  0029  00B2               	movwf	??_printf
  1138  002A  0832               	movf	??_printf,w
  1139  002B  00B5               	movwf	printf@ap
  1140  002C                     l1142:	
  1141                           ;doprnt.c: 536: while(c = *f++) {
  1142                           
  1143  002C  3001               	movlw	1
  1144  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1145  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1146  002F  07BD               	addwf	printf@f,f
  1147  0030  30FF               	movlw	-1
  1148  0031  073D               	addwf	printf@f,w
  1149  0032  0084               	movwf	4
  1150  0033  120A  118A  2600  120A  118A  	fcall	stringdir
  1151  0038  00B2               	movwf	??_printf
  1152  0039  0832               	movf	??_printf,w
  1153  003A  00C0               	movwf	printf@c
  1154  003B  0840               	movf	printf@c,w
  1155  003C  1903               	btfsc	3,2
  1156  003D  0008               	return
  1157                           
  1158                           ;doprnt.c: 538: if(c != '%')
  1159  003E  3025               	movlw	37
  1160  003F  0640               	xorwf	printf@c,w
  1161  0040  1903               	btfsc	3,2
  1162  0041  2849               	goto	l1058
  1163                           
  1164                           ;doprnt.c: 540: {
  1165                           ;doprnt.c: 541: (putch(c) );
  1166  0042  0840               	movf	printf@c,w
  1167  0043  120A  118A  24B5  120A  118A  	fcall	_putch
  1168                           
  1169                           ;doprnt.c: 542: continue;
  1170  0048  282C               	goto	l1142
  1171  0049                     l1058:	
  1172                           
  1173                           ;doprnt.c: 543: }
  1174                           ;doprnt.c: 546: width = 0;
  1175  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1176  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1177  004B  01BE               	clrf	printf@width
  1178  004C  01BF               	clrf	printf@width+1
  1179                           
  1180                           ;doprnt.c: 548: flag = 0;
  1181  004D  01B8               	clrf	printf@flag
  1182                           
  1183                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1184  004E  083D               	movf	printf@f,w
  1185  004F  0084               	movwf	4
  1186  0050  120A  118A  2600  120A  118A  	fcall	stringdir
  1187  0055  120A  118A  2727  120A  118A  	fcall	_isdigit
  1188  005A  1C03               	btfss	3,0
  1189  005B  28E7               	goto	l1092
  1190                           
  1191                           ;doprnt.c: 598: width = 0;
  1192  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1193  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1194  005E  01BE               	clrf	printf@width
  1195  005F  01BF               	clrf	printf@width+1
  1196  0060                     l1064:	
  1197                           ;doprnt.c: 599: do {
  1198                           
  1199                           
  1200                           ;doprnt.c: 600: width *= 10;
  1201  0060  300A               	movlw	10
  1202  0061  00F4               	movwf	___wmul@multiplier
  1203  0062  3000               	movlw	0
  1204  0063  00F5               	movwf	___wmul@multiplier+1
  1205  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0066  083F               	movf	printf@width+1,w
  1208  0067  00F7               	movwf	___wmul@multiplicand+1
  1209  0068  083E               	movf	printf@width,w
  1210  0069  00F6               	movwf	___wmul@multiplicand
  1211  006A  120A  118A  26E1  120A  118A  	fcall	___wmul
  1212  006F  0875               	movf	?___wmul+1,w
  1213  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0072  00BF               	movwf	printf@width+1
  1216  0073  0874               	movf	?___wmul,w
  1217  0074  00BE               	movwf	printf@width
  1218                           
  1219                           ;doprnt.c: 601: width += *f++ - '0';
  1220  0075  083D               	movf	printf@f,w
  1221  0076  0084               	movwf	4
  1222  0077  120A  118A  2600  120A  118A  	fcall	stringdir
  1223  007C  3ED0               	addlw	208
  1224  007D  00B2               	movwf	??_printf
  1225  007E  30FF               	movlw	255
  1226  007F  1803               	skipnc
  1227  0080  3000               	movlw	0
  1228  0081  00B3               	movwf	??_printf+1
  1229  0082  0832               	movf	??_printf,w
  1230  0083  07BE               	addwf	printf@width,f
  1231  0084  1803               	skipnc
  1232  0085  0ABF               	incf	printf@width+1,f
  1233  0086  0833               	movf	??_printf+1,w
  1234  0087  07BF               	addwf	printf@width+1,f
  1235  0088  3001               	movlw	1
  1236  0089  00B2               	movwf	??_printf
  1237  008A  0832               	movf	??_printf,w
  1238  008B  07BD               	addwf	printf@f,f
  1239                           
  1240                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1241  008C  083D               	movf	printf@f,w
  1242  008D  0084               	movwf	4
  1243  008E  120A  118A  2600  120A  118A  	fcall	stringdir
  1244  0093  120A  118A  2727  120A  118A  	fcall	_isdigit
  1245  0098  1C03               	btfss	3,0
  1246  0099  28E7               	goto	l1092
  1247  009A  2860               	goto	l1064
  1248  009B                     l1072:	
  1249                           ;doprnt.c: 750: dostring:
  1250                           
  1251                           ;doprnt.c: 698: case 'i':
  1252                           ;doprnt.c: 699: break;
  1253                           
  1254                           ;doprnt.c: 697: case 'd':
  1255                           
  1256                           ;doprnt.c: 638: goto alldone;
  1257                           
  1258                           ;doprnt.c: 637: case 0:
  1259                           
  1260                           ;doprnt.c: 608: }
  1261                           ;doprnt.c: 635: switch(c = *f++) {
  1262                           
  1263                           
  1264                           ;doprnt.c: 757: if(width > len)
  1265  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1266  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1267  009D  083F               	movf	printf@width+1,w
  1268  009E  023A               	subwf	printf@len+1,w
  1269  009F  1D03               	skipz
  1270  00A0  28A3               	goto	u825
  1271  00A1  083E               	movf	printf@width,w
  1272  00A2  0239               	subwf	printf@len,w
  1273  00A3                     u825:	
  1274  00A3  1803               	skipnc
  1275  00A4  28AC               	goto	l1076
  1276                           
  1277                           ;doprnt.c: 758: width -= len;
  1278  00A5  0839               	movf	printf@len,w
  1279  00A6  02BE               	subwf	printf@width,f
  1280  00A7  083A               	movf	printf@len+1,w
  1281  00A8  1C03               	skipc
  1282  00A9  03BF               	decf	printf@width+1,f
  1283  00AA  02BF               	subwf	printf@width+1,f
  1284  00AB  28AE               	goto	l1080
  1285  00AC                     l1076:	
  1286                           
  1287                           ;doprnt.c: 759: else
  1288                           ;doprnt.c: 760: width = 0;
  1289  00AC  01BE               	clrf	printf@width
  1290  00AD  01BF               	clrf	printf@width+1
  1291  00AE                     l1080:	
  1292                           ;doprnt.c: 764: while(width--)
  1293                           
  1294  00AE  30FF               	movlw	255
  1295  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1296  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1297  00B1  07BE               	addwf	printf@width,f
  1298  00B2  1803               	skipnc
  1299  00B3  0ABF               	incf	printf@width+1,f
  1300  00B4  30FF               	movlw	255
  1301  00B5  07BF               	addwf	printf@width+1,f
  1302  00B6  0A3E               	incf	printf@width,w
  1303  00B7  1903               	btfsc	3,2
  1304  00B8  0A3F               	incf	printf@width+1,w
  1305  00B9  1903               	btfsc	3,2
  1306  00BA  28D1               	goto	l1086
  1307                           
  1308                           ;doprnt.c: 765: (putch(' ') );
  1309  00BB  3020               	movlw	32
  1310  00BC  120A  118A  24B5  120A  118A  	fcall	_putch
  1311  00C1  28AE               	goto	l1080
  1312  00C2                     l1082:	
  1313                           ;doprnt.c: 767: while(len--)
  1314                           
  1315                           
  1316                           ;doprnt.c: 768: (putch(*cp++) );
  1317  00C2  0836               	movf	printf@cp,w
  1318  00C3  0084               	movwf	4
  1319  00C4  1383               	bcf	3,7	;select IRP bank0
  1320  00C5  0800               	movf	0,w
  1321  00C6  120A  118A  24B5  120A  118A  	fcall	_putch
  1322  00CB  3001               	movlw	1
  1323  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1324  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1325  00CE  00B2               	movwf	??_printf
  1326  00CF  0832               	movf	??_printf,w
  1327  00D0  07B6               	addwf	printf@cp,f
  1328  00D1                     l1086:	
  1329  00D1  3001               	movlw	1
  1330  00D2  02B9               	subwf	printf@len,f
  1331  00D3  3000               	movlw	0
  1332  00D4  1C03               	skipc
  1333  00D5  03BA               	decf	printf@len+1,f
  1334  00D6  02BA               	subwf	printf@len+1,f
  1335  00D7  0A39               	incf	printf@len,w
  1336  00D8  1D03               	skipz
  1337  00D9  28C2               	goto	l1082
  1338  00DA  0A3A               	incf	printf@len+1,w
  1339  00DB  1903               	btfsc	3,2
  1340  00DC  282C               	goto	l1142
  1341  00DD  28C2               	goto	l1082
  1342  00DE                     l1088:	
  1343                           ;doprnt.c: 802: default:
  1344                           
  1345                           ;doprnt.c: 774: continue;
  1346                           
  1347                           
  1348                           ;doprnt.c: 805: cp = (char *)&c;
  1349  00DE  3040               	movlw	(low (printf@c| 0))& (0+255)
  1350  00DF  00B2               	movwf	??_printf
  1351  00E0  0832               	movf	??_printf,w
  1352  00E1  00B6               	movwf	printf@cp
  1353                           
  1354                           ;doprnt.c: 806: len = 1;
  1355  00E2  3001               	movlw	1
  1356  00E3  00B9               	movwf	printf@len
  1357  00E4  3000               	movlw	0
  1358  00E5  00BA               	movwf	printf@len+1
  1359                           
  1360                           ;doprnt.c: 807: goto dostring;
  1361  00E6  289B               	goto	l1072
  1362  00E7                     l1092:	
  1363                           ;doprnt.c: 822: }
  1364                           
  1365  00E7  3001               	movlw	1
  1366  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1367  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1368  00EA  07BD               	addwf	printf@f,f
  1369  00EB  30FF               	movlw	-1
  1370  00EC  073D               	addwf	printf@f,w
  1371  00ED  0084               	movwf	4
  1372  00EE  120A  118A  2600  120A  118A  	fcall	stringdir
  1373  00F3  00C0               	movwf	printf@c
  1374                           
  1375                           ; Switch size 1, requested type "space"
  1376                           ; Number of cases is 3, Range of values is 0 to 105
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte           10     6 (average)
  1380                           ; jumptable            260     6 (fixed)
  1381                           ;	Chosen strategy is simple_byte
  1382  00F4  3A00               	xorlw	0	; case 0
  1383  00F5  1903               	skipnz
  1384  00F6  29D5               	goto	l137
  1385  00F7  3A64               	xorlw	100	; case 100
  1386  00F8  1903               	skipnz
  1387  00F9  28FE               	goto	l1094
  1388  00FA  3A0D               	xorlw	13	; case 105
  1389  00FB  1903               	skipnz
  1390  00FC  28FE               	goto	l1094
  1391  00FD  28DE               	goto	l1088
  1392  00FE                     l1094:	
  1393                           
  1394                           ;doprnt.c: 1253: {
  1395                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1396  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1397  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0100  0835               	movf	printf@ap,w
  1399  0101  0084               	movwf	4
  1400  0102  1383               	bcf	3,7	;select IRP bank0
  1401  0103  0800               	movf	0,w
  1402  0104  00BB               	movwf	printf@val
  1403  0105  0A84               	incf	4,f
  1404  0106  0800               	movf	0,w
  1405  0107  00BC               	movwf	printf@val+1
  1406  0108  3002               	movlw	2
  1407  0109  00B2               	movwf	??_printf
  1408  010A  0832               	movf	??_printf,w
  1409  010B  07B5               	addwf	printf@ap,f
  1410                           
  1411                           ;doprnt.c: 1261: if((int)val < 0) {
  1412  010C  1FBC               	btfss	printf@val+1,7
  1413  010D  2917               	goto	l1104
  1414                           
  1415                           ;doprnt.c: 1262: flag |= 0x03;
  1416  010E  3003               	movlw	3
  1417  010F  00B2               	movwf	??_printf
  1418  0110  0832               	movf	??_printf,w
  1419  0111  04B8               	iorwf	printf@flag,f
  1420                           
  1421                           ;doprnt.c: 1263: val = -val;
  1422  0112  09BB               	comf	printf@val,f
  1423  0113  09BC               	comf	printf@val+1,f
  1424  0114  0ABB               	incf	printf@val,f
  1425  0115  1903               	skipnz
  1426  0116  0ABC               	incf	printf@val+1,f
  1427  0117                     l1104:	
  1428                           
  1429                           ;doprnt.c: 1264: }
  1430                           ;doprnt.c: 1266: }
  1431                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1432  0117  01C0               	clrf	printf@c
  1433  0118  0AC0               	incf	printf@c,f
  1434  0119  3005               	movlw	5
  1435  011A  0640               	xorwf	printf@c,w
  1436  011B  1903               	btfsc	3,2
  1437  011C  293E               	goto	l1116
  1438  011D                     l1110:	
  1439                           
  1440                           ;doprnt.c: 1306: if(val < dpowers[c])
  1441  011D  0840               	movf	printf@c,w
  1442  011E  00B2               	movwf	??_printf
  1443  011F  0732               	addwf	??_printf,w
  1444  0120  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1445  0121  0084               	movwf	4
  1446  0122  120A  118A  2600  120A  118A  	fcall	stringdir
  1447  0127  00B3               	movwf	??_printf+1
  1448  0128  120A  118A  2600  120A  118A  	fcall	stringdir
  1449  012D  00B4               	movwf	??_printf+2
  1450  012E  0834               	movf	??_printf+2,w
  1451  012F  023C               	subwf	printf@val+1,w
  1452  0130  1D03               	skipz
  1453  0131  2934               	goto	u875
  1454  0132  0833               	movf	??_printf+1,w
  1455  0133  023B               	subwf	printf@val,w
  1456  0134                     u875:	
  1457  0134  1C03               	btfss	3,0
  1458  0135  293E               	goto	l1116
  1459                           
  1460                           ;doprnt.c: 1307: break;
  1461  0136  3001               	movlw	1
  1462  0137  00B2               	movwf	??_printf
  1463  0138  0832               	movf	??_printf,w
  1464  0139  07C0               	addwf	printf@c,f
  1465  013A  3005               	movlw	5
  1466  013B  0640               	xorwf	printf@c,w
  1467  013C  1D03               	btfss	3,2
  1468  013D  291D               	goto	l1110
  1469  013E                     l1116:	
  1470                           
  1471                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1472  013E  083E               	movf	printf@width,w
  1473  013F  043F               	iorwf	printf@width+1,w
  1474  0140  1903               	btfsc	3,2
  1475  0141  294C               	goto	l126
  1476  0142  0838               	movf	printf@flag,w
  1477  0143  3903               	andlw	3
  1478  0144  1903               	btfsc	3,2
  1479  0145  294C               	goto	l126
  1480                           
  1481                           ;doprnt.c: 1346: width--;
  1482  0146  30FF               	movlw	255
  1483  0147  07BE               	addwf	printf@width,f
  1484  0148  1803               	skipnc
  1485  0149  0ABF               	incf	printf@width+1,f
  1486  014A  30FF               	movlw	255
  1487  014B  07BF               	addwf	printf@width+1,f
  1488  014C                     l126:	
  1489                           
  1490                           ;doprnt.c: 1381: if(width > c)
  1491  014C  0840               	movf	printf@c,w
  1492  014D  00B2               	movwf	??_printf
  1493  014E  01B3               	clrf	??_printf+1
  1494  014F  1BB2               	btfsc	??_printf,7
  1495  0150  03B3               	decf	??_printf+1,f
  1496  0151  0833               	movf	??_printf+1,w
  1497  0152  3A80               	xorlw	128
  1498  0153  00B4               	movwf	??_printf+2
  1499  0154  083F               	movf	printf@width+1,w
  1500  0155  3A80               	xorlw	128
  1501  0156  0234               	subwf	??_printf+2,w
  1502  0157  1D03               	skipz
  1503  0158  295B               	goto	u915
  1504  0159  083E               	movf	printf@width,w
  1505  015A  0232               	subwf	??_printf,w
  1506  015B                     u915:	
  1507  015B  1803               	skipnc
  1508  015C  296B               	goto	l1124
  1509                           
  1510                           ;doprnt.c: 1382: width -= c;
  1511  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1512  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1513  015F  0840               	movf	printf@c,w
  1514  0160  00B2               	movwf	??_printf
  1515  0161  01B3               	clrf	??_printf+1
  1516  0162  1BB2               	btfsc	??_printf,7
  1517  0163  03B3               	decf	??_printf+1,f
  1518  0164  0832               	movf	??_printf,w
  1519  0165  02BE               	subwf	printf@width,f
  1520  0166  0833               	movf	??_printf+1,w
  1521  0167  1C03               	skipc
  1522  0168  03BF               	decf	printf@width+1,f
  1523  0169  02BF               	subwf	printf@width+1,f
  1524  016A  296F               	goto	l1126
  1525  016B                     l1124:	
  1526                           
  1527                           ;doprnt.c: 1383: else
  1528                           ;doprnt.c: 1384: width = 0;
  1529  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1530  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1531  016D  01BE               	clrf	printf@width
  1532  016E  01BF               	clrf	printf@width+1
  1533  016F                     l1126:	
  1534                           
  1535                           ;doprnt.c: 1422: {
  1536                           ;doprnt.c: 1424: if(width
  1537                           ;doprnt.c: 1428: )
  1538  016F  083E               	movf	printf@width,w
  1539  0170  043F               	iorwf	printf@width+1,w
  1540  0171  1903               	btfsc	3,2
  1541  0172  2985               	goto	l1132
  1542  0173                     l1128:	
  1543                           ;doprnt.c: 1429: do
  1544                           
  1545                           
  1546                           ;doprnt.c: 1430: (putch(' ') );
  1547  0173  3020               	movlw	32
  1548  0174  120A  118A  24B5  120A  118A  	fcall	_putch
  1549                           
  1550                           ;doprnt.c: 1431: while(--width);
  1551  0179  30FF               	movlw	255
  1552  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1553  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1554  017C  07BE               	addwf	printf@width,f
  1555  017D  1803               	skipnc
  1556  017E  0ABF               	incf	printf@width+1,f
  1557  017F  30FF               	movlw	255
  1558  0180  07BF               	addwf	printf@width+1,f
  1559  0181  083E               	movf	printf@width,w
  1560  0182  043F               	iorwf	printf@width+1,w
  1561  0183  1D03               	btfss	3,2
  1562  0184  2973               	goto	l1128
  1563  0185                     l1132:	
  1564                           
  1565                           ;doprnt.c: 1438: if(flag & 0x03)
  1566  0185  0838               	movf	printf@flag,w
  1567  0186  3903               	andlw	3
  1568  0187  1903               	btfsc	3,2
  1569  0188  298F               	goto	l1136
  1570                           
  1571                           ;doprnt.c: 1439: (putch('-') );
  1572  0189  302D               	movlw	45
  1573  018A  120A  118A  24B5  120A  118A  	fcall	_putch
  1574  018F                     l1136:	
  1575                           
  1576                           ;doprnt.c: 1469: }
  1577                           ;doprnt.c: 1472: prec = c;
  1578  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0191  0840               	movf	printf@c,w
  1581  0192  00B2               	movwf	??_printf
  1582  0193  0832               	movf	??_printf,w
  1583  0194  00B7               	movwf	printf@prec
  1584  0195                     l1140:	
  1585                           ;doprnt.c: 1474: while(prec--) {
  1586                           
  1587  0195  30FF               	movlw	255
  1588  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0198  00B2               	movwf	??_printf
  1591  0199  0832               	movf	??_printf,w
  1592  019A  07B7               	addwf	printf@prec,f
  1593  019B  0A37               	incf	printf@prec,w
  1594  019C  1903               	btfsc	3,2
  1595  019D  282C               	goto	l1142
  1596                           
  1597                           ;doprnt.c: 1478: {
  1598                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1599  019E  300A               	movlw	10
  1600  019F  00A8               	movwf	___lwmod@divisor
  1601  01A0  3000               	movlw	0
  1602  01A1  00A9               	movwf	___lwmod@divisor+1
  1603  01A2  0837               	movf	printf@prec,w
  1604  01A3  00B2               	movwf	??_printf
  1605  01A4  0732               	addwf	??_printf,w
  1606  01A5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1607  01A6  0084               	movwf	4
  1608  01A7  120A  118A  2600  120A  118A  	fcall	stringdir
  1609  01AC  00A0               	movwf	___lwdiv@divisor
  1610  01AD  120A  118A  2600  120A  118A  	fcall	stringdir
  1611  01B2  00A1               	movwf	___lwdiv@divisor+1
  1612  01B3  083C               	movf	printf@val+1,w
  1613  01B4  00A3               	movwf	___lwdiv@dividend+1
  1614  01B5  083B               	movf	printf@val,w
  1615  01B6  00A2               	movwf	___lwdiv@dividend
  1616  01B7  120A  118A  2648  120A  118A  	fcall	___lwdiv
  1617  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1618  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1619  01BE  0821               	movf	?___lwdiv+1,w
  1620  01BF  00AB               	movwf	___lwmod@dividend+1
  1621  01C0  0820               	movf	?___lwdiv,w
  1622  01C1  00AA               	movwf	___lwmod@dividend
  1623  01C2  120A  118A  2686  120A  118A  	fcall	___lwmod
  1624  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1625  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1626  01C9  0828               	movf	?___lwmod,w
  1627  01CA  3E30               	addlw	48
  1628  01CB  00B3               	movwf	??_printf+1
  1629  01CC  0833               	movf	??_printf+1,w
  1630  01CD  00C0               	movwf	printf@c
  1631                           
  1632                           ;doprnt.c: 1523: }
  1633                           ;doprnt.c: 1524: (putch(c) );
  1634  01CE  0840               	movf	printf@c,w
  1635  01CF  120A  118A  24B5  120A  118A  	fcall	_putch
  1636  01D4  2995               	goto	l1140
  1637  01D5                     l137:	
  1638                           ;doprnt.c: 1540: return 0;
  1639                           ;	Return value of _printf is never used
  1640                           
  1641                           ;doprnt.c: 1525: }
  1642                           ;doprnt.c: 1533: }
  1643                           ;doprnt.c: 1535: alldone:
  1644                           
  1645  01D5  0008               	return
  1646  01D6                     __end_of_printf:	
  1647                           
  1648                           	psect	text4
  1649  04B5                     __ptext4:	
  1650 ;; *************** function _putch *****************
  1651 ;; Defined at:
  1652 ;;		line 39 in file "main.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  msg             1    wreg     unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  msg             1   12[BANK0 ] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1666 ;;      Params:         0       0       0       0       0
  1667 ;;      Locals:         0       1       0       0       0
  1668 ;;      Temps:          0       4       0       0       0
  1669 ;;      Totals:         0       5       0       0       0
  1670 ;;Total ram usage:        5 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    2
  1673 ;; This function calls:
  1674 ;;		___lldiv
  1675 ;; This function is called by:
  1676 ;;		_printf
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _putch
  1682  04B5                     _putch:	
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1686                           ;putch@msg stored from wreg
  1687  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1688  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1689  04B7  00AC               	movwf	putch@msg
  1690                           
  1691                           ;main.c: 40: LCD.RS = 1;
  1692  04B8  1409               	bsf	9,0
  1693                           
  1694                           ;main.c: 41: PORTD = msg;
  1695  04B9  082C               	movf	putch@msg,w
  1696  04BA  0088               	movwf	8	;volatile
  1697                           
  1698                           ;main.c: 42: LCD.EN = 1; _delay(IFOSC/1000000);
  1699  04BB  1489               	bsf	9,1
  1700  04BC  3000               	movlw	0
  1701  04BD  00A3               	movwf	___lldiv@divisor+3
  1702  04BE  300F               	movlw	15
  1703  04BF  00A2               	movwf	___lldiv@divisor+2
  1704  04C0  3042               	movlw	66
  1705  04C1  00A1               	movwf	___lldiv@divisor+1
  1706  04C2  3040               	movlw	64
  1707  04C3  00A0               	movwf	___lldiv@divisor
  1708  04C4  300B               	movlw	low (_IFOSC-__stringbase)
  1709  04C5  0084               	movwf	4
  1710  04C6  120A  118A  2600  120A  118A  	fcall	stringdir
  1711  04CB  00A4               	movwf	___lldiv@dividend
  1712  04CC  120A  118A  2600  120A  118A  	fcall	stringdir
  1713  04D1  00A5               	movwf	___lldiv@dividend+1
  1714  04D2  120A  118A  2600  120A  118A  	fcall	stringdir
  1715  04D7  00A6               	movwf	___lldiv@dividend+2
  1716  04D8  120A  118A  2600  120A  118A  	fcall	stringdir
  1717  04DD  00A7               	movwf	___lldiv@dividend+3
  1718  04DE  120A  118A  258B  120A  118A  	fcall	___lldiv
  1719  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1720  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1721  04E5  0820               	movf	?___lldiv,w
  1722  04E6  00A8               	movwf	??_putch
  1723  04E7  0821               	movf	?___lldiv+1,w
  1724  04E8  00A9               	movwf	??_putch+1
  1725  04E9  0822               	movf	?___lldiv+2,w
  1726  04EA  00AA               	movwf	??_putch+2
  1727  04EB  0823               	movf	?___lldiv+3,w
  1728  04EC  00AB               	movwf	??_putch+3
  1729                           
  1730                           ;main.c: 43: LCD.EN = 0; _delay(IFOSC/20000);
  1731  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1732  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1733  04EF  1089               	bcf	9,1
  1734  04F0  3000               	movlw	0
  1735  04F1  00A3               	movwf	___lldiv@divisor+3
  1736  04F2  3000               	movlw	0
  1737  04F3  00A2               	movwf	___lldiv@divisor+2
  1738  04F4  304E               	movlw	78
  1739  04F5  00A1               	movwf	___lldiv@divisor+1
  1740  04F6  3020               	movlw	32
  1741  04F7  00A0               	movwf	___lldiv@divisor
  1742  04F8  300B               	movlw	low (_IFOSC-__stringbase)
  1743  04F9  0084               	movwf	4
  1744  04FA  120A  118A  2600  120A  118A  	fcall	stringdir
  1745  04FF  00A4               	movwf	___lldiv@dividend
  1746  0500  120A  118A  2600  120A  118A  	fcall	stringdir
  1747  0505  00A5               	movwf	___lldiv@dividend+1
  1748  0506  120A  118A  2600  120A  118A  	fcall	stringdir
  1749  050B  00A6               	movwf	___lldiv@dividend+2
  1750  050C  120A  118A  2600  120A  118A  	fcall	stringdir
  1751  0511  00A7               	movwf	___lldiv@dividend+3
  1752  0512  120A  118A  258B   	fcall	___lldiv
  1753  0515  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0516  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0517  0820               	movf	?___lldiv,w
  1756  0518  00A8               	movwf	??_putch
  1757  0519  0821               	movf	?___lldiv+1,w
  1758  051A  00A9               	movwf	??_putch+1
  1759  051B  0822               	movf	?___lldiv+2,w
  1760  051C  00AA               	movwf	??_putch+2
  1761  051D  0823               	movf	?___lldiv+3,w
  1762  051E  00AB               	movwf	??_putch+3
  1763  051F  0008               	return
  1764  0520                     __end_of_putch:	
  1765                           ;main.c: 44: return;
  1766                           
  1767                           
  1768                           	psect	text5
  1769  0727                     __ptext5:	
  1770 ;; *************** function _isdigit *****************
  1771 ;; Defined at:
  1772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  c               1    wreg     unsigned char 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  c               1    5[COMMON] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         2       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0
  1789 ;;      Totals:         2       0       0       0       0
  1790 ;;Total ram usage:        2 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_printf
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _isdigit
  1802  0727                     _isdigit:	
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1806                           ;isdigit@c stored from wreg
  1807  0727  00F5               	movwf	isdigit@c
  1808  0728  01F4               	clrf	_isdigit$324
  1809  0729  303A               	movlw	58
  1810  072A  0275               	subwf	isdigit@c,w
  1811  072B  1803               	skipnc
  1812  072C  2F33               	goto	l972
  1813  072D  3030               	movlw	48
  1814  072E  0275               	subwf	isdigit@c,w
  1815  072F  1C03               	skipc
  1816  0730  2F33               	goto	l972
  1817  0731  01F4               	clrf	_isdigit$324
  1818  0732  0AF4               	incf	_isdigit$324,f
  1819  0733                     l972:	
  1820  0733  0C74               	rrf	_isdigit$324,w
  1821  0734  0008               	return
  1822  0735                     __end_of_isdigit:	
  1823                           
  1824                           	psect	text6
  1825  06E1                     __ptext6:	
  1826 ;; *************** function ___wmul *****************
  1827 ;; Defined at:
  1828 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  multiplier      2    4[COMMON] unsigned int 
  1831 ;;  multiplicand    2    6[COMMON] unsigned int 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  product         2    8[COMMON] unsigned int 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  2    4[COMMON] unsigned int 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         4       0       0       0       0
  1844 ;;      Locals:         2       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0
  1846 ;;      Totals:         6       0       0       0       0
  1847 ;;Total ram usage:        6 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_rps_timer1
  1854 ;;		_main
  1855 ;;		_printf
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function ___wmul
  1861  06E1                     ___wmul:	
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1865  06E1  01F8               	clrf	___wmul@product
  1866  06E2  01F9               	clrf	___wmul@product+1
  1867  06E3                     l978:	
  1868  06E3  1C74               	btfss	___wmul@multiplier,0
  1869  06E4  2EEB               	goto	l221
  1870  06E5  0876               	movf	___wmul@multiplicand,w
  1871  06E6  07F8               	addwf	___wmul@product,f
  1872  06E7  1803               	skipnc
  1873  06E8  0AF9               	incf	___wmul@product+1,f
  1874  06E9  0877               	movf	___wmul@multiplicand+1,w
  1875  06EA  07F9               	addwf	___wmul@product+1,f
  1876  06EB                     l221:	
  1877  06EB  3001               	movlw	1
  1878  06EC                     u635:	
  1879  06EC  1003               	clrc
  1880  06ED  0DF6               	rlf	___wmul@multiplicand,f
  1881  06EE  0DF7               	rlf	___wmul@multiplicand+1,f
  1882  06EF  3EFF               	addlw	-1
  1883  06F0  1D03               	skipz
  1884  06F1  2EEC               	goto	u635
  1885  06F2  3001               	movlw	1
  1886  06F3                     u645:	
  1887  06F3  1003               	clrc
  1888  06F4  0CF5               	rrf	___wmul@multiplier+1,f
  1889  06F5  0CF4               	rrf	___wmul@multiplier,f
  1890  06F6  3EFF               	addlw	-1
  1891  06F7  1D03               	skipz
  1892  06F8  2EF3               	goto	u645
  1893  06F9  0874               	movf	___wmul@multiplier,w
  1894  06FA  0475               	iorwf	___wmul@multiplier+1,w
  1895  06FB  1D03               	btfss	3,2
  1896  06FC  2EE3               	goto	l978
  1897  06FD  0879               	movf	___wmul@product+1,w
  1898  06FE  00F5               	movwf	?___wmul+1
  1899  06FF  0878               	movf	___wmul@product,w
  1900  0700  00F4               	movwf	?___wmul
  1901  0701  0008               	return
  1902  0702                     __end_of___wmul:	
  1903                           
  1904                           	psect	text7
  1905  0686                     __ptext7:	
  1906 ;; *************** function ___lwmod *****************
  1907 ;; Defined at:
  1908 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  divisor         2    8[BANK0 ] unsigned int 
  1911 ;;  dividend        2   10[BANK0 ] unsigned int 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  counter         1   13[BANK0 ] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  2    8[BANK0 ] unsigned int 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         0       4       0       0       0
  1924 ;;      Locals:         0       1       0       0       0
  1925 ;;      Temps:          0       1       0       0       0
  1926 ;;      Totals:         0       6       0       0       0
  1927 ;;Total ram usage:        6 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_printf
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function ___lwmod
  1939  0686                     ___lwmod:	
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1943  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0688  0828               	movf	___lwmod@divisor,w
  1946  0689  0429               	iorwf	___lwmod@divisor+1,w
  1947  068A  1903               	btfsc	3,2
  1948  068B  2EB5               	goto	l1034
  1949  068C  01AD               	clrf	___lwmod@counter
  1950  068D  0AAD               	incf	___lwmod@counter,f
  1951  068E                     l1024:	
  1952  068E  1BA9               	btfsc	___lwmod@divisor+1,7
  1953  068F  2E9C               	goto	l1026
  1954  0690  3001               	movlw	1
  1955  0691                     u745:	
  1956  0691  1003               	clrc
  1957  0692  0DA8               	rlf	___lwmod@divisor,f
  1958  0693  0DA9               	rlf	___lwmod@divisor+1,f
  1959  0694  3EFF               	addlw	-1
  1960  0695  1D03               	skipz
  1961  0696  2E91               	goto	u745
  1962  0697  3001               	movlw	1
  1963  0698  00AC               	movwf	??___lwmod
  1964  0699  082C               	movf	??___lwmod,w
  1965  069A  07AD               	addwf	___lwmod@counter,f
  1966  069B  2E8E               	goto	l1024
  1967  069C                     l1026:	
  1968  069C  0829               	movf	___lwmod@divisor+1,w
  1969  069D  022B               	subwf	___lwmod@dividend+1,w
  1970  069E  1D03               	skipz
  1971  069F  2EA2               	goto	u765
  1972  06A0  0828               	movf	___lwmod@divisor,w
  1973  06A1  022A               	subwf	___lwmod@dividend,w
  1974  06A2                     u765:	
  1975  06A2  1C03               	skipc
  1976  06A3  2EAA               	goto	l1030
  1977  06A4  0828               	movf	___lwmod@divisor,w
  1978  06A5  02AA               	subwf	___lwmod@dividend,f
  1979  06A6  0829               	movf	___lwmod@divisor+1,w
  1980  06A7  1C03               	skipc
  1981  06A8  03AB               	decf	___lwmod@dividend+1,f
  1982  06A9  02AB               	subwf	___lwmod@dividend+1,f
  1983  06AA                     l1030:	
  1984  06AA  3001               	movlw	1
  1985  06AB                     u775:	
  1986  06AB  1003               	clrc
  1987  06AC  0CA9               	rrf	___lwmod@divisor+1,f
  1988  06AD  0CA8               	rrf	___lwmod@divisor,f
  1989  06AE  3EFF               	addlw	-1
  1990  06AF  1D03               	skipz
  1991  06B0  2EAB               	goto	u775
  1992  06B1  3001               	movlw	1
  1993  06B2  02AD               	subwf	___lwmod@counter,f
  1994  06B3  1D03               	btfss	3,2
  1995  06B4  2E9C               	goto	l1026
  1996  06B5                     l1034:	
  1997  06B5  082B               	movf	___lwmod@dividend+1,w
  1998  06B6  00A9               	movwf	?___lwmod+1
  1999  06B7  082A               	movf	___lwmod@dividend,w
  2000  06B8  00A8               	movwf	?___lwmod
  2001  06B9  0008               	return
  2002  06BA                     __end_of___lwmod:	
  2003                           
  2004                           	psect	text8
  2005  0648                     __ptext8:	
  2006 ;; *************** function ___lwdiv *****************
  2007 ;; Defined at:
  2008 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  divisor         2    0[BANK0 ] unsigned int 
  2011 ;;  dividend        2    2[BANK0 ] unsigned int 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  quotient        2    5[BANK0 ] unsigned int 
  2014 ;;  counter         1    7[BANK0 ] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2    0[BANK0 ] unsigned int 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         0       4       0       0       0
  2025 ;;      Locals:         0       3       0       0       0
  2026 ;;      Temps:          0       1       0       0       0
  2027 ;;      Totals:         0       8       0       0       0
  2028 ;;Total ram usage:        8 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_rps_timer1
  2035 ;;		_main
  2036 ;;		_printf
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function ___lwdiv
  2042  0648                     ___lwdiv:	
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2046  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0649  1303               	bcf	3,6	;RP1=0, select bank0
  2048  064A  01A5               	clrf	___lwdiv@quotient
  2049  064B  01A6               	clrf	___lwdiv@quotient+1
  2050  064C  0820               	movf	___lwdiv@divisor,w
  2051  064D  0421               	iorwf	___lwdiv@divisor+1,w
  2052  064E  1903               	btfsc	3,2
  2053  064F  2E81               	goto	l1012
  2054  0650  01A7               	clrf	___lwdiv@counter
  2055  0651  0AA7               	incf	___lwdiv@counter,f
  2056  0652                     l1000:	
  2057  0652  1BA1               	btfsc	___lwdiv@divisor+1,7
  2058  0653  2E60               	goto	l1002
  2059  0654  3001               	movlw	1
  2060  0655                     u675:	
  2061  0655  1003               	clrc
  2062  0656  0DA0               	rlf	___lwdiv@divisor,f
  2063  0657  0DA1               	rlf	___lwdiv@divisor+1,f
  2064  0658  3EFF               	addlw	-1
  2065  0659  1D03               	skipz
  2066  065A  2E55               	goto	u675
  2067  065B  3001               	movlw	1
  2068  065C  00A4               	movwf	??___lwdiv
  2069  065D  0824               	movf	??___lwdiv,w
  2070  065E  07A7               	addwf	___lwdiv@counter,f
  2071  065F  2E52               	goto	l1000
  2072  0660                     l1002:	
  2073  0660  3001               	movlw	1
  2074  0661                     u695:	
  2075  0661  1003               	clrc
  2076  0662  0DA5               	rlf	___lwdiv@quotient,f
  2077  0663  0DA6               	rlf	___lwdiv@quotient+1,f
  2078  0664  3EFF               	addlw	-1
  2079  0665  1D03               	skipz
  2080  0666  2E61               	goto	u695
  2081  0667  0821               	movf	___lwdiv@divisor+1,w
  2082  0668  0223               	subwf	___lwdiv@dividend+1,w
  2083  0669  1D03               	skipz
  2084  066A  2E6D               	goto	u705
  2085  066B  0820               	movf	___lwdiv@divisor,w
  2086  066C  0222               	subwf	___lwdiv@dividend,w
  2087  066D                     u705:	
  2088  066D  1C03               	skipc
  2089  066E  2E76               	goto	l1008
  2090  066F  0820               	movf	___lwdiv@divisor,w
  2091  0670  02A2               	subwf	___lwdiv@dividend,f
  2092  0671  0821               	movf	___lwdiv@divisor+1,w
  2093  0672  1C03               	skipc
  2094  0673  03A3               	decf	___lwdiv@dividend+1,f
  2095  0674  02A3               	subwf	___lwdiv@dividend+1,f
  2096  0675  1425               	bsf	___lwdiv@quotient,0
  2097  0676                     l1008:	
  2098  0676  3001               	movlw	1
  2099  0677                     u715:	
  2100  0677  1003               	clrc
  2101  0678  0CA1               	rrf	___lwdiv@divisor+1,f
  2102  0679  0CA0               	rrf	___lwdiv@divisor,f
  2103  067A  3EFF               	addlw	-1
  2104  067B  1D03               	skipz
  2105  067C  2E77               	goto	u715
  2106  067D  3001               	movlw	1
  2107  067E  02A7               	subwf	___lwdiv@counter,f
  2108  067F  1D03               	btfss	3,2
  2109  0680  2E60               	goto	l1002
  2110  0681                     l1012:	
  2111  0681  0826               	movf	___lwdiv@quotient+1,w
  2112  0682  00A1               	movwf	?___lwdiv+1
  2113  0683  0825               	movf	___lwdiv@quotient,w
  2114  0684  00A0               	movwf	?___lwdiv
  2115  0685  0008               	return
  2116  0686                     __end_of___lwdiv:	
  2117                           
  2118                           	psect	text9
  2119  01D6                     __ptext9:	
  2120 ;; *************** function _init_lcd *****************
  2121 ;; Defined at:
  2122 ;;		line 55 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0
  2138 ;;      Temps:          0       4       0       0       0
  2139 ;;      Totals:         0       4       0       0       0
  2140 ;;Total ram usage:        4 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    3
  2143 ;; This function calls:
  2144 ;;		___lldiv
  2145 ;;		_prog_lcd
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _init_lcd
  2153  01D6                     _init_lcd:	
  2154                           
  2155                           ;main.c: 56: prog_lcd(0x30); _delay(IFOSC/200);
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _init_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2159  01D6  3030               	movlw	48
  2160  01D7  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  2161  01DC  3000               	movlw	0
  2162  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2163  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2164  01DF  00A3               	movwf	___lldiv@divisor+3
  2165  01E0  3000               	movlw	0
  2166  01E1  00A2               	movwf	___lldiv@divisor+2
  2167  01E2  3000               	movlw	0
  2168  01E3  00A1               	movwf	___lldiv@divisor+1
  2169  01E4  30C8               	movlw	200
  2170  01E5  00A0               	movwf	___lldiv@divisor
  2171  01E6  300B               	movlw	low (_IFOSC-__stringbase)
  2172  01E7  0084               	movwf	4
  2173  01E8  120A  118A  2600  120A  118A  	fcall	stringdir
  2174  01ED  00A4               	movwf	___lldiv@dividend
  2175  01EE  120A  118A  2600  120A  118A  	fcall	stringdir
  2176  01F3  00A5               	movwf	___lldiv@dividend+1
  2177  01F4  120A  118A  2600  120A  118A  	fcall	stringdir
  2178  01F9  00A6               	movwf	___lldiv@dividend+2
  2179  01FA  120A  118A  2600  120A  118A  	fcall	stringdir
  2180  01FF  00A7               	movwf	___lldiv@dividend+3
  2181  0200  120A  118A  258B  120A  118A  	fcall	___lldiv
  2182  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0207  0820               	movf	?___lldiv,w
  2185  0208  00AD               	movwf	??_init_lcd
  2186  0209  0821               	movf	?___lldiv+1,w
  2187  020A  00AE               	movwf	??_init_lcd+1
  2188  020B  0822               	movf	?___lldiv+2,w
  2189  020C  00AF               	movwf	??_init_lcd+2
  2190  020D  0823               	movf	?___lldiv+3,w
  2191  020E  00B0               	movwf	??_init_lcd+3
  2192                           
  2193                           ;main.c: 57: prog_lcd(0x30); _delay(IFOSC/10000);
  2194  020F  3030               	movlw	48
  2195  0210  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  2196  0215  3000               	movlw	0
  2197  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0218  00A3               	movwf	___lldiv@divisor+3
  2200  0219  3000               	movlw	0
  2201  021A  00A2               	movwf	___lldiv@divisor+2
  2202  021B  3027               	movlw	39
  2203  021C  00A1               	movwf	___lldiv@divisor+1
  2204  021D  3010               	movlw	16
  2205  021E  00A0               	movwf	___lldiv@divisor
  2206  021F  300B               	movlw	low (_IFOSC-__stringbase)
  2207  0220  0084               	movwf	4
  2208  0221  120A  118A  2600  120A  118A  	fcall	stringdir
  2209  0226  00A4               	movwf	___lldiv@dividend
  2210  0227  120A  118A  2600  120A  118A  	fcall	stringdir
  2211  022C  00A5               	movwf	___lldiv@dividend+1
  2212  022D  120A  118A  2600  120A  118A  	fcall	stringdir
  2213  0232  00A6               	movwf	___lldiv@dividend+2
  2214  0233  120A  118A  2600  120A  118A  	fcall	stringdir
  2215  0238  00A7               	movwf	___lldiv@dividend+3
  2216  0239  120A  118A  258B  120A  118A  	fcall	___lldiv
  2217  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2218  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0240  0820               	movf	?___lldiv,w
  2220  0241  00AD               	movwf	??_init_lcd
  2221  0242  0821               	movf	?___lldiv+1,w
  2222  0243  00AE               	movwf	??_init_lcd+1
  2223  0244  0822               	movf	?___lldiv+2,w
  2224  0245  00AF               	movwf	??_init_lcd+2
  2225  0246  0823               	movf	?___lldiv+3,w
  2226  0247  00B0               	movwf	??_init_lcd+3
  2227                           
  2228                           ;main.c: 58: prog_lcd(0x30);
  2229  0248  3030               	movlw	48
  2230  0249  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  2231                           
  2232                           ;main.c: 59: prog_lcd(0x38);
  2233  024E  3038               	movlw	56
  2234  024F  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  2235                           
  2236                           ;main.c: 60: prog_lcd(0x01); _delay(IFOSC/500);
  2237  0254  3001               	movlw	1
  2238  0255  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  2239  025A  3000               	movlw	0
  2240  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2241  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2242  025D  00A3               	movwf	___lldiv@divisor+3
  2243  025E  3000               	movlw	0
  2244  025F  00A2               	movwf	___lldiv@divisor+2
  2245  0260  3001               	movlw	1
  2246  0261  00A1               	movwf	___lldiv@divisor+1
  2247  0262  30F4               	movlw	244
  2248  0263  00A0               	movwf	___lldiv@divisor
  2249  0264  300B               	movlw	low (_IFOSC-__stringbase)
  2250  0265  0084               	movwf	4
  2251  0266  120A  118A  2600  120A  118A  	fcall	stringdir
  2252  026B  00A4               	movwf	___lldiv@dividend
  2253  026C  120A  118A  2600  120A  118A  	fcall	stringdir
  2254  0271  00A5               	movwf	___lldiv@dividend+1
  2255  0272  120A  118A  2600  120A  118A  	fcall	stringdir
  2256  0277  00A6               	movwf	___lldiv@dividend+2
  2257  0278  120A  118A  2600  120A  118A  	fcall	stringdir
  2258  027D  00A7               	movwf	___lldiv@dividend+3
  2259  027E  120A  118A  258B  120A  118A  	fcall	___lldiv
  2260  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0285  0820               	movf	?___lldiv,w
  2263  0286  00AD               	movwf	??_init_lcd
  2264  0287  0821               	movf	?___lldiv+1,w
  2265  0288  00AE               	movwf	??_init_lcd+1
  2266  0289  0822               	movf	?___lldiv+2,w
  2267  028A  00AF               	movwf	??_init_lcd+2
  2268  028B  0823               	movf	?___lldiv+3,w
  2269  028C  00B0               	movwf	??_init_lcd+3
  2270                           
  2271                           ;main.c: 61: prog_lcd(0x0C);
  2272  028D  300C               	movlw	12
  2273  028E  120A  118A  2520  120A  118A  	fcall	_prog_lcd
  2274                           
  2275                           ;main.c: 62: prog_lcd(0x06);
  2276  0293  3006               	movlw	6
  2277  0294  120A  118A  2520   	fcall	_prog_lcd
  2278  0297  0008               	return
  2279  0298                     __end_of_init_lcd:	
  2280                           ;main.c: 63: return;
  2281                           
  2282                           
  2283                           	psect	text10
  2284  0520                     __ptext10:	
  2285 ;; *************** function _prog_lcd *****************
  2286 ;; Defined at:
  2287 ;;		line 47 in file "main.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  msg             1    wreg     unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  msg             1   12[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0
  2302 ;;      Locals:         0       1       0       0       0
  2303 ;;      Temps:          0       4       0       0       0
  2304 ;;      Totals:         0       5       0       0       0
  2305 ;;Total ram usage:        5 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    2
  2308 ;; This function calls:
  2309 ;;		___lldiv
  2310 ;; This function is called by:
  2311 ;;		_init_lcd
  2312 ;;		_main_lcd
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _prog_lcd
  2319  0520                     _prog_lcd:	
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _prog_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2323                           ;prog_lcd@msg stored from wreg
  2324  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0521  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0522  00AC               	movwf	prog_lcd@msg
  2327                           
  2328                           ;main.c: 48: LCD.RS = 0;
  2329  0523  1009               	bcf	9,0
  2330                           
  2331                           ;main.c: 49: PORTD = msg;
  2332  0524  082C               	movf	prog_lcd@msg,w
  2333  0525  0088               	movwf	8	;volatile
  2334                           
  2335                           ;main.c: 50: LCD.EN = 1; _delay(IFOSC/1000000);
  2336  0526  1489               	bsf	9,1
  2337  0527  3000               	movlw	0
  2338  0528  00A3               	movwf	___lldiv@divisor+3
  2339  0529  300F               	movlw	15
  2340  052A  00A2               	movwf	___lldiv@divisor+2
  2341  052B  3042               	movlw	66
  2342  052C  00A1               	movwf	___lldiv@divisor+1
  2343  052D  3040               	movlw	64
  2344  052E  00A0               	movwf	___lldiv@divisor
  2345  052F  300B               	movlw	low (_IFOSC-__stringbase)
  2346  0530  0084               	movwf	4
  2347  0531  120A  118A  2600  120A  118A  	fcall	stringdir
  2348  0536  00A4               	movwf	___lldiv@dividend
  2349  0537  120A  118A  2600  120A  118A  	fcall	stringdir
  2350  053C  00A5               	movwf	___lldiv@dividend+1
  2351  053D  120A  118A  2600  120A  118A  	fcall	stringdir
  2352  0542  00A6               	movwf	___lldiv@dividend+2
  2353  0543  120A  118A  2600  120A  118A  	fcall	stringdir
  2354  0548  00A7               	movwf	___lldiv@dividend+3
  2355  0549  120A  118A  258B  120A  118A  	fcall	___lldiv
  2356  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2357  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0550  0820               	movf	?___lldiv,w
  2359  0551  00A8               	movwf	??_prog_lcd
  2360  0552  0821               	movf	?___lldiv+1,w
  2361  0553  00A9               	movwf	??_prog_lcd+1
  2362  0554  0822               	movf	?___lldiv+2,w
  2363  0555  00AA               	movwf	??_prog_lcd+2
  2364  0556  0823               	movf	?___lldiv+3,w
  2365  0557  00AB               	movwf	??_prog_lcd+3
  2366                           
  2367                           ;main.c: 51: LCD.EN = 0; _delay(IFOSC/20000);
  2368  0558  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0559  1303               	bcf	3,6	;RP1=0, select bank0
  2370  055A  1089               	bcf	9,1
  2371  055B  3000               	movlw	0
  2372  055C  00A3               	movwf	___lldiv@divisor+3
  2373  055D  3000               	movlw	0
  2374  055E  00A2               	movwf	___lldiv@divisor+2
  2375  055F  304E               	movlw	78
  2376  0560  00A1               	movwf	___lldiv@divisor+1
  2377  0561  3020               	movlw	32
  2378  0562  00A0               	movwf	___lldiv@divisor
  2379  0563  300B               	movlw	low (_IFOSC-__stringbase)
  2380  0564  0084               	movwf	4
  2381  0565  120A  118A  2600  120A  118A  	fcall	stringdir
  2382  056A  00A4               	movwf	___lldiv@dividend
  2383  056B  120A  118A  2600  120A  118A  	fcall	stringdir
  2384  0570  00A5               	movwf	___lldiv@dividend+1
  2385  0571  120A  118A  2600  120A  118A  	fcall	stringdir
  2386  0576  00A6               	movwf	___lldiv@dividend+2
  2387  0577  120A  118A  2600  120A  118A  	fcall	stringdir
  2388  057C  00A7               	movwf	___lldiv@dividend+3
  2389  057D  120A  118A  258B   	fcall	___lldiv
  2390  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0582  0820               	movf	?___lldiv,w
  2393  0583  00A8               	movwf	??_prog_lcd
  2394  0584  0821               	movf	?___lldiv+1,w
  2395  0585  00A9               	movwf	??_prog_lcd+1
  2396  0586  0822               	movf	?___lldiv+2,w
  2397  0587  00AA               	movwf	??_prog_lcd+2
  2398  0588  0823               	movf	?___lldiv+3,w
  2399  0589  00AB               	movwf	??_prog_lcd+3
  2400  058A  0008               	return
  2401  058B                     __end_of_prog_lcd:	
  2402                           ;main.c: 52: return;
  2403                           
  2404                           
  2405                           	psect	text11
  2406  0402                     __ptext11:	
  2407 ;; *************** function _beep *****************
  2408 ;; Defined at:
  2409 ;;		line 31 in file "main.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  j               2   12[BANK0 ] int 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2423 ;;      Params:         0       0       0       0       0
  2424 ;;      Locals:         0       2       0       0       0
  2425 ;;      Temps:          0       4       0       0       0
  2426 ;;      Totals:         0       6       0       0       0
  2427 ;;Total ram usage:        6 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    2
  2430 ;; This function calls:
  2431 ;;		___lldiv
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function _beep
  2439  0402                     _beep:	
  2440                           
  2441                           ;main.c: 32: _delay(IFOSC/10);
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _beep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2445  0402  3000               	movlw	0
  2446  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0405  00A3               	movwf	___lldiv@divisor+3
  2449  0406  3000               	movlw	0
  2450  0407  00A2               	movwf	___lldiv@divisor+2
  2451  0408  3000               	movlw	0
  2452  0409  00A1               	movwf	___lldiv@divisor+1
  2453  040A  300A               	movlw	10
  2454  040B  00A0               	movwf	___lldiv@divisor
  2455  040C  300B               	movlw	low (_IFOSC-__stringbase)
  2456  040D  0084               	movwf	4
  2457  040E  120A  118A  2600  120A  118A  	fcall	stringdir
  2458  0413  00A4               	movwf	___lldiv@dividend
  2459  0414  120A  118A  2600  120A  118A  	fcall	stringdir
  2460  0419  00A5               	movwf	___lldiv@dividend+1
  2461  041A  120A  118A  2600  120A  118A  	fcall	stringdir
  2462  041F  00A6               	movwf	___lldiv@dividend+2
  2463  0420  120A  118A  2600  120A  118A  	fcall	stringdir
  2464  0425  00A7               	movwf	___lldiv@dividend+3
  2465  0426  120A  118A  258B  120A  118A  	fcall	___lldiv
  2466  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2467  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2468  042D  0820               	movf	?___lldiv,w
  2469  042E  00A8               	movwf	??_beep
  2470  042F  0821               	movf	?___lldiv+1,w
  2471  0430  00A9               	movwf	??_beep+1
  2472  0431  0822               	movf	?___lldiv+2,w
  2473  0432  00AA               	movwf	??_beep+2
  2474  0433  0823               	movf	?___lldiv+3,w
  2475  0434  00AB               	movwf	??_beep+3
  2476                           
  2477                           ;main.c: 33: for (int j = 0; j < 100; ++j) {
  2478  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0437  01AC               	clrf	beep@j
  2481  0438  01AD               	clrf	beep@j+1
  2482  0439                     L1:	
  2483  0439  082D               	movf	beep@j+1,w
  2484  043A  3A80               	xorlw	128
  2485  043B  00FF               	movwf	127
  2486  043C  3080               	movlw	128
  2487  043D  027F               	subwf	127,w
  2488  043E  1D03               	skipz
  2489  043F  2C42               	goto	u975
  2490  0440  3064               	movlw	100
  2491  0441  022C               	subwf	beep@j,w
  2492  0442                     u975:	
  2493  0442  1803               	btfsc	3,0
  2494  0443  0008               	return
  2495                           
  2496                           ;main.c: 34: RA5 = 1; _delay(IFOSC/1000);
  2497  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0446  1685               	bsf	5,5	;volatile
  2500  0447  3000               	movlw	0
  2501  0448  00A3               	movwf	___lldiv@divisor+3
  2502  0449  3000               	movlw	0
  2503  044A  00A2               	movwf	___lldiv@divisor+2
  2504  044B  3003               	movlw	3
  2505  044C  00A1               	movwf	___lldiv@divisor+1
  2506  044D  30E8               	movlw	232
  2507  044E  00A0               	movwf	___lldiv@divisor
  2508  044F  300B               	movlw	low (_IFOSC-__stringbase)
  2509  0450  0084               	movwf	4
  2510  0451  120A  118A  2600  120A  118A  	fcall	stringdir
  2511  0456  00A4               	movwf	___lldiv@dividend
  2512  0457  120A  118A  2600  120A  118A  	fcall	stringdir
  2513  045C  00A5               	movwf	___lldiv@dividend+1
  2514  045D  120A  118A  2600  120A  118A  	fcall	stringdir
  2515  0462  00A6               	movwf	___lldiv@dividend+2
  2516  0463  120A  118A  2600  120A  118A  	fcall	stringdir
  2517  0468  00A7               	movwf	___lldiv@dividend+3
  2518  0469  120A  118A  258B  120A  118A  	fcall	___lldiv
  2519  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2520  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0470  0820               	movf	?___lldiv,w
  2522  0471  00A8               	movwf	??_beep
  2523  0472  0821               	movf	?___lldiv+1,w
  2524  0473  00A9               	movwf	??_beep+1
  2525  0474  0822               	movf	?___lldiv+2,w
  2526  0475  00AA               	movwf	??_beep+2
  2527  0476  0823               	movf	?___lldiv+3,w
  2528  0477  00AB               	movwf	??_beep+3
  2529                           
  2530                           ;main.c: 35: RA5 = 0; _delay(IFOSC/2000);
  2531  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2533  047A  1285               	bcf	5,5	;volatile
  2534  047B  3000               	movlw	0
  2535  047C  00A3               	movwf	___lldiv@divisor+3
  2536  047D  3000               	movlw	0
  2537  047E  00A2               	movwf	___lldiv@divisor+2
  2538  047F  3007               	movlw	7
  2539  0480  00A1               	movwf	___lldiv@divisor+1
  2540  0481  30D0               	movlw	208
  2541  0482  00A0               	movwf	___lldiv@divisor
  2542  0483  300B               	movlw	low (_IFOSC-__stringbase)
  2543  0484  0084               	movwf	4
  2544  0485  120A  118A  2600  120A  118A  	fcall	stringdir
  2545  048A  00A4               	movwf	___lldiv@dividend
  2546  048B  120A  118A  2600  120A  118A  	fcall	stringdir
  2547  0490  00A5               	movwf	___lldiv@dividend+1
  2548  0491  120A  118A  2600  120A  118A  	fcall	stringdir
  2549  0496  00A6               	movwf	___lldiv@dividend+2
  2550  0497  120A  118A  2600  120A  118A  	fcall	stringdir
  2551  049C  00A7               	movwf	___lldiv@dividend+3
  2552  049D  120A  118A  258B  120A  118A  	fcall	___lldiv
  2553  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2554  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2555  04A4  0820               	movf	?___lldiv,w
  2556  04A5  00A8               	movwf	??_beep
  2557  04A6  0821               	movf	?___lldiv+1,w
  2558  04A7  00A9               	movwf	??_beep+1
  2559  04A8  0822               	movf	?___lldiv+2,w
  2560  04A9  00AA               	movwf	??_beep+2
  2561  04AA  0823               	movf	?___lldiv+3,w
  2562  04AB  00AB               	movwf	??_beep+3
  2563  04AC  3001               	movlw	1
  2564  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2565  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2566  04AF  07AC               	addwf	beep@j,f
  2567  04B0  1803               	skipnc
  2568  04B1  0AAD               	incf	beep@j+1,f
  2569  04B2  3000               	movlw	0
  2570  04B3  07AD               	addwf	beep@j+1,f
  2571  04B4  2C39               	goto	L1
  2572  04B5                     __end_of_beep:	
  2573                           
  2574                           	psect	text12
  2575  058B                     __ptext12:	
  2576 ;; *************** function ___lldiv *****************
  2577 ;; Defined at:
  2578 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  divisor         4    0[BANK0 ] unsigned long 
  2581 ;;  dividend        4    4[BANK0 ] unsigned long 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  quotient        4    5[COMMON] unsigned long 
  2584 ;;  counter         1    9[COMMON] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  4    0[BANK0 ] unsigned long 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       8       0       0       0
  2595 ;;      Locals:         5       0       0       0       0
  2596 ;;      Temps:          1       0       0       0       0
  2597 ;;      Totals:         6       8       0       0       0
  2598 ;;Total ram usage:       14 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_beep
  2605 ;;		_putch
  2606 ;;		_prog_lcd
  2607 ;;		_init_lcd
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function ___lldiv
  2613  058B                     ___lldiv:	
  2614                           
  2615                           ;incstack = 0
  2616                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2617  058B  3000               	movlw	0
  2618  058C  00F8               	movwf	___lldiv@quotient+3
  2619  058D  3000               	movlw	0
  2620  058E  00F7               	movwf	___lldiv@quotient+2
  2621  058F  3000               	movlw	0
  2622  0590  00F6               	movwf	___lldiv@quotient+1
  2623  0591  3000               	movlw	0
  2624  0592  00F5               	movwf	___lldiv@quotient
  2625  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0595  0823               	movf	___lldiv@divisor+3,w
  2628  0596  0422               	iorwf	___lldiv@divisor+2,w
  2629  0597  0421               	iorwf	___lldiv@divisor+1,w
  2630  0598  0420               	iorwf	___lldiv@divisor,w
  2631  0599  1903               	skipnz
  2632  059A  2DE2               	goto	l946
  2633  059B  01F9               	clrf	___lldiv@counter
  2634  059C  0AF9               	incf	___lldiv@counter,f
  2635  059D                     l932:	
  2636  059D  1BA3               	btfsc	___lldiv@divisor+3,7
  2637  059E  2DAD               	goto	l934
  2638  059F  3001               	movlw	1
  2639  05A0  00F4               	movwf	??___lldiv
  2640  05A1                     u545:	
  2641  05A1  1003               	clrc
  2642  05A2  0DA0               	rlf	___lldiv@divisor,f
  2643  05A3  0DA1               	rlf	___lldiv@divisor+1,f
  2644  05A4  0DA2               	rlf	___lldiv@divisor+2,f
  2645  05A5  0DA3               	rlf	___lldiv@divisor+3,f
  2646  05A6  0BF4               	decfsz	??___lldiv,f
  2647  05A7  2DA1               	goto	u545
  2648  05A8  3001               	movlw	1
  2649  05A9  00F4               	movwf	??___lldiv
  2650  05AA  0874               	movf	??___lldiv,w
  2651  05AB  07F9               	addwf	___lldiv@counter,f
  2652  05AC  2D9D               	goto	l932
  2653  05AD                     l934:	
  2654  05AD  3001               	movlw	1
  2655  05AE  00F4               	movwf	??___lldiv
  2656  05AF                     u565:	
  2657  05AF  1003               	clrc
  2658  05B0  0DF5               	rlf	___lldiv@quotient,f
  2659  05B1  0DF6               	rlf	___lldiv@quotient+1,f
  2660  05B2  0DF7               	rlf	___lldiv@quotient+2,f
  2661  05B3  0DF8               	rlf	___lldiv@quotient+3,f
  2662  05B4  0BF4               	decfsz	??___lldiv,f
  2663  05B5  2DAF               	goto	u565
  2664  05B6  0823               	movf	___lldiv@divisor+3,w
  2665  05B7  0227               	subwf	___lldiv@dividend+3,w
  2666  05B8  1D03               	skipz
  2667  05B9  2DC4               	goto	u575
  2668  05BA  0822               	movf	___lldiv@divisor+2,w
  2669  05BB  0226               	subwf	___lldiv@dividend+2,w
  2670  05BC  1D03               	skipz
  2671  05BD  2DC4               	goto	u575
  2672  05BE  0821               	movf	___lldiv@divisor+1,w
  2673  05BF  0225               	subwf	___lldiv@dividend+1,w
  2674  05C0  1D03               	skipz
  2675  05C1  2DC4               	goto	u575
  2676  05C2  0820               	movf	___lldiv@divisor,w
  2677  05C3  0224               	subwf	___lldiv@dividend,w
  2678  05C4                     u575:	
  2679  05C4  1C03               	skipc
  2680  05C5  2DD5               	goto	l942
  2681  05C6  0820               	movf	___lldiv@divisor,w
  2682  05C7  02A4               	subwf	___lldiv@dividend,f
  2683  05C8  0821               	movf	___lldiv@divisor+1,w
  2684  05C9  1C03               	skipc
  2685  05CA  0F21               	incfsz	___lldiv@divisor+1,w
  2686  05CB  02A5               	subwf	___lldiv@dividend+1,f
  2687  05CC  0822               	movf	___lldiv@divisor+2,w
  2688  05CD  1C03               	skipc
  2689  05CE  0F22               	incfsz	___lldiv@divisor+2,w
  2690  05CF  02A6               	subwf	___lldiv@dividend+2,f
  2691  05D0  0823               	movf	___lldiv@divisor+3,w
  2692  05D1  1C03               	skipc
  2693  05D2  0F23               	incfsz	___lldiv@divisor+3,w
  2694  05D3  02A7               	subwf	___lldiv@dividend+3,f
  2695  05D4  1475               	bsf	___lldiv@quotient,0
  2696  05D5                     l942:	
  2697  05D5  3001               	movlw	1
  2698  05D6                     u585:	
  2699  05D6  1003               	clrc
  2700  05D7  0CA3               	rrf	___lldiv@divisor+3,f
  2701  05D8  0CA2               	rrf	___lldiv@divisor+2,f
  2702  05D9  0CA1               	rrf	___lldiv@divisor+1,f
  2703  05DA  0CA0               	rrf	___lldiv@divisor,f
  2704  05DB  3EFF               	addlw	-1
  2705  05DC  1D03               	skipz
  2706  05DD  2DD6               	goto	u585
  2707  05DE  3001               	movlw	1
  2708  05DF  02F9               	subwf	___lldiv@counter,f
  2709  05E0  1D03               	btfss	3,2
  2710  05E1  2DAD               	goto	l934
  2711  05E2                     l946:	
  2712  05E2  0878               	movf	___lldiv@quotient+3,w
  2713  05E3  00A3               	movwf	?___lldiv+3
  2714  05E4  0877               	movf	___lldiv@quotient+2,w
  2715  05E5  00A2               	movwf	?___lldiv+2
  2716  05E6  0876               	movf	___lldiv@quotient+1,w
  2717  05E7  00A1               	movwf	?___lldiv+1
  2718  05E8  0875               	movf	___lldiv@quotient,w
  2719  05E9  00A0               	movwf	?___lldiv
  2720  05EA  0008               	return
  2721  05EB                     __end_of___lldiv:	
  2722                           
  2723                           	psect	text13
  2724  0702                     __ptext13:	
  2725 ;; *************** function _raycast_intersection_cleared *****************
  2726 ;; Defined at:
  2727 ;;		line 84 in file "main.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0
  2743 ;;      Temps:          4       0       0       0       0
  2744 ;;      Totals:         4       0       0       0       0
  2745 ;;Total ram usage:        4 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		Interrupt level 1
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _raycast_intersection_cleared
  2756  0702                     _raycast_intersection_cleared:	
  2757                           
  2758                           ;main.c: 85: RB7 = !RB7;
  2759  0702  3080               	movlw	128
  2760  0703  0686               	xorwf	6,f
  2761                           
  2762                           ;main.c: 86: FAN.count++;
  2763  0704  3001               	movlw	1
  2764  0705  07CF               	addwf	_FAN,f	;volatile
  2765  0706  1803               	skipnc
  2766  0707  0AD0               	incf	_FAN+1,f	;volatile
  2767  0708  3000               	movlw	0
  2768  0709  07D0               	addwf	_FAN+1,f	;volatile
  2769                           
  2770                           ;main.c: 87: INTF = 0;
  2771  070A  108B               	bcf	11,1	;volatile
  2772                           
  2773                           ;main.c: 88: return;
  2774  070B  0873               	movf	??_raycast_intersection_cleared+3,w
  2775  070C  00FF               	movwf	127
  2776  070D  0872               	movf	??_raycast_intersection_cleared+2,w
  2777  070E  008A               	movwf	10
  2778  070F  0871               	movf	??_raycast_intersection_cleared+1,w
  2779  0710  0084               	movwf	4
  2780  0711  0E70               	swapf	??_raycast_intersection_cleared^(0+-128),w
  2781  0712  0083               	movwf	3
  2782  0713  0EFE               	swapf	126,f
  2783  0714  0E7E               	swapf	126,w
  2784  0715  0009               	retfie
  2785  0716                     __end_of_raycast_intersection_cleared:	
  2786  007E                     btemp	set	126	;btemp
  2787  007E                     wtemp0	set	126
  2788                           
  2789                           	psect	intentry
  2790  0004                     __pintentry:	
  2791                           ;incstack = 0
  2792                           ; Regs used in _raycast_intersection_cleared: [wreg]
  2793                           
  2794  0004                     interrupt_function:	
  2795  007E                     saved_w	set	btemp
  2796  0004  00FE               	movwf	btemp
  2797  0005  0E03               	swapf	3,w
  2798  0006  00F0               	movwf	??_raycast_intersection_cleared
  2799  0007  0804               	movf	4,w
  2800  0008  00F1               	movwf	??_raycast_intersection_cleared+1
  2801  0009  080A               	movf	10,w
  2802  000A  00F2               	movwf	??_raycast_intersection_cleared+2
  2803  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2804  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2805  000D  087F               	movf	btemp+1,w
  2806  000E  00F3               	movwf	??_raycast_intersection_cleared+3
  2807  000F  120A  118A  2F02   	ljmp	_raycast_intersection_cleared


Data Sizes:
    Strings     48
    Constant    18
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     47      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> printf@c(BANK0[1]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[10]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___wmul
    _rps_timer1->___wmul
    _printf->___wmul
    _putch->___lldiv
    ___lwdiv->___wmul
    _init_lcd->___lldiv
    _prog_lcd->___lldiv
    _beep->___lldiv

Critical Paths under _raycast_intersection_cleared in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_main_lcd
    _rps_timer1->___lwdiv
    _main_lcd->_printf
    _printf->___lwmod
    _putch->___lldiv
    ___lwmod->___lwdiv
    _init_lcd->_prog_lcd
    _prog_lcd->___lldiv
    _beep->___lldiv

Critical Paths under _raycast_intersection_cleared in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _raycast_intersection_cleared in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _raycast_intersection_cleared in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _raycast_intersection_cleared in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   16377
                                             39 BANK0      8     8      0
                            ___lwdiv
                             ___wmul
                               _beep
                           _init_lcd
                           _main_lcd
                             _printf
                           _prog_lcd
                         _rps_timer1
 ---------------------------------------------------------------------------------
 (1) _rps_timer1                                          18     6     12    1737
                                              8 BANK0     18     6     12
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _main_lcd                                             6     0      6    4977
                                             33 BANK0      6     0      6
                             _printf
                           _prog_lcd
 ---------------------------------------------------------------------------------
 (1) _printf                                              23    19      4    3583
                                             14 BANK0     19    15      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                5     5      0    1244
                                              8 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     410
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     692
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             4     4      0    2466
                                             13 BANK0      4     4      0
                            ___lldiv
                           _prog_lcd
 ---------------------------------------------------------------------------------
 (1) _prog_lcd                                             5     5      0    1244
                                              8 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _beep                                                 6     6      0    1268
                                              8 BANK0      6     6      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8    1222
                                              4 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _raycast_intersection_cleared                         4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _beep
     ___lldiv
   _init_lcd
     ___lldiv
     _prog_lcd
       ___lldiv
   _main_lcd
     _printf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       ___wmul
       _isdigit
       _putch
         ___lldiv
     _prog_lcd
       ___lldiv
   _printf
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
     ___wmul
     _isdigit
     _putch
       ___lldiv
   _prog_lcd
     ___lldiv
   _rps_timer1
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 _raycast_intersection_cleared (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2F      39       5       71.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Sep 11 18:52:33 2017

                                    pc 0002                            __CFG_CP$OFF 0000  
                                   fsr 0004                    ___wmul@multiplicand 0076  
                                  l221 06EB                                    l126 014C  
                                  l137 01D5                                    l932 059D  
                                  l942 05D5                                    l934 05AD  
                                  _FAN 004F                                    l946 05E2  
                                  l972 0733                                    l978 06E3  
                                  _LCD 0009                                    _RA5 002D  
                                  _RB7 0037                                    _PR2 0092  
                         __CFG_CPD$OFF 0000                                    u545 05A1  
                                  u705 066D                                    u715 0677  
                                  u635 06EC                                    u565 05AF  
                                  u645 06F3                                    u575 05C4  
                                  u585 05D6                                    u745 0691  
                                  u825 00A3                                    u675 0655  
                                  u915 015B                                    u765 06A2  
                                  u695 0661                                    u775 06AB  
                                  u875 0134                                    u975 0442  
                                  u995 02A0                                    fsr0 0004  
                                  indf 0000                           __CFG_LVP$OFF 0000  
                                 l1000 0652                                   l1002 0660  
                                 l1012 0681                                   l1030 06AA  
                                 l1110 011D                                   l1008 0676  
                                 l1024 068E                                   l1104 0117  
                                 l1026 069C                                   l1034 06B5  
                                 l1140 0195                                   l1132 0185  
                                 l1124 016B                                   l1116 013E  
                                 l1126 016F                                   l1142 002C  
                                 l1136 018F                                   l1128 0173  
                                 l1080 00AE                                   l1072 009B  
                                 l1064 0060                                   l1082 00C2  
                                 l1058 0049                                   l1076 00AC  
                                 l1092 00E7                                   l1244 0398  
                                 l1086 00D1                                   l1094 00FE  
                                 l1088 00DE                                   l1192 030A  
                                 l1178 02A9                                   l1188 0303  
                                 STR_1 0643                                   STR_2 0639  
                                 STR_3 0618                                   STR_4 0629  
                                 u1030 03C2                                   u1015 02FD  
                                 u1040 03E2                                   u1025 0342  
                                 _INTF 0059                                   _TMR1 000E  
                         __CFG_WRT$OFF 0000                                   _beep 0402  
                                 _main 034F                                   btemp 007E  
                                 start 0012                                  ?_beep 0070  
                                ?_main 0070                          __CFG_WDTE$OFF 0000  
                      __end_of___lldiv 05EB                                  _T1CON 0010  
                                _T2CON 0012                                  _IFOSC 0610  
                      __end_of___lwdiv 0686                        __end_of___lwmod 06BA  
                                _PORTD 0008                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                       _rps_timer1$542 0038                                  beep@j 002C  
                      __end_of_dpowers 0610                        __end_of_isdigit 0735  
                                _putch 04B5                         __CFG_BOREN$OFF 0000  
                                pclath 000A                                  status 0003  
                                wtemp0 007E                        __initialization 0015  
                         __end_of_beep 04B5                           __end_of_main 0402  
                               ??_beep 0028                                 ??_main 0047  
                               _CCPR1L 0015                                 ?_putch 0070  
                               _T1FOSC 0616                                 _INTCON 000B  
                               _RPSMIN 0614                         __CFG_PWRTE$OFF 0000  
                               ___wmul 06E1                           main_lcd@duty 0045  
                     __end_of_main_lcd 06E1                              ??___lldiv 0074  
                            ??___lwdiv 0024                              ??___lwmod 002C  
                     __end_of_init_lcd 0298                                 _printf 0025  
                            ??_isdigit 0074                                 saved_w 007E  
                     __end_of_prog_lcd 058B                        __CFG_FOSC$EXTRC 0000  
              __end_of__initialization 0021                          __end_of_IFOSC 0614  
                       __pcstackCOMMON 0070                           __pidataBANK0 0735  
                        __end_of_putch 0520                                ??_putch 0028  
                           __pmaintext 034F                                ?___wmul 0074  
                           __pintentry 0004                                _CCP1CON 0017  
                              ?_printf 002E                             __stringtab 0600  
                            ?_main_lcd 0041                              ?_init_lcd 0070  
                            ?_prog_lcd 0070                                ___lldiv 058B  
                      __size_of___wmul 0021                                ___lwdiv 0648  
                              ___lwmod 0686                          main_lcd@value 0041  
                              __ptext1 0298                                __ptext2 06BA  
                              __ptext3 0025                                __ptext4 04B5  
                              __ptext5 0727                                __ptext6 06E1  
                              __ptext7 0686                                __ptext8 0648  
                              __ptext9 01D6                        __size_of_printf 01B1  
                              _dpowers 0606                                _isdigit 0727  
                 end_of_initialization 0021                             ??_main_lcd 007A  
                           ??_init_lcd 002D   __end_of_raycast_intersection_cleared 0716  
__size_of_raycast_intersection_cleared 0014           _raycast_intersection_cleared 0702  
                      ___lldiv@divisor 0020                        ___lldiv@counter 0079  
                              printf@c 0040                                printf@f 003D  
                           ??_prog_lcd 0028                             _rps_timer1 0298  
                          prog_lcd@msg 002C                         __end_of_T1FOSC 0618  
                          printf@width 003E                         __end_of_RPSMIN 0616  
        ?_raycast_intersection_cleared 0070                         __end_of___wmul 0702  
                       __end_of_printf 01D6                    start_initialization 0015  
                          rps_timer1@t 0032                            rps_timer1@x 0028  
                             ??___wmul 0078                             init_fetch0 0716  
                          __pdataBANK0 004F                               ??_printf 0032  
                            ___latbits 0002                          __pcstackBANK0 0020  
                          ?_rps_timer1 0028                      __size_of_main_lcd 0027  
                    __size_of_init_lcd 00C2                       ___lwdiv@dividend 0022  
                             ?___lldiv 0020         ??_raycast_intersection_cleared 0070  
                             ?___lwdiv 0020                               ?___lwmod 0028  
                    __size_of_prog_lcd 006B                              __pstrings 0600  
                             ?_isdigit 0070                       ___lwdiv@quotient 0025  
                       __size_of_putch 006B                      interrupt_function 0004  
                       ___wmul@product 0078                    __size_of_rps_timer1 00B7  
                          __stringbase 0605                      ___wmul@multiplier 0074  
                           printf@flag 0038                             printf@prec 0037  
                     __size_of___lldiv 0060                       __size_of___lwdiv 003E  
                     __size_of___lwmod 0034                     __end_of__stringtab 0606  
                          _isdigit$324 0074                       __size_of_isdigit 000E  
                      ___lwdiv@divisor 0020                        ___lwdiv@counter 0027  
                             __ptext10 0520                               __ptext11 0402  
                             __ptext12 058B                               __ptext13 0702  
                             _main_lcd 06BA                          __size_of_beep 00B3  
                             _init_lcd 01D6                          __size_of_main 00B3  
                             _prog_lcd 0520                              printf@len 0039  
                            printf@val 003B                               init_ram0 071A  
                             isdigit@c 0075                           ??_rps_timer1 0034  
                             intlevel1 0000                       ___lwmod@dividend 002A  
                     ___lldiv@dividend 0024                              stringcode 0600  
                             printf@ap 0035                               printf@cp 0036  
                             putch@msg 002C                     __end_of_rps_timer1 034F  
                           _OPTION_REG 0081                       ___lldiv@quotient 0075  
                      ___lwmod@divisor 0028                        ___lwmod@counter 002D  
                             stringdir 0600                               stringtab 0600  
