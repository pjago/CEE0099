

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Sep 11 14:56:58 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.43
    20                           ; Generated 25/07/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113                           
   114                           	psect	idataBANK0
   115  01CF                     __pidataBANK0:	
   116                           
   117                           ;initializer for _FAN
   118  01CF  34FF               	retlw	255
   119  01D0  34FF               	retlw	255
   120  01D1  3400               	retlw	0
   121  01D2  3400               	retlw	0
   122  01D3  3400               	retlw	0
   123  01D4  3400               	retlw	0
   124  01D5  3407               	retlw	7
   125  01D6  3400               	retlw	0
   126  01D7  3488               	retlw	136
   127  01D8  3413               	retlw	19
   128                           
   129                           	psect	strings
   130  01D9                     __pstrings:	
   131  01D9                     stringtab:	
   132  01D9                     __stringtab:	
   133  01D9                     stringcode:	
   134                           ;	String table - string pointers are 1 byte each
   135                           
   136  01D9                     stringdir:	
   137  01D9  3001               	movlw	high stringdir
   138  01DA  008A               	movwf	10
   139  01DB  0804               	movf	4,w
   140  01DC  0A84               	incf	4,f
   141  01DD  0782               	addwf	2,f
   142  01DE                     __stringbase:	
   143  01DE  3400               	retlw	0
   144  01DF                     __end_of__stringtab:	
   145  01DF                     _RPSMIN:	
   146  01DF  3408               	retlw	8
   147  01E0  3400               	retlw	0
   148  01E1                     __end_of_RPSMIN:	
   149  01E1                     _T1FOSC:	
   150  01E1  3400               	retlw	0
   151  01E2  3410               	retlw	16
   152  01E3                     __end_of_T1FOSC:	
   153  000E                     _TMR1	set	14
   154  000B                     _INTCON	set	11
   155  0012                     _T2CON	set	18
   156  0015                     _CCPR1L	set	21
   157  0017                     _CCP1CON	set	23
   158  0010                     _T1CON	set	16
   159  0059                     _INTF	set	89
   160  0037                     _RB7	set	55
   161  0086                     _TRISB	set	134
   162  0081                     _OPTION_REG	set	129
   163  0087                     _TRISC	set	135
   164  0092                     _PR2	set	146
   165                           
   166                           ; #config settings
   167  0000                     
   168                           	psect	cinit
   169  0015                     start_initialization:	
   170  0015                     __initialization:	
   171                           
   172                           ; Initialize objects allocated to BANK0
   173  0015  1383               	bcf	3,7	;select IRP bank0
   174  0016  304C               	movlw	low (__pdataBANK0+10)
   175  0017  00FD               	movwf	btemp+-1
   176  0018  3001               	movlw	high __pidataBANK0
   177  0019  00FE               	movwf	btemp
   178  001A  30CF               	movlw	low __pidataBANK0
   179  001B  00FF               	movwf	btemp+1
   180  001C  3042               	movlw	low __pdataBANK0
   181  001D  0084               	movwf	4
   182  001E  120A  118A  21C2   	fcall	init_ram0
   183  0021                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  0021                     __end_of__initialization:	
   187  0021  0183               	clrf	3
   188  0022  120A  118A  28DC   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	dataBANK0
   191  0042                     __pdataBANK0:	
   192  0042                     _FAN:	
   193  0042                     	ds	10
   194                           
   195                           	psect	inittext
   196  01BE                     init_fetch0:	
   197                           ;	Called with low address in FSR and high address in W
   198                           
   199  01BE  087E               	movf	126,w
   200  01BF  008A               	movwf	10
   201  01C0  087F               	movf	127,w
   202  01C1  0082               	movwf	2
   203  01C2                     init_ram0:	
   204                           ;Called with:
   205                           ;	high address of idata address in btemp 
   206                           ;	low address of idata address in btemp+1 
   207                           ;	low address of data in FSR
   208                           ;	high address + 1 of data in btemp-1
   209                           
   210  01C2  21BE  120A  118A   	fcall	init_fetch0
   211  01C5  0080               	movwf	0
   212  01C6  0A84               	incf	4,f
   213  01C7  0804               	movf	4,w
   214  01C8  067D               	xorwf	125,w
   215  01C9  1903               	btfsc	3,2
   216  01CA  3400               	retlw	0
   217  01CB  0AFF               	incf	127,f
   218  01CC  1903               	btfsc	3,2
   219  01CD  0AFE               	incf	126,f
   220  01CE  29C2               	goto	init_ram0
   221                           
   222                           	psect	cstackCOMMON
   223  0070                     __pcstackCOMMON:	
   224  0070                     ?_raycast_intersection_cleared:	
   225  0070                     ??_raycast_intersection_cleared:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 2 bytes @ 0x0
   233  0070                     	ds	4
   234  0074                     ?___wmul:	
   235  0074                     ___wmul@multiplier:	
   236                           ; 2 bytes @ 0x4
   237                           
   238                           
   239                           ; 2 bytes @ 0x4
   240  0074                     	ds	2
   241  0076                     ___wmul@multiplicand:	
   242                           
   243                           ; 2 bytes @ 0x6
   244  0076                     	ds	2
   245  0078                     ??___wmul:	
   246  0078                     ___wmul@product:	
   247                           ; 1 bytes @ 0x8
   248                           
   249                           
   250                           ; 2 bytes @ 0x8
   251  0078                     	ds	2
   252                           
   253                           	psect	cstackBANK0
   254  0020                     __pcstackBANK0:	
   255  0020                     ?___lwdiv:	
   256  0020                     ___lwdiv@divisor:	
   257                           ; 2 bytes @ 0x0
   258                           
   259                           
   260                           ; 2 bytes @ 0x0
   261  0020                     	ds	2
   262  0022                     ___lwdiv@dividend:	
   263                           
   264                           ; 2 bytes @ 0x2
   265  0022                     	ds	2
   266  0024                     ??___lwdiv:	
   267                           
   268                           ; 1 bytes @ 0x4
   269  0024                     	ds	1
   270  0025                     ___lwdiv@quotient:	
   271                           
   272                           ; 2 bytes @ 0x5
   273  0025                     	ds	2
   274  0027                     ___lwdiv@counter:	
   275                           
   276                           ; 1 bytes @ 0x7
   277  0027                     	ds	1
   278  0028                     ?_rps_timer1:	
   279  0028                     rps_timer1@x:	
   280                           ; 10 bytes @ 0x8
   281                           
   282                           
   283                           ; 10 bytes @ 0x8
   284  0028                     	ds	10
   285  0032                     rps_timer1@t:	
   286                           
   287                           ; 2 bytes @ 0x12
   288  0032                     	ds	2
   289  0034                     ??_rps_timer1:	
   290                           
   291                           ; 1 bytes @ 0x14
   292  0034                     	ds	4
   293  0038                     _rps_timer1$455:	
   294                           
   295                           ; 2 bytes @ 0x18
   296  0038                     	ds	2
   297  003A                     ??_main:	
   298                           
   299                           ; 1 bytes @ 0x1A
   300  003A                     	ds	8
   301                           
   302                           	psect	maintext
   303  00DC                     __pmaintext:	
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 60 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  2   48[None  ] int 
   316 ;; Registers used:
   317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0
   325 ;;      Temps:          0       8       0       0       0
   326 ;;      Totals:         0       8       0       0       0
   327 ;;Total ram usage:        8 bytes
   328 ;; Hardware stack levels required when called:    3
   329 ;; This function calls:
   330 ;;		___lwdiv
   331 ;;		___wmul
   332 ;;		_rps_timer1
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           
   339                           ;psect for function _main
   340  00DC                     _main:	
   341                           
   342                           ;main.c: 63: T1CON = 0xFB;
   343                           
   344                           ;incstack = 0
   345                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   346  00DC  30FB               	movlw	251
   347  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   348  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   349  00DF  0090               	movwf	16	;volatile
   350                           
   351                           ;main.c: 64: CCP1CON = 0x0F;
   352  00E0  300F               	movlw	15
   353  00E1  0097               	movwf	23	;volatile
   354                           
   355                           ;main.c: 65: CCPR1L = 0;
   356  00E2  0195               	clrf	21	;volatile
   357                           
   358                           ;main.c: 66: PR2 = 100;
   359  00E3  3064               	movlw	100
   360  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   361  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   362  00E6  0092               	movwf	18	;volatile
   363                           
   364                           ;main.c: 67: T2CON = 0x04;
   365  00E7  3004               	movlw	4
   366  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   367  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   368  00EA  0092               	movwf	18	;volatile
   369                           
   370                           ;main.c: 68: TRISC = 0xFB;
   371  00EB  30FB               	movlw	251
   372  00EC  1683               	bsf	3,5	;RP0=1, select bank1
   373  00ED  1303               	bcf	3,6	;RP1=0, select bank1
   374  00EE  0087               	movwf	7	;volatile
   375                           
   376                           ;main.c: 69: OPTION_REG = 0x00;
   377  00EF  0181               	clrf	1	;volatile
   378                           
   379                           ;main.c: 70: TRISB = 0x7F;
   380  00F0  307F               	movlw	127
   381  00F1  0086               	movwf	6	;volatile
   382                           
   383                           ;main.c: 71: INTCON = 0x90;
   384  00F2  3090               	movlw	144
   385  00F3  008B               	movwf	11	;volatile
   386  00F4                     l700:	
   387                           ;main.c: 75: while (1) {
   388                           
   389                           
   390                           ;main.c: 76: CCPR1L = 100 * FAN.value / FAN.max;
   391  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   392  00F5  084B               	movf	_FAN+9,w	;volatile
   393  00F6  00A1               	movwf	___lwdiv@divisor+1
   394  00F7  084A               	movf	_FAN+8,w	;volatile
   395  00F8  00A0               	movwf	___lwdiv@divisor
   396  00F9  0847               	movf	_FAN+5,w	;volatile
   397  00FA  00F5               	movwf	___wmul@multiplier+1
   398  00FB  0846               	movf	_FAN+4,w	;volatile
   399  00FC  00F4               	movwf	___wmul@multiplier
   400  00FD  3064               	movlw	100
   401  00FE  00F6               	movwf	___wmul@multiplicand
   402  00FF  3000               	movlw	0
   403  0100  00F7               	movwf	___wmul@multiplicand+1
   404  0101  120A  118A  2189  120A  118A  	fcall	___wmul
   405  0106  0875               	movf	?___wmul+1,w
   406  0107  1283               	bcf	3,5	;RP0=0, select bank0
   407  0108  1303               	bcf	3,6	;RP1=0, select bank0
   408  0109  00A3               	movwf	___lwdiv@dividend+1
   409  010A  0874               	movf	?___wmul,w
   410  010B  00A2               	movwf	___lwdiv@dividend
   411  010C  120A  118A  214B  120A  118A  	fcall	___lwdiv
   412  0111  1283               	bcf	3,5	;RP0=0, select bank0
   413  0112  1303               	bcf	3,6	;RP1=0, select bank0
   414  0113  0820               	movf	?___lwdiv,w
   415  0114  0095               	movwf	21	;volatile
   416                           
   417                           ;main.c: 77: FAN = rps_timer1(FAN, TMR1);
   418  0115  3028               	movlw	rps_timer1@x& (0+255)
   419  0116  0084               	movwf	4
   420  0117  3042               	movlw	low _FAN
   421  0118  00BA               	movwf	??_main
   422  0119  0804               	movf	4,w
   423  011A  00BB               	movwf	??_main+1
   424  011B  300A               	movlw	10
   425  011C  00BC               	movwf	??_main+2
   426  011D                     u330:	
   427  011D  083A               	movf	??_main,w
   428  011E  0084               	movwf	4
   429  011F  1383               	bcf	3,7	;select IRP bank0
   430  0120  0800               	movf	0,w
   431  0121  00BD               	movwf	??_main+3
   432  0122  0ABA               	incf	??_main,f
   433  0123  083B               	movf	??_main+1,w
   434  0124  0084               	movwf	4
   435  0125  083D               	movf	??_main+3,w
   436  0126  0080               	movwf	0
   437  0127  0ABB               	incf	??_main+1,f
   438  0128  0BBC               	decfsz	??_main+2,f
   439  0129  291D               	goto	u330
   440  012A  080F               	movf	15,w	;volatile
   441  012B  00B3               	movwf	rps_timer1@t+1
   442  012C  080E               	movf	14,w	;volatile
   443  012D  00B2               	movwf	rps_timer1@t
   444  012E  120A  118A  2025  120A  118A  	fcall	_rps_timer1
   445  0133  3042               	movlw	_FAN& (0+255)
   446  0134  0084               	movwf	4
   447  0135  1283               	bcf	3,5	;RP0=0, select bank0
   448  0136  1303               	bcf	3,6	;RP1=0, select bank0
   449  0137  3028               	movlw	low ?_rps_timer1
   450  0138  00BE               	movwf	??_main+4
   451  0139  0804               	movf	4,w
   452  013A  00BF               	movwf	??_main+5
   453  013B  300A               	movlw	10
   454  013C  00C0               	movwf	??_main+6
   455  013D                     u340:	
   456  013D  083E               	movf	??_main+4,w
   457  013E  0084               	movwf	4
   458  013F  1383               	bcf	3,7	;select IRP bank0
   459  0140  0800               	movf	0,w
   460  0141  00C1               	movwf	??_main+7
   461  0142  0ABE               	incf	??_main+4,f
   462  0143  083F               	movf	??_main+5,w
   463  0144  0084               	movwf	4
   464  0145  0841               	movf	??_main+7,w
   465  0146  0080               	movwf	0
   466  0147  0ABF               	incf	??_main+5,f
   467  0148  0BC0               	decfsz	??_main+6,f
   468  0149  293D               	goto	u340
   469  014A  28F4               	goto	l700
   470  014B                     __end_of_main:	
   471                           ;main.c: 78: }
   472                           ;main.c: 79: return 0;
   473                           ;	Return value of _main is never used
   474                           
   475                           
   476                           	psect	text1
   477  0025                     __ptext1:	
   478 ;; *************** function _rps_timer1 *****************
   479 ;; Defined at:
   480 ;;		line 41 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;  x              10    8[BANK0 ] volatile struct .
   483 ;;  t               2   18[BANK0 ] unsigned int 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  10    8[BANK0 ] struct .
   488 ;; Registers used:
   489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0      12       0       0       0
   496 ;;      Locals:         0       2       0       0       0
   497 ;;      Temps:          0       4       0       0       0
   498 ;;      Totals:         0      18       0       0       0
   499 ;;Total ram usage:       18 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    2
   502 ;; This function calls:
   503 ;;		___lwdiv
   504 ;;		___wmul
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _rps_timer1
   512  0025                     _rps_timer1:	
   513                           
   514                           ;main.c: 42: if (x.time > t) {
   515                           
   516                           ;incstack = 0
   517                           ; Regs used in _rps_timer1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   518  0025  1283               	bcf	3,5	;RP0=0, select bank0
   519  0026  1303               	bcf	3,6	;RP1=0, select bank0
   520  0027  082B               	movf	rps_timer1@x+3,w	;volatile
   521  0028  0233               	subwf	rps_timer1@t+1,w
   522  0029  1D03               	skipz
   523  002A  282D               	goto	u295
   524  002B  082A               	movf	rps_timer1@x+2,w	;volatile
   525  002C  0232               	subwf	rps_timer1@t,w
   526  002D                     u295:	
   527  002D  1803               	skipnc
   528  002E  2836               	goto	l654
   529                           
   530                           ;main.c: 43: x.count = 0;
   531  002F  01A8               	clrf	rps_timer1@x	;volatile
   532  0030  01A9               	clrf	rps_timer1@x+1	;volatile
   533                           
   534                           ;main.c: 44: x.time = t;
   535  0031  0833               	movf	rps_timer1@t+1,w
   536  0032  00AB               	movwf	rps_timer1@x+3	;volatile
   537  0033  0832               	movf	rps_timer1@t,w
   538  0034  00AA               	movwf	rps_timer1@x+2	;volatile
   539                           
   540                           ;main.c: 45: }
   541  0035  0008               	return
   542  0036                     l654:	
   543                           
   544                           ;main.c: 46: else if (x.count > 0) {
   545  0036  0828               	movf	rps_timer1@x,w	;volatile
   546  0037  0429               	iorwf	rps_timer1@x+1,w	;volatile
   547  0038  1903               	btfsc	3,2
   548  0039  2897               	goto	l668
   549                           
   550                           ;main.c: 47: x.value = T1FOSC / (t - x.time) * x.count / x.div;
   551  003A  092A               	comf	rps_timer1@x+2,w	;volatile
   552  003B  00B4               	movwf	??_rps_timer1
   553  003C  092B               	comf	rps_timer1@x+3,w	;volatile
   554  003D  00B5               	movwf	??_rps_timer1+1
   555  003E  0AB4               	incf	??_rps_timer1,f
   556  003F  1903               	skipnz
   557  0040  0AB5               	incf	??_rps_timer1+1,f
   558  0041  0832               	movf	rps_timer1@t,w
   559  0042  0734               	addwf	??_rps_timer1,w
   560  0043  00A0               	movwf	___lwdiv@divisor
   561  0044  0833               	movf	rps_timer1@t+1,w
   562  0045  1803               	skipnc
   563  0046  0A33               	incf	rps_timer1@t+1,w
   564  0047  0735               	addwf	??_rps_timer1+1,w
   565  0048  00A1               	movwf	___lwdiv@divisor+1
   566  0049  3003               	movlw	low (_T1FOSC-__stringbase)
   567  004A  0084               	movwf	4
   568  004B  120A  118A  21D9  120A  118A  	fcall	stringdir
   569  0050  00A2               	movwf	___lwdiv@dividend
   570  0051  120A  118A  21D9  120A  118A  	fcall	stringdir
   571  0056  00A3               	movwf	___lwdiv@dividend+1
   572  0057  120A  118A  214B  120A  118A  	fcall	___lwdiv
   573  005C  1283               	bcf	3,5	;RP0=0, select bank0
   574  005D  1303               	bcf	3,6	;RP1=0, select bank0
   575  005E  0821               	movf	?___lwdiv+1,w
   576  005F  00F5               	movwf	___wmul@multiplier+1
   577  0060  0820               	movf	?___lwdiv,w
   578  0061  00F4               	movwf	___wmul@multiplier
   579  0062  0829               	movf	rps_timer1@x+1,w	;volatile
   580  0063  00F7               	movwf	___wmul@multiplicand+1
   581  0064  0828               	movf	rps_timer1@x,w	;volatile
   582  0065  00F6               	movwf	___wmul@multiplicand
   583  0066  120A  118A  2189  120A  118A  	fcall	___wmul
   584  006B  0875               	movf	?___wmul+1,w
   585  006C  1283               	bcf	3,5	;RP0=0, select bank0
   586  006D  1303               	bcf	3,6	;RP1=0, select bank0
   587  006E  00B9               	movwf	_rps_timer1$455+1
   588  006F  0874               	movf	?___wmul,w
   589  0070  00B8               	movwf	_rps_timer1$455
   590                           
   591                           ;main.c: 47: x.value = T1FOSC / (t - x.time) * x.count / x.div;
   592  0071  082F               	movf	rps_timer1@x+7,w	;volatile
   593  0072  00A1               	movwf	___lwdiv@divisor+1
   594  0073  082E               	movf	rps_timer1@x+6,w	;volatile
   595  0074  00A0               	movwf	___lwdiv@divisor
   596  0075  0839               	movf	_rps_timer1$455+1,w
   597  0076  00A3               	movwf	___lwdiv@dividend+1
   598  0077  0838               	movf	_rps_timer1$455,w
   599  0078  00A2               	movwf	___lwdiv@dividend
   600  0079  120A  118A  214B  120A  118A  	fcall	___lwdiv
   601  007E  1283               	bcf	3,5	;RP0=0, select bank0
   602  007F  1303               	bcf	3,6	;RP1=0, select bank0
   603  0080  0821               	movf	?___lwdiv+1,w
   604  0081  00AD               	movwf	rps_timer1@x+5	;volatile
   605  0082  0820               	movf	?___lwdiv,w
   606  0083  00AC               	movwf	rps_timer1@x+4	;volatile
   607                           
   608                           ;main.c: 48: if (x.value > x.max) x.max = x.value;
   609  0084  082D               	movf	rps_timer1@x+5,w	;volatile
   610  0085  0231               	subwf	rps_timer1@x+9,w	;volatile
   611  0086  1D03               	skipz
   612  0087  288A               	goto	u315
   613  0088  082C               	movf	rps_timer1@x+4,w	;volatile
   614  0089  0230               	subwf	rps_timer1@x+8,w	;volatile
   615  008A                     u315:	
   616  008A  1803               	skipnc
   617  008B  2890               	goto	l664
   618  008C  082D               	movf	rps_timer1@x+5,w	;volatile
   619  008D  00B1               	movwf	rps_timer1@x+9	;volatile
   620  008E  082C               	movf	rps_timer1@x+4,w	;volatile
   621  008F  00B0               	movwf	rps_timer1@x+8	;volatile
   622  0090                     l664:	
   623                           
   624                           ;main.c: 49: x.count = 0;
   625  0090  01A8               	clrf	rps_timer1@x	;volatile
   626  0091  01A9               	clrf	rps_timer1@x+1	;volatile
   627                           
   628                           ;main.c: 50: x.time = t;
   629  0092  0833               	movf	rps_timer1@t+1,w
   630  0093  00AB               	movwf	rps_timer1@x+3	;volatile
   631  0094  0832               	movf	rps_timer1@t,w
   632  0095  00AA               	movwf	rps_timer1@x+2	;volatile
   633                           
   634                           ;main.c: 51: }
   635  0096  0008               	return
   636  0097                     l668:	
   637                           
   638                           ;main.c: 52: else if ( (t - x.time) > (T1FOSC / RPSMIN) ) {
   639  0097  092A               	comf	rps_timer1@x+2,w	;volatile
   640  0098  00B4               	movwf	??_rps_timer1
   641  0099  092B               	comf	rps_timer1@x+3,w	;volatile
   642  009A  00B5               	movwf	??_rps_timer1+1
   643  009B  0AB4               	incf	??_rps_timer1,f
   644  009C  1903               	skipnz
   645  009D  0AB5               	incf	??_rps_timer1+1,f
   646  009E  0832               	movf	rps_timer1@t,w
   647  009F  0734               	addwf	??_rps_timer1,w
   648  00A0  00B6               	movwf	??_rps_timer1+2
   649  00A1  0833               	movf	rps_timer1@t+1,w
   650  00A2  1803               	skipnc
   651  00A3  0A33               	incf	rps_timer1@t+1,w
   652  00A4  0735               	addwf	??_rps_timer1+1,w
   653  00A5  00B7               	movwf	??_rps_timer1+3
   654  00A6  3001               	movlw	low (_RPSMIN-__stringbase)
   655  00A7  0084               	movwf	4
   656  00A8  120A  118A  21D9  120A  118A  	fcall	stringdir
   657  00AD  00A0               	movwf	___lwdiv@divisor
   658  00AE  120A  118A  21D9  120A  118A  	fcall	stringdir
   659  00B3  00A1               	movwf	___lwdiv@divisor+1
   660  00B4  3003               	movlw	low (_T1FOSC-__stringbase)
   661  00B5  0084               	movwf	4
   662  00B6  120A  118A  21D9  120A  118A  	fcall	stringdir
   663  00BB  00A2               	movwf	___lwdiv@dividend
   664  00BC  120A  118A  21D9  120A  118A  	fcall	stringdir
   665  00C1  00A3               	movwf	___lwdiv@dividend+1
   666  00C2  120A  118A  214B  120A  118A  	fcall	___lwdiv
   667  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   668  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   669  00C9  0837               	movf	??_rps_timer1+3,w
   670  00CA  0221               	subwf	?___lwdiv+1,w
   671  00CB  1D03               	skipz
   672  00CC  28CF               	goto	u325
   673  00CD  0836               	movf	??_rps_timer1+2,w
   674  00CE  0220               	subwf	?___lwdiv,w
   675  00CF                     u325:	
   676  00CF  1803               	skipnc
   677  00D0  0008               	return
   678                           
   679                           ;main.c: 53: x.count = -1;
   680  00D1  30FF               	movlw	255
   681  00D2  00A8               	movwf	rps_timer1@x	;volatile
   682  00D3  30FF               	movlw	255
   683  00D4  00A9               	movwf	rps_timer1@x+1	;volatile
   684                           
   685                           ;main.c: 54: x.value = 0;
   686  00D5  01AC               	clrf	rps_timer1@x+4	;volatile
   687  00D6  01AD               	clrf	rps_timer1@x+5	;volatile
   688                           
   689                           ;main.c: 55: x.time = t;
   690  00D7  0833               	movf	rps_timer1@t+1,w
   691  00D8  00AB               	movwf	rps_timer1@x+3	;volatile
   692  00D9  0832               	movf	rps_timer1@t,w
   693  00DA  00AA               	movwf	rps_timer1@x+2	;volatile
   694  00DB  0008               	return
   695  00DC                     __end_of_rps_timer1:	
   696                           ;main.c: 56: }
   697                           ;main.c: 57: return x;
   698                           
   699                           
   700                           	psect	text2
   701  0189                     __ptext2:	
   702 ;; *************** function ___wmul *****************
   703 ;; Defined at:
   704 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  multiplier      2    4[COMMON] unsigned int 
   707 ;;  multiplicand    2    6[COMMON] unsigned int 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  product         2    8[COMMON] unsigned int 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  2    4[COMMON] unsigned int 
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         4       0       0       0       0
   720 ;;      Locals:         2       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0
   722 ;;      Totals:         6       0       0       0       0
   723 ;;Total ram usage:        6 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    1
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_rps_timer1
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function ___wmul
   736  0189                     ___wmul:	
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   740  0189  01F8               	clrf	___wmul@product
   741  018A  01F9               	clrf	___wmul@product+1
   742  018B                     l610:	
   743  018B  1C74               	btfss	___wmul@multiplier,0
   744  018C  2993               	goto	l136
   745  018D  0876               	movf	___wmul@multiplicand,w
   746  018E  07F8               	addwf	___wmul@product,f
   747  018F  1803               	skipnc
   748  0190  0AF9               	incf	___wmul@product+1,f
   749  0191  0877               	movf	___wmul@multiplicand+1,w
   750  0192  07F9               	addwf	___wmul@product+1,f
   751  0193                     l136:	
   752  0193  3001               	movlw	1
   753  0194                     u195:	
   754  0194  1003               	clrc
   755  0195  0DF6               	rlf	___wmul@multiplicand,f
   756  0196  0DF7               	rlf	___wmul@multiplicand+1,f
   757  0197  3EFF               	addlw	-1
   758  0198  1D03               	skipz
   759  0199  2994               	goto	u195
   760  019A  3001               	movlw	1
   761  019B                     u205:	
   762  019B  1003               	clrc
   763  019C  0CF5               	rrf	___wmul@multiplier+1,f
   764  019D  0CF4               	rrf	___wmul@multiplier,f
   765  019E  3EFF               	addlw	-1
   766  019F  1D03               	skipz
   767  01A0  299B               	goto	u205
   768  01A1  0874               	movf	___wmul@multiplier,w
   769  01A2  0475               	iorwf	___wmul@multiplier+1,w
   770  01A3  1D03               	btfss	3,2
   771  01A4  298B               	goto	l610
   772  01A5  0879               	movf	___wmul@product+1,w
   773  01A6  00F5               	movwf	?___wmul+1
   774  01A7  0878               	movf	___wmul@product,w
   775  01A8  00F4               	movwf	?___wmul
   776  01A9  0008               	return
   777  01AA                     __end_of___wmul:	
   778                           
   779                           	psect	text3
   780  014B                     __ptext3:	
   781 ;; *************** function ___lwdiv *****************
   782 ;; Defined at:
   783 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  divisor         2    0[BANK0 ] unsigned int 
   786 ;;  dividend        2    2[BANK0 ] unsigned int 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  quotient        2    5[BANK0 ] unsigned int 
   789 ;;  counter         1    7[BANK0 ] unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  2    0[BANK0 ] unsigned int 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       4       0       0       0
   800 ;;      Locals:         0       3       0       0       0
   801 ;;      Temps:          0       1       0       0       0
   802 ;;      Totals:         0       8       0       0       0
   803 ;;Total ram usage:        8 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_rps_timer1
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function ___lwdiv
   816  014B                     ___lwdiv:	
   817                           
   818                           ;incstack = 0
   819                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   820  014B  1283               	bcf	3,5	;RP0=0, select bank0
   821  014C  1303               	bcf	3,6	;RP1=0, select bank0
   822  014D  01A5               	clrf	___lwdiv@quotient
   823  014E  01A6               	clrf	___lwdiv@quotient+1
   824  014F  0820               	movf	___lwdiv@divisor,w
   825  0150  0421               	iorwf	___lwdiv@divisor+1,w
   826  0151  1903               	btfsc	3,2
   827  0152  2984               	goto	l644
   828  0153  01A7               	clrf	___lwdiv@counter
   829  0154  0AA7               	incf	___lwdiv@counter,f
   830  0155                     l632:	
   831  0155  1BA1               	btfsc	___lwdiv@divisor+1,7
   832  0156  2963               	goto	l634
   833  0157  3001               	movlw	1
   834  0158                     u235:	
   835  0158  1003               	clrc
   836  0159  0DA0               	rlf	___lwdiv@divisor,f
   837  015A  0DA1               	rlf	___lwdiv@divisor+1,f
   838  015B  3EFF               	addlw	-1
   839  015C  1D03               	skipz
   840  015D  2958               	goto	u235
   841  015E  3001               	movlw	1
   842  015F  00A4               	movwf	??___lwdiv
   843  0160  0824               	movf	??___lwdiv,w
   844  0161  07A7               	addwf	___lwdiv@counter,f
   845  0162  2955               	goto	l632
   846  0163                     l634:	
   847  0163  3001               	movlw	1
   848  0164                     u255:	
   849  0164  1003               	clrc
   850  0165  0DA5               	rlf	___lwdiv@quotient,f
   851  0166  0DA6               	rlf	___lwdiv@quotient+1,f
   852  0167  3EFF               	addlw	-1
   853  0168  1D03               	skipz
   854  0169  2964               	goto	u255
   855  016A  0821               	movf	___lwdiv@divisor+1,w
   856  016B  0223               	subwf	___lwdiv@dividend+1,w
   857  016C  1D03               	skipz
   858  016D  2970               	goto	u265
   859  016E  0820               	movf	___lwdiv@divisor,w
   860  016F  0222               	subwf	___lwdiv@dividend,w
   861  0170                     u265:	
   862  0170  1C03               	skipc
   863  0171  2979               	goto	l640
   864  0172  0820               	movf	___lwdiv@divisor,w
   865  0173  02A2               	subwf	___lwdiv@dividend,f
   866  0174  0821               	movf	___lwdiv@divisor+1,w
   867  0175  1C03               	skipc
   868  0176  03A3               	decf	___lwdiv@dividend+1,f
   869  0177  02A3               	subwf	___lwdiv@dividend+1,f
   870  0178  1425               	bsf	___lwdiv@quotient,0
   871  0179                     l640:	
   872  0179  3001               	movlw	1
   873  017A                     u275:	
   874  017A  1003               	clrc
   875  017B  0CA1               	rrf	___lwdiv@divisor+1,f
   876  017C  0CA0               	rrf	___lwdiv@divisor,f
   877  017D  3EFF               	addlw	-1
   878  017E  1D03               	skipz
   879  017F  297A               	goto	u275
   880  0180  3001               	movlw	1
   881  0181  02A7               	subwf	___lwdiv@counter,f
   882  0182  1D03               	btfss	3,2
   883  0183  2963               	goto	l634
   884  0184                     l644:	
   885  0184  0826               	movf	___lwdiv@quotient+1,w
   886  0185  00A1               	movwf	?___lwdiv+1
   887  0186  0825               	movf	___lwdiv@quotient,w
   888  0187  00A0               	movwf	?___lwdiv
   889  0188  0008               	return
   890  0189                     __end_of___lwdiv:	
   891                           
   892                           	psect	text4
   893  01AA                     __ptext4:	
   894 ;; *************** function _raycast_intersection_cleared *****************
   895 ;; Defined at:
   896 ;;		line 34 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          4       0       0       0       0
   913 ;;      Totals:         4       0       0       0       0
   914 ;;Total ram usage:        4 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		Interrupt level 1
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _raycast_intersection_cleared
   925  01AA                     _raycast_intersection_cleared:	
   926                           
   927                           ;main.c: 35: RB7 = !RB7;
   928  01AA  3080               	movlw	128
   929  01AB  0686               	xorwf	6,f
   930                           
   931                           ;main.c: 36: FAN.count++;
   932  01AC  3001               	movlw	1
   933  01AD  07C2               	addwf	_FAN,f	;volatile
   934  01AE  1803               	skipnc
   935  01AF  0AC3               	incf	_FAN+1,f	;volatile
   936  01B0  3000               	movlw	0
   937  01B1  07C3               	addwf	_FAN+1,f	;volatile
   938                           
   939                           ;main.c: 37: INTF = 0;
   940  01B2  108B               	bcf	11,1	;volatile
   941                           
   942                           ;main.c: 38: return;
   943  01B3  0873               	movf	??_raycast_intersection_cleared+3,w
   944  01B4  00FF               	movwf	127
   945  01B5  0872               	movf	??_raycast_intersection_cleared+2,w
   946  01B6  008A               	movwf	10
   947  01B7  0871               	movf	??_raycast_intersection_cleared+1,w
   948  01B8  0084               	movwf	4
   949  01B9  0E70               	swapf	??_raycast_intersection_cleared^(0+-128),w
   950  01BA  0083               	movwf	3
   951  01BB  0EFE               	swapf	126,f
   952  01BC  0E7E               	swapf	126,w
   953  01BD  0009               	retfie
   954  01BE                     __end_of_raycast_intersection_cleared:	
   955  007E                     btemp	set	126	;btemp
   956  007E                     wtemp0	set	126
   957                           
   958                           	psect	intentry
   959  0004                     __pintentry:	
   960                           ;incstack = 0
   961                           ; Regs used in _raycast_intersection_cleared: [wreg]
   962                           
   963  0004                     interrupt_function:	
   964  007E                     saved_w	set	btemp
   965  0004  00FE               	movwf	btemp
   966  0005  0E03               	swapf	3,w
   967  0006  00F0               	movwf	??_raycast_intersection_cleared
   968  0007  0804               	movf	4,w
   969  0008  00F1               	movwf	??_raycast_intersection_cleared+1
   970  0009  080A               	movf	10,w
   971  000A  00F2               	movwf	??_raycast_intersection_cleared+2
   972  000B  1283               	bcf	3,5	;RP0=0, select bank0
   973  000C  1303               	bcf	3,6	;RP1=0, select bank0
   974  000D  087F               	movf	btemp+1,w
   975  000E  00F3               	movwf	??_raycast_intersection_cleared+3
   976  000F  120A  118A  29AA   	ljmp	_raycast_intersection_cleared


Data Sizes:
    Strings     0
    Constant    4
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     34      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _rps_timer1->___wmul
    ___lwdiv->___wmul

Critical Paths under _raycast_intersection_cleared in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_rps_timer1
    _rps_timer1->___lwdiv

Critical Paths under _raycast_intersection_cleared in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _raycast_intersection_cleared in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _raycast_intersection_cleared in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _raycast_intersection_cleared in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2415
                                             26 BANK0      8     8      0
                            ___lwdiv
                             ___wmul
                         _rps_timer1
 ---------------------------------------------------------------------------------
 (1) _rps_timer1                                          18     6     12    1525
                                              8 BANK0     18     6     12
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     304
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _raycast_intersection_cleared                         4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _rps_timer1
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 _raycast_intersection_cleared (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Sep 11 14:56:58 2017

                                    pc 0002                            __CFG_CP$OFF 0000  
                                   fsr 0004                    ___wmul@multiplicand 0076  
                                  l136 0193                                    l610 018B  
                                  l700 00F4                                    l640 0179  
                                  l632 0155                                    l634 0163  
                                  l644 0184                                    l654 0036  
                                  l664 0090                                    l668 0097  
                                  _FAN 0042                                    _RB7 0037  
                                  u205 019B                                    u330 011D  
                                  u235 0158                                    u315 008A  
                                  u340 013D                                    u325 00CF  
                                  _PR2 0092                                    u255 0164  
                                  u265 0170                           __CFG_CPD$OFF 0000  
                                  u275 017A                                    u195 0194  
                                  u295 002D                                    fsr0 0004  
                                  indf 0000                           __CFG_LVP$OFF 0000  
                                 _INTF 0059                                   _TMR1 000E  
                         __CFG_WRT$OFF 0000                                   _main 00DC  
                                 btemp 007E                                   start 0012  
                                ?_main 0070                          __CFG_WDTE$OFF 0000  
                                _T1CON 0010                                  _T2CON 0012  
                      __end_of___lwdiv 0189                                  _TRISB 0086  
                                _TRISC 0087                         _rps_timer1$455 0038  
                       __CFG_BOREN$OFF 0000                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
                      __initialization 0015                           __end_of_main 014B  
                               ??_main 003A                                 _CCPR1L 0015  
                               _T1FOSC 01E1                                 _INTCON 000B  
                               _RPSMIN 01DF                         __CFG_PWRTE$OFF 0000  
                               ___wmul 0189                              ??___lwdiv 0024  
                               saved_w 007E                        __CFG_FOSC$EXTRC 0000  
              __end_of__initialization 0021                         __pcstackCOMMON 0070  
                         __pidataBANK0 01CF                             __pmaintext 00DC  
                              ?___wmul 0074                             __pintentry 0004  
                              _CCP1CON 0017                             __stringtab 01D9  
                      __size_of___wmul 0021                                ___lwdiv 014B  
                              __ptext1 0025                                __ptext2 0189  
                              __ptext3 014B                                __ptext4 01AA  
                 end_of_initialization 0021   __end_of_raycast_intersection_cleared 01BE  
__size_of_raycast_intersection_cleared 0014           _raycast_intersection_cleared 01AA  
                           _rps_timer1 0025                         __end_of_T1FOSC 01E3  
                       __end_of_RPSMIN 01E1          ?_raycast_intersection_cleared 0070  
                       __end_of___wmul 01AA                    start_initialization 0015  
                          rps_timer1@t 0032                            rps_timer1@x 0028  
                             ??___wmul 0078                             init_fetch0 01BE  
                          __pdataBANK0 0042                              ___latbits 0002  
                        __pcstackBANK0 0020                            ?_rps_timer1 0028  
                     ___lwdiv@dividend 0022         ??_raycast_intersection_cleared 0070  
                             ?___lwdiv 0020                              __pstrings 01D9  
                     ___lwdiv@quotient 0025                      interrupt_function 0004  
                       ___wmul@product 0078                    __size_of_rps_timer1 00B7  
                          __stringbase 01DE                      ___wmul@multiplier 0074  
                     __size_of___lwdiv 003E                     __end_of__stringtab 01DF  
                      ___lwdiv@divisor 0020                        ___lwdiv@counter 0027  
                        __size_of_main 006F                               init_ram0 01C2  
                         ??_rps_timer1 0034                               intlevel1 0000  
                            stringcode 01D9                     __end_of_rps_timer1 00DC  
                           _OPTION_REG 0081                               stringdir 01D9  
                             stringtab 01D9  
